openapi: 3.0.0
info:
  description: |
    # Getting Started
    Welcome to the Sumo Logic API reference. You can use these APIs to interact with the Sumo Logic platform. For information on the collector and search APIs see our [API home page](https://help.sumologic.com/APIs).
    ## API Endpoints
    Sumo Logic has several deployments in different geographic locations. You'll need to use the Sumo Logic API endpoint corresponding to your geographic location. See the table below for the different API endpoints by deployment. For details determining your account's deployment see [API endpoints](https://help.sumologic.com/?cid=3011).

      <table>
        <tr>
          <td> <strong>Deployment</strong> </td>
          <td> <strong>Endpoint</strong> </td>
        </tr>
        <tr>
          <td> AU </td>
          <td> https://api.au.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> CA </td>
          <td> https://api.ca.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> DE </td>
          <td> https://api.de.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> EU </td>
          <td> https://api.eu.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> FED </td>
          <td> https://api.fed.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> IN </td>
          <td> https://api.in.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> JP </td>
          <td> https://api.jp.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> US1 </td>
          <td> https://api.sumologic.com/api/ </td>
        </tr>
        <tr>
          <td> US2 </td>
          <td> https://api.us2.sumologic.com/api/ </td>
        </tr>
      </table>

    ## Authentication
    Sumo Logic supports the following options for API authentication:
    - Access ID and Access Key
    - Base64 encoded Access ID and Access Key

    See [Access Keys](https://help.sumologic.com/Manage/Security/Access-Keys) to generate an Access Key. Make sure to copy the key you create, because it is displayed only once.
    When you have an Access ID and Access Key you can execute requests such as the following:
      ```bash
      curl -u "<accessId>:<accessKey>" -X GET https://api.<deployment>.sumologic.com/api/v1/users
      ```

    Where `deployment` is either `au`, `ca`, `de`, `eu`, `fed`, `in`, `jp`, `us1`, or `us2`. See [API endpoints](#section/API-Endpoints) for details.

    If you prefer to use basic access authentication, you can do a Base64 encoding of your `<accessId>:<accessKey>` to authenticate your HTTPS request. The following is an example request, replace the placeholder `<encoded>` with your encoded Access ID and Access Key string:
      ```bash
      curl -H "Authorization: Basic <encoded>" -X GET https://api.<deployment>.sumologic.com/api/v1/users
      ```


    Refer to [API Authentication](https://help.sumologic.com/?cid=3012) for a Base64 example.

    ## Status Codes
    Generic status codes that apply to all our APIs. See the [HTTP status code registry](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml) for reference.
      <table>
        <tr>
          <td> <strong>HTTP Status Code</strong> </td>
          <td> <strong>Error Code</strong> </td>
          <td> <strong>Description</strong> </td>
        </tr>
        <tr>
          <td> 301 </td>
          <td> moved </td>
          <td> The requested resource SHOULD be accessed through returned URI in Location Header. See [troubleshooting](https://help.sumologic.com/APIs/Troubleshooting-APIs/API-301-Error-Moved) for details.</td>
        </tr>
        <tr>
          <td> 401 </td>
          <td> unauthorized </td>
          <td> Credential could not be verified.</td>
        </tr>
        <tr>
          <td> 403 </td>
          <td> forbidden </td>
          <td> This operation is not allowed for your account type or the user doesn't have the role capability to perform this action. See [troubleshooting](https://help.sumologic.com/APIs/Troubleshooting-APIs/API-403-Error-This-operation-is-not-allowed-for-your-account-type) for details.</td>
        </tr>
        <tr>
          <td> 404 </td>
          <td> notfound </td>
          <td> Requested resource could not be found. </td>
        </tr>
        <tr>
          <td> 405 </td>
          <td> method.unsupported </td>
          <td> Unsupported method for URL. </td>
        </tr>
        <tr>
          <td> 415 </td>
          <td> contenttype.invalid </td>
          <td> Invalid content type. </td>
        </tr>
        <tr>
          <td> 429 </td>
          <td> rate.limit.exceeded </td>
          <td> The API request rate is higher than 4 request per second or inflight API requests are higher than 10 request per second. </td>
        </tr>
        <tr>
          <td> 500 </td>
          <td> internal.error </td>
          <td> Internal server error. </td>
        </tr>
        <tr>
          <td> 503 </td>
          <td> service.unavailable </td>
          <td> Service is currently unavailable. </td>
        </tr>
      </table>

    ## Filtering
    Some API endpoints support filtering results on a specified set of fields. Each endpoint that supports filtering will list the fields that can be filtered. Multiple fields can be combined by using an ampersand `&` character.

    For example, to get 20 users whose `firstName` is `John` and `lastName` is `Doe`:
      ```bash
      api.sumologic.com/v1/users?limit=20&firstName=John&lastName=Doe
      ```

    ## Sorting
    Some API endpoints support sorting fields by using the `sortBy` query parameter. The default sort order is ascending. Prefix the field with a minus sign `-` to sort in descending order.

    For example, to get 20 users sorted by their `email` in descending order:
      ```bash
      api.sumologic.com/v1/users?limit=20&sort=-email
      ```

    ## Asynchronous Request
    Asynchronous requests do not wait for results, instead they immediately respond back with a job identifier while the job runs in the background. You can use the job identifier to track the status of the asynchronous job request. Here is a typical flow for an asynchronous request.
    1. Start an asynchronous job. On success, a job identifier is returned. The job identifier uniquely identifies
      your asynchronous job.

    2. Once started, use the job identifier from step 1 to track the status of your asynchronous job. An asynchronous
      request will typically provide an endpoint to poll for the status of asynchronous job. A successful response
      from the status endpoint will have the following structure:
      ```json
      {
          "status": "Status of asynchronous request",
          "statusMessage": "Optional message with additional information in case request succeeds",
          "error": "Error object in case request fails"
      }
      ```
      The `status` field can have one of the following values:
        1. `Success`: The job succeeded. The `statusMessage` field might have additional information.
        2. `InProgress`: The job is still running.
        3. `Failed`: The job failed. The `error` field in the response will have more information about the failure.

    3. Some asynchronous APIs may provide a third endpoint (like [export result](#operation/getAsyncExportResult))
      to fetch the result of an asynchronous job.


    ### Example
    Let's say we want to export a folder with the identifier `0000000006A2E86F`. We will use the [async export](#operation/beginAsyncExport) API to export all the content under the folder with `id=0000000006A2E86F`.
    1. Start an export job for the folder
      ```bash
      curl -X POST -u "<accessId>:<accessKey>" https://api.<deployment>.sumologic.com/api/v2/content/0000000006A2E86F/export
      ```
      See [authentication section](#section/Authentication) for more details about `accessId`, `accessKey`, and
      `deployment`.
      On success, you will get back a job identifier. In the response below, `C03E086C137F38B4` is the job identifier.
      ```bash
      {
          "id": "C03E086C137F38B4"
      }
      ```

    2. Now poll for the status of the asynchronous job with the [status](#operation/getAsyncExportStatus) endpoint.
      ```bash
      curl -X GET -u "<accessId>:<accessKey>" https://api.<deployment>.sumologic.com/api/v2/content/0000000006A2E86F/export/C03E086C137F38B4/status
      ```
      You may get a response like
      ```json
      {
          "status": "InProgress",
          "statusMessage": null,
          "error": null
      }
      ```
      It implies the job is still in progress. Keep polling till the status is either `Success` or `Failed`.

    3. When the asynchronous job completes (`status != "InProgress"`), you can fetch the results with the
      [export result](#operation/getAsyncExportResult) endpoint.
      ```bash
      curl -X GET -u "<accessId>:<accessKey>" https://api.<deployment>.sumologic.com/api/v2/content/0000000006A2E86F/export/C03E086C137F38B4/result
      ```

      The asynchronous job may fail (`status == "Failed"`). You can look at the `error` field for more details.
      ```json
      {
          "status": "Failed",
          "errors": {
              "code": "content1:too_many_items",
              "message": "Too many objects: object count(1100) was greater than limit 1000"
          }
      }
      ```


    ## Rate Limiting
    * A rate limit of four API requests per second (240 requests per minute) applies to all API calls from a user.
    * A rate limit of 10 concurrent requests to any API endpoint applies to an access key.

    If a rate is exceeded, a rate limit exceeded 429 status code is returned.

    ## Generating Clients
    You can use [OpenAPI Generator](https://openapi-generator.tech) to generate clients from the YAML file to access the API.

    ### Using [NPM](https://www.npmjs.com/get-npm)
    1. Install [NPM package wrapper](https://github.com/openapitools/openapi-generator-cli) globally, exposing the CLI
      on the command line:
      ```bash
      npm install @openapitools/openapi-generator-cli -g
      ```
      You can see detailed instructions [here](https://openapi-generator.tech/docs/installation#npm).

    2. Download the [YAML file](/docs/sumologic-api.yaml) and save it locally. Let's say the file is saved as `sumologic-api.yaml`.
    3. Use the following command to generate `python` client inside the `sumo/client/python` directory:
      ```bash
      openapi-generator generate -i sumologic-api.yaml -g python -o sumo/client/python
      ```


    ### Using [Homebrew](https://brew.sh/)
    1. Install OpenAPI Generator
      ```bash
      brew install openapi-generator
      ```

    2. Download the [YAML file](/docs/sumologic-api.yaml) and save it locally. Let's say the file is saved as `sumologic-api.yaml`.
    3. Use the following command to generate `python` client side code inside the `sumo/client/python` directory:
      ```bash
      openapi-generator generate -i sumologic-api.yaml -g python -o sumo/client/python
      ```
  title: Sumo Logic API
  version: 1.0.0
  x-logo:
    url: ./sumologic_logo.png
servers:
- description: AU deployment API server
  url: https://api.au.sumologic.com/api/
- description: CA deployment API server
  url: https://api.ca.sumologic.com/api/
- description: DE deployment API server
  url: https://api.de.sumologic.com/api/
- description: EU deployment API server
  url: https://api.eu.sumologic.com/api/
- description: FED deployment API server
  url: https://api.fed.sumologic.com/api/
- description: JP deployment API server
  url: https://api.jp.sumologic.com/api/
- description: IN deployment API server
  url: https://api.in.sumologic.com/api/
- description: US1 deployment API server
  url: https://api.sumologic.com/api/
- description: US2 deployment API server
  url: https://api.us2.sumologic.com/api/
security:
- basicAuth: []
tags:
- description: |
    Account Management API.

    Manage the custom subdomain for the URL used to access your Sumo Logic account. For more information see [Manage Organization](https://help.sumologic.com/Manage/01Account_Usage/05Manage_Organization).
  name: accountManagement
  x-displayName: Account
- description: |
    App installation API.

    View and install Sumo Logic Applications that deliver out-of-the-box dashboards, saved searches, and field extraction for popular data sources. For more information see [Sumo Logic Apps](https://help.sumologic.com/07Sumo-Logic-Apps).
  name: appManagement
  x-displayName: Apps (Beta)
- description: |
    Connection management API.

    Set up connections to send alerts to other tools. For more information see [Connections and Integrations](https://help.sumologic.com/?cid=1044).
  name: connectionManagement
  x-displayName: Connections (Beta)
- description: |
    Content management API.

    You can export, import, delete and copy content in your organization’s Library. For more information see [Library](https://help.sumologic.com/?cid=5173). You can perform the request as a Content Administrator by using the `isAdminMode` parameter. For more information see [Admin Mode](https://help.sumologic.com/Manage/Content_Sharing/Admin_Mode).
    <br/> <br/>
    ### Example
    The following example uses API endpoints in the US1 deployment. Sumo Logic has several deployments that are assigned depending on the geographic location and the date an account is created. For details determining your account's deployment see [API endpoints](https://help.sumologic.com/?cid=3011).
    The [Content Import API](#operation/beginAsyncImport) can be used to create or update a Search, Scheduled Search, or Dashboard. Here is an example creating a Scheduled Search:
    1. Get the identifier of your `Personal` folder.
      ```bash
      curl -X GET -u "<accessId>:<accessKey>" https://api.sumologic.com/api/v2/content/folders/personal
      ```

      Find the identifier of your `Personal` folder in the response.
      ```json
      {
          ...
          "id": "0000000006A2E86F", <----
          "name": "Personal",
          "itemType": "Folder",
          ...
      }
      ```

      You can use [getFolder](#operation/getFolder), [getAdminRecommededFolder](#operation/getAdminRecommendedFolderAsync),
      or [getGlobalFolder](#operation/getGlobalFolderAsync) endpoints to traverse the content tree and find the identifier of any
      folder you want to manage.

    2. Use the [Content Import API](#operation/beginAsyncImport) to create a new Scheduled Search inside your
      `Personal` folder.
      ```bash
      curl -X POST -u "<accessId>:<accessKey>" -H "Content-Type: application/json" -d @search.json https://api.sumologic.com/api/v2/content/folders/0000000006A2E86F/import
      ```

      The data file `search.json` in the above command has the following `SavedSearchWithScheduleSyncDefinition` object.
      ```json
      // file: search.json
      {
          "type": "SavedSearchWithScheduleSyncDefinition",
          "name": "demo-scheduled-search",
          "description": "Runs every hour with timerange of 15m and sends email notifications",
          "search": {
              "queryText": "\"error\" and \"warn\"",
              "defaultTimeRange": "-15m",
              "byReceiptTime": false,
              "viewName": "",
              "viewStartTime": null,
              "queryParameters": []
          },
          "searchSchedule": {
              "cronExpression": "0 0/15 * * * ? *",
              "displayableTimeRange": "-15m",
              "parseableTimeRange": {
                  "from": {
                      "relativeTime": "-15m",
                      "type": "RelativeTimeRangeBoundary"
                  },
                  "to": null,
                  "type": "BeginBoundedTimeRange"
              },
              "timeZone": "America/Los_Angeles",
              "threshold": null,
              "notification": {
                  "taskType": "EmailSearchNotificationSyncDefinition",
                  "toList": [
                      "ops@acme.org"
                  ],
                  "subjectTemplate": "Search Results: {{SearchName}}",
                  "includeQuery": true,
                  "includeResultSet": true,
                  "includeHistogram": true,
                  "includeCsvAttachment": false
              },
              "muteErrorEmails": false,
              "scheduleType": "1Hour",
              "parameters": []
          }
      }
      ```

      The response of above request will have the job identifier that you can use to track the status of the import job.
      ```json
      {
          "id": "74DC17FA765C7443"
      }
      ```

    3. Use the job identifier from the import request to get the [status](#operation/getAsyncImportStatus) of the
      import job.
      ```bash
      curl -X GET -u "<accessId>:<accessKey>" https://api.sumologic.com/api/v2/content/folders/0000000006A2E86F/import/74DC17FA765C7443/status
      ```

      If you are importing a large item, you might have to wait for the import job to finish. The following is an
      example response from a completed job.
      ```json
      {
          "status": "Success",
          "statusMessage": null,
          "error": null
      }
      ```
  name: contentManagement
  x-displayName: Content
- description: |
    Content permissions API.

    You can share your folders, searches, and dashboards with specific users or roles. For more information see [Share Content](https://help.sumologic.com/?cid=8675309). You can perform the request as a Content Administrator by using the `isAdminMode` parameter. For more information see [Admin Mode](https://help.sumologic.com/Manage/Content_Sharing/Admin_Mode).
  name: contentPermissions
  x-displayName: Permissions
- description: |
    Dashboard (New) management API.

    Dashboard (New) allows you to analyze metric and log data on the same dashboard, in a seamless view. This gives you control over the visual display of metric and log data. Dashboard (New) streamlines dashboard configurations and on-the-fly analytic visualizations with its new templating features. For more information see [Dashboard (New)](https://help.sumologic.com/?cid=5500).
  name: dashboardManagement
  x-displayName: Dashboard (New)
- description: |
    Dynamic Parsing management API.

    Dynamic Parsing allows automatic field extraction from your log messages when you run a search.  This allows you to view fields from logs without having to manually specify parsing logic. For more information  see [Dynamic Parsing](https://help.sumologic.com/?cid=20011).
  name: dynamicParsingRuleManagement
  x-displayName: Dynamic Parsing
- description: |
    Field Extraction Rule management API.

    Field Extraction Rules allow you to parse fields from your log messages at the time the messages are ingested eliminating the need to parse fields in your query. For more information see [Manage Field Extraction](https://help.sumologic.com/?cid=5313).
  name: extractionRuleManagement
  x-displayName: Field Extraction Rules
- description: |
    Field management API.

    Fields allow you to reference log data based on meaningful associations. They act as metadata tags that are assigned to your logs so you can search with them. Each field contains a key-value pair, where the field name is the key. Fields may be referred to as Log Metadata Fields. For more information see [Fields](https://help.sumologic.com/?cid=10116).
  name: fieldManagementV1
  x-displayName: Field Management
- description: |
    Folder management API.

    You can add folders and subfolders to the Library in order to organize your content for easy access or to share content. For more information see [Add Folders to the Library](https://help.sumologic.com/?cid=5020). You can perform the request as a Content Administrator by using the `isAdminMode` parameter. For more information see [Admin Mode](https://help.sumologic.com/Manage/Content_Sharing/Admin_Mode).
  name: folderManagement
  x-displayName: Folders
- description: |
    Ingest Budget management API.

    Ingest Budgets allow you to control the capacity of daily ingestion volume sent to Sumo Logic from Collectors. For more information see [Ingest Budgets](https://help.sumologic.com/?cid=5235).
  name: ingestBudgetManagementV1
  x-displayName: Ingest Budgets
- description: |
    Ingest Budget management API V2.

    Ingest Budgets V2 provide you the ability to create and assign budgets to your log data by Fields instead of using a Field Value. For more information see [Metadata Ingest Budgets](https://help.sumologic.com/?cid=52352).
  name: ingestBudgetManagementV2
  x-displayName: Ingest Budgets V2
- description: |
    Partition management API.

    Creating a Partition allows you to improve search performance by searching over a smaller number of messages. For more information see [Manage Partitions](https://help.sumologic.com/?cid=5231).
  name: partitionManagement
  x-displayName: Partitions
- description: |
    Role management API.

    Roles determine the functions that users are able to perform in Sumo Logic. To manage roles, you must have an administrator role or your role must have been assigned the manage users and roles capability. For more information see [Manage Roles](https://help.sumologic.com/?cid=5234).
  name: roleManagement
  x-displayName: Roles
- description: |
    Lookup Table management API.

    A Lookup Table is a table of data hosted on Sumo Logic that you can use to enrich the log and event data received by Sumo Logic. You must create a table schema before you can populate the table. For more information see [Lookup Tables](https://help.sumologic.com/?cid=10109).
  name: lookupManagement
  x-displayName: Lookup Tables
- description: |
    Scheduled View management API.

    Scheduled Views speed the search process for small and historical subsets of your data by functioning as a pre-aggregated index. For more information see [Manage Scheduled Views](https://help.sumologic.com/?cid=5128).
  name: scheduledViewManagement
  x-displayName: Scheduled Views
- description: |
    Tokens management API.

    Tokens are associated with your organization to authorize specific operations. Currently, we support collector registration tokens, which can be used to register Installed Collectors. Managing tokens requires the Manage Tokens role capability. For more information see [Installation Tokens](https://help.sumologic.com/?cid=0100).
  name: tokensLibraryManagement
  x-displayName: Tokens
- description: |
    Transformation Rule management API.
    Metrics Transformation Rules allow you control how long raw metrics are retained. You can also aggregate metrics at collection time and specify a separate retention period for the aggregated metrics. For more information see [Metrics Transformation Rules](https://help.sumologic.com/?cid=10117).
  name: transformationRuleManagement
  x-displayName: Transformation Rules (Beta)
- description: |
    User management API.

    To manage users, you must have the administrator role or your role must have been assigned the manage users and roles capability. For more information see [Manage Users](https://help.sumologic.com/?cid=1006).
  name: userManagement
  x-displayName: Users
- description: |
    Metrics Search management API.

    Save metrics searches in the content library and organize them in a folder hierarchy. Share useful queries with users in your organization. For more information see [Sharing Metric Charts](https://help.sumologic.com/Metrics/03-Metric-Charts/Share_a_Metric_Chart).
  name: metricsSearchesManagement
  x-displayName: Metrics Searches (Beta)
- description: |
    Metrics Query API.

    The Metrics Query API allows you to execute queries on various metrics and retrieve multiple time-series (data-points) over time range(s). For more information see [Metrics - Classic](https://help.sumologic.com/?cid=1079).
  name: metricsQuery
  x-displayName: Metrics Query
- description: |
    Access Key management API.

    Access Keys allow you to securely register new Collectors and access Sumo Logic APIs. For more information see [Access Keys](https://help.sumologic.com/?cid=6690).
  name: accessKeyManagement
  x-displayName: Access Keys
- description: |
    SAML configuration management API

    Organizations with Enterprise accounts can provision Security Assertion Markup Language (SAML) 2.0 to enable Single Sign-On (SSO) for user access to Sumo Logic. For more information see [SAML Configuration](https://help.sumologic.com/?cid=4016).
  name: samlConfigurationManagement
  x-displayName: SAML Configuration
- description: |
    Service Allowlist management API

    Service Allowlist Settings allow you to explicitly grant access to specific IP addresses and/or CIDR notations for logins, APIs, and dashboard access. For more information see [Service Allowlist Settings](https://help.sumologic.com/?cid=5454).
  name: serviceAllowlistManagement
  x-displayName: Service Allowlist
- description: |
    Health Events management API.

    Health Events allow you to keep track of the health of your Collectors and Sources. You can use them to find and investigate common errors and warnings that are known to cause collection issues. For more information see [Health Events](https://help.sumologic.com/?cid=0020).
  name: healthEvents
  x-displayName: Health Events
- description: |-
    Archive Ingestion Management API.

    Archive Ingestion allows you to ingest data from Archive destinations. You can use this API to ingest data from your Archive with an existing AWS S3 Archive Source. You need the Manage or View Collectors role capability to manage or view ingestion jobs. For more information see [Archive](https://help.sumologic.com/?cid=10011).
  name: archiveManagement
  x-displayName: Archive Ingestion Management
- description: |
    Log Search Estimated Usage API.

    Gets the estimated volume of data that would be scanned for a given log search in the Infrequent data tier, over a particular time range. In the Infrequent Data Tier, you pay per query, based on the amount data scanned. You can use this endpoint to get an estimate of the total data that would be scanned before running a query, and refine your query to scan less data, as necessary. For more information see [Infrequent data tier](https://help.sumologic.com/?cid=11987).
  name: logSearchesEstimatedUsage
  x-displayName: Log Search Estimated Usage
- description: |
    Password Policy Management API

    The password policy controls how user passwords are managed. The "Manage Password Policy" role capability is required to update the password policy. For more information see [how to set a password policy](https://help.sumologic.com/?cid=8595).
  name: passwordPolicy
  x-displayName: Password Policy
- description: |
    Policies management API.

    Policies control the security and share settings of your organization. For more information see [Security](https://help.sumologic.com/?cid=4041).
  name: policiesManagement
  x-displayName: Policies
- description: |
    Monitor Management API.


    Monitors continuously query your data to monitor and send notifications when specific events occur.
    For more information see [Monitors](https://help.sumologic.com/?cid=10020).
  name: monitorsLibraryManagement
  x-displayName: Monitors
paths:
  /v1/apps:
    get:
      description: Lists all available apps from the App Catalog.
      operationId: listApps
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAppsResult'
          description: List of all available apps.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List available apps.
      tags:
      - appManagement
  /v1/apps/{uuid}:
    get:
      description: Gets the app with the given universally unique identifier (UUID).
      operationId: getApp
      parameters:
      - description: The identifier of the app to retrieve.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
          description: The retrieved app.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get an app by UUID.
      tags:
      - appManagement
  /v1/apps/{uuid}/install:
    post:
      description: Installs the app with given UUID in the folder specified using
        destinationFolderId.
      operationId: installApp
      parameters:
      - description: UUID of the app to install.
        explode: false
        in: path
        name: uuid
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppInstallRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: App install job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: App installation failed with an error.
      summary: Install an app by UUID.
      tags:
      - appManagement
  /v1/apps/install/{jobId}/status:
    get:
      description: Get the status of an asynchronous app install request for the given
        job identifier.
      operationId: getAsyncInstallStatus
      parameters:
      - description: The identifier of the asynchronous install job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the app install job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: App installation failed with an error.
      summary: App install job status.
      tags:
      - appManagement
  /v1/connections:
    get:
      description: Get a list of all connections in the organization. The response
        is paginated with a default limit of 100 connections per page.
      operationId: listConnections
      parameters:
      - description: Limit the number of connections returned in the response. The
          number of connections returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConnectionsResponse'
          description: A paginated list of connections in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of connections.
      tags:
      - connectionManagement
    post:
      description: Create a new connection in the organization.
      operationId: createConnection
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionDefinition'
        description: Information about the new connection.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: The connection has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new connection.
      tags:
      - connectionManagement
  /v1/connections/test:
    post:
      description: Test a new connection url is valid and can connect.
      operationId: testConnection
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionDefinition'
        description: Information about the new connection.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestConnectionResponse'
          description: The connection url has been tested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Test a new connection url.
      tags:
      - connectionManagement
  /v1/connections/{id}:
    delete:
      description: Delete a connection with the given identifier.
      operationId: deleteConnection
      parameters:
      - description: Identifier of the connection to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Type of connection to delete. Valid values are `WebhookConnection`,
          `ServiceNowConnection`.
        explode: true
        in: query
        name: type
        required: true
        schema:
          pattern: ^(WebhookConnection|ServiceNowConnection)$
          type: string
          x-pattern-message: must be either `WebhookConnection` or `ServiceNowConnection`
        style: form
      responses:
        "204":
          description: Connection was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a connection.
      tags:
      - connectionManagement
    get:
      description: Get a connection with the given identifier.
      operationId: getConnection
      parameters:
      - description: Identifier of connection to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Type of connection to return. Valid values are `WebhookConnection`,
          `ServiceNowConnection`.
        explode: true
        in: query
        name: type
        required: true
        schema:
          default: WebhookConnection
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: Connection object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a connection.
      tags:
      - connectionManagement
    put:
      description: Update an existing connection.
      operationId: updateConnection
      parameters:
      - description: Identifier of the connection to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectionDefinition'
        description: Information to update about the connection.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
          description: The connection was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a connection.
      tags:
      - connectionManagement
  /v1/scheduledViews:
    get:
      description: Get a list of all scheduled views in the organization. The response
        is paginated with a default limit of 100 scheduled views per page.
      operationId: listScheduledViews
      parameters:
      - description: Limit the number of scheduled views returned in the response.
          The number of scheduled views returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListScheduledViewsResponse'
          description: A paginated list of scheduled views in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of scheduled views.
      tags:
      - scheduledViewManagement
    post:
      description: Creates a new scheduled view in the organization.
      operationId: createScheduledView
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScheduledViewDefinition'
        description: Information about the new scheduled view.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledView'
          description: The scheduled view has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new scheduled view.
      tags:
      - scheduledViewManagement
      x-tf-create: createScheduledView
  /v1/scheduledViews/{id}:
    get:
      description: Get a scheduled view with the given identifier.
      operationId: getScheduledView
      parameters:
      - description: Identifier of the scheduled view to fetch.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledView'
          description: Scheduled view object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a scheduled view.
      tags:
      - scheduledViewManagement
      x-tf-read: getScheduledView
    put:
      description: Update an existing scheduled view.
      operationId: updateScheduledView
      parameters:
      - description: Identifier of the scheduled view to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScheduledViewDefinition'
        description: Information to update about the scheduled view.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledView'
          description: The scheduled view was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a scheduled view.
      tags:
      - scheduledViewManagement
      x-tf-update: updateScheduledView
  /v1/scheduledViews/{id}/disable:
    delete:
      description: Disable a scheduled view with the given identifier.
      operationId: disableScheduledView
      parameters:
      - description: Identifier of the scheduled view to disable.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The scheduled view was disabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable a scheduled view.
      tags:
      - scheduledViewManagement
      x-tf-delete: deleteScheduledView
  /v1/scheduledViews/{id}/pause:
    post:
      description: Pause a scheduled view with the given identifier.
      operationId: pauseScheduledView
      parameters:
      - description: Identifier of the scheduled view to pause.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledView'
          description: The scheduled view was paused successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Pause a scheduled view.
      tags:
      - scheduledViewManagement
  /v1/scheduledViews/{id}/start:
    post:
      description: Start a scheduled view with the given identifier.
      operationId: startScheduledView
      parameters:
      - description: Identifier of the scheduled view to start.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduledView'
          description: The scheduled view was started successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start a scheduled view.
      tags:
      - scheduledViewManagement
  /v1/lookupTables:
    post:
      description: |-
        Create a new lookup table by providing a schema and specifying its configuration. Providing parentFolderId
         is mandatory. Use the [getItemByPath](#operation/getItemByPath) endpoint to get content id of a path.
        Please check [Content management API](#tag/contentManagement) and [Folder management API](#tag/folderManagement) for all available options.
      operationId: createTable
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupTableDefinition'
        description: The schema and configuration for the lookup table.
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupTable'
          description: Lookup table created successfully.
      summary: Create a lookup table.
      tags:
      - lookupManagement
  /v1/lookupTables/{id}:
    delete:
      description: Delete a lookup table completely.
      operationId: deleteTable
      parameters:
      - description: Identifier of the lookup table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      responses:
        "204":
          description: Deletion successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a lookup table.
      tags:
      - lookupManagement
    get:
      description: Get a lookup table for the given identifier.
      operationId: lookupTableById
      parameters:
      - description: Identifier of the lookup table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupTable'
          description: Definition of the lookup table.
      summary: Get a lookup table.
      tags:
      - lookupManagement
    put:
      description: Edit the lookup table data. All the fields are mandatory in the
        request.
      operationId: updateTable
      parameters:
      - description: Identifier of the lookup table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupUpdateDefinition'
        description: The configuration changes for the lookup table.
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupTable'
          description: Configuration updated successfully.
      summary: Edit a lookup table.
      tags:
      - lookupManagement
  /v1/lookupTables/{id}/upload:
    post:
      description: Create a request to populate a lookup table with a CSV file.
      operationId: uploadFile
      parameters:
      - description: Identifier of the lookup table to populate.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      - description: This indicates whether the file contents will be merged with
          existing data in the lookup table or not. If this is true then data with
          the same primary keys will be updated while the rest of the rows will be
          appended. By default, merge is false. The response includes a request identifier
          that you need to use in the [Request Status API](#operation/requestStatus)
          to track the status of the upload request.
        explode: true
        in: query
        name: merge
        required: false
        schema:
          default: false
          example: true
          type: boolean
        style: form
      - description: File encoding of file being uploaded.
        explode: true
        in: query
        name: fileEncoding
        required: false
        schema:
          default: UTF-8
          example: UTF-16
          type: string
        style: form
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: |-
                    The CSV file to upload.
                      - The size limit for the CSV file is 100MB.
                      - Use Unix format, with newlines ("\n") separating rows.
                      - The first row should contain headers that match the lookup table schema. Matching is
                        case-insensitive.
                  format: binary
                  type: string
              required:
              - file
              type: object
        required: true
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupRequestToken'
          description: The upload request was accepted. Use the provided token in
            a status request to track the status of the upload.
      summary: Upload a CSV file.
      tags:
      - lookupManagement
  /v1/lookupTables/jobs/{jobId}/status:
    get:
      description: Retrieve the status of a previously made request. If the request
        was successful, the status of the response object will be `Success`.
      operationId: requestJobStatus
      parameters:
      - description: An identifier returned in response to an asynchronous request.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          example: 0000000001C41AA3
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupAsyncJobStatus'
          description: The status of async job with given identifier.
      summary: Get the status of an async job.
      tags:
      - lookupManagement
  /v1/lookupTables/{id}/truncate:
    post:
      description: Delete all data from a lookup table.
      operationId: truncateTable
      parameters:
      - description: Identifier of the table to clear.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupRequestToken'
          description: The delete data request was accepted. Use the provided token
            in a status request to track the status of the delete.
      summary: Empty a lookup table.
      tags:
      - lookupManagement
  /v1/lookupTables/{id}/row:
    put:
      description: Insert or update a row of a lookup table with the given identifier.
        A new row is inserted if the primary key does not exist already, otherwise
        the existing row with the specified primary key is updated. All the fields
        of the lookup table are required and will be updated to the given values.
        In case a field is not specified then it will be assumed to be set to null.
        If the table size exceeds the maximum limit of 100MB then based on the size
        limit action of the table the update will be processed or discarded.
      operationId: updateTableRow
      parameters:
      - description: Identifier of the lookup table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowUpdateDefinition'
        description: Lookup table row update definition.
        required: true
      responses:
        "204":
          description: Row updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Insert or Update a lookup table row.
      tags:
      - lookupManagement
  /v1/lookupTables/{id}/deleteTableRow:
    put:
      description: Delete a row from lookup table by giving primary key. The complete
        set of primary key fields of the lookup table should be provided.
      operationId: deleteTableRow
      parameters:
      - description: Identifier of the lookup table.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowDeleteDefinition'
        description: Lookup table row delete definition.
        required: true
      responses:
        "204":
          description: Row deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a lookup table row.
      tags:
      - lookupManagement
  /v1/partitions:
    get:
      description: Get a list of all partitions in the organization. The response
        is paginated with a default limit of 100 partitions per page.
      operationId: listPartitions
      parameters:
      - description: Limit the number of partitions returned in the response. The
          number of partitions returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: |-
          The type of partitions to retrieve. Valid values are:
            1. `DefaultView`: To get General Index partition.
            2. `Partition`: To get user defined views/partitions.
            3. `AuditIndex`: To get the internal audit indexes. Eg. sumologic_audit_events.

          More than one type of partitions can be retrieved in same request.
        example:
        - AuditIndex
        - Partition
        explode: false
        in: query
        name: viewTypes
        required: false
        schema:
          items:
            pattern: ^(AuditIndex|Partition|DefaultView)$
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPartitionsResponse'
          description: A paginated list of partitions in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of partitions.
      tags:
      - partitionManagement
    post:
      description: Create a new partition.
      operationId: createPartition
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePartitionDefinition'
        description: Information about the new partition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partition'
          description: The partition has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new partition.
      tags:
      - partitionManagement
  /v1/partitions/{id}:
    get:
      description: Get a partition with the given identifier from the organization.
      operationId: getPartition
      parameters:
      - description: Identifier of partition to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partition'
          description: Partition object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a partition.
      tags:
      - partitionManagement
    put:
      description: Update an existing partition in the organization.
      operationId: updatePartition
      parameters:
      - description: Identifier of the partition to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePartitionDefinition'
        description: Information to update about the partition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partition'
          description: The partition was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a partition.
      tags:
      - partitionManagement
  /v1/partitions/{id}/decommission:
    post:
      description: Decommission a partition with the given identifier from the organization.
      operationId: decommissionPartition
      parameters:
      - description: Identifier of the partition to decommission.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The partition was decommissioned successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Decommission a partition.
      tags:
      - partitionManagement
  /v1/partitions/{id}/cancelRetentionUpdate:
    post:
      description: Cancel update to retention of a partition for which retention was
        updated previously using `reduceRetentionPeriodImmediately` parameter as false
      operationId: cancelRetentionUpdate
      parameters:
      - description: Identifier of the partition to cancel the retention update for.
        example: 1
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The retention update was cancelled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Cancel a retention update for a partition
      tags:
      - partitionManagement
  /v1/extractionRules:
    get:
      description: Get a list of all field extraction rules. The response is paginated
        with a default limit of 100 field extraction rules per page.
      operationId: listExtractionRules
      parameters:
      - description: Limit the number of field extraction rules returned in the response.
          The number of field extraction rules returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExtractionRulesResponse'
          description: A paginated list of field extraction rules.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of field extraction rules.
      tags:
      - extractionRuleManagement
    post:
      description: Create a new field extraction rule.
      operationId: createExtractionRule
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExtractionRuleDefinition'
        description: Information about the new field extraction rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionRule'
          description: The field extraction rule has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new field extraction rule.
      tags:
      - extractionRuleManagement
      x-tf-create: createExtractionRule
  /v1/extractionRules/{id}:
    delete:
      description: Delete a field extraction rule with the given identifier.
      operationId: deleteExtractionRule
      parameters:
      - description: Identifier of the field extraction rule to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Extraction rule was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a field extraction rule.
      tags:
      - extractionRuleManagement
      x-tf-delete: deleteExtractionRule
    get:
      description: Get a field extraction rule with the given identifier.
      operationId: getExtractionRule
      parameters:
      - description: Identifier of field extraction rule to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionRule'
          description: Extraction rule object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a field extraction rule.
      tags:
      - extractionRuleManagement
      x-tf-read: getExtractionRule
    put:
      description: Update an existing field extraction rule. All properties specified
        in the request are replaced. Missing properties are set to their default values.
      operationId: updateExtractionRule
      parameters:
      - description: Identifier of the field extraction rule to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExtractionRuleDefinition'
        description: Information to update about the field extraction rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtractionRule'
          description: The field extraction rule was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a field extraction rule.
      tags:
      - extractionRuleManagement
      x-tf-update: updateExtractionRule
  /v1/dynamicParsingRules:
    get:
      description: Get a list of all dynamic parsing rules. The response is paginated
        with a default limit of 100 dynamic parsing rules per page.
      operationId: listDynamicParsingRules
      parameters:
      - description: Limit the number of dynamic parsing rules returned in the response.
          The number of dynamic parsing rules returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          example: 10
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          example: 0000000001C51FF7
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDynamicRulesResponse'
          description: A paginated list of dynamic parsing rules.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of dynamic parsing rules.
      tags:
      - dynamicParsingRuleManagement
    post:
      description: Create a new dynamic parsing rule.
      operationId: createDynamicParsingRule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicRuleDefinition'
        description: Information about the new dynamic parsing rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
          description: The dynamic parsing rule has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new dynamic parsing rule.
      tags:
      - dynamicParsingRuleManagement
  /v1/dynamicParsingRules/{id}:
    delete:
      description: Delete a dynamic parsing rule with the given identifier.
      operationId: deleteDynamicParsingRule
      parameters:
      - description: Identifier of the dynamic parsing rule to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      responses:
        "204":
          description: Dynamic parsing rule was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a dynamic parsing rule.
      tags:
      - dynamicParsingRuleManagement
    get:
      description: Get a dynamic parsing rule with the given identifier.
      operationId: getDynamicParsingRule
      parameters:
      - description: Identifier of dynamic parsing rule to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
          description: Dynamic parsing rule object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a dynamic parsing rule.
      tags:
      - dynamicParsingRuleManagement
    put:
      description: Update an existing dynamic parsing rule. All properties specified
        in the request are replaced. Missing properties are set to their default values.
      operationId: updateDynamicParsingRule
      parameters:
      - description: Identifier of the dynamic parsing rule to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          example: 0000000001C41EE4
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DynamicRuleDefinition'
        description: Information to update about the dynamic parsing rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DynamicRule'
          description: The dynamic parsing rule was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a dynamic parsing rule.
      tags:
      - dynamicParsingRuleManagement
  /v1/fields:
    get:
      description: Request a list of all the custom fields configured in your account.
      operationId: listCustomFields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCustomFieldsResponse'
          description: List of all custom fields.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of all custom fields.
      tags:
      - fieldManagementV1
    post:
      description: Adding a field will define it in the Fields schema allowing it
        to be assigned as metadata to your logs.
      operationId: createField
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldName'
        description: Name of a field to add. The name is used as the key in the key-value
          pair.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: The field was created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new field.
      tags:
      - fieldManagementV1
  /v1/fields/{id}:
    delete:
      description: Deleting a field does not delete historical data assigned with
        that field. If you  delete a field by mistake and one or more of those dependencies
        break, you can  re-add the field to get things working properly again. You
        should always disable  a field and ensure things are behaving as expected
        before deleting a field.
      operationId: deleteField
      parameters:
      - description: Identifier of a field to delete.
        example: 00000000031D02DA
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The field was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a custom field.
      tags:
      - fieldManagementV1
    get:
      description: Get the details of a custom field.
      operationId: getCustomField
      parameters:
      - description: Identifier of a field.
        example: 00000000031D02DA
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomField'
          description: The details of the custom field.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a custom field.
      tags:
      - fieldManagementV1
  /v1/fields/{id}/enable:
    put:
      description: Fields have to be enabled to be assigned to your data. This operation
        ensures that a specified field is enabled and Sumo Logic will treat it as
        safe to process. All manually created custom fields are  enabled by default.
      operationId: enableField
      parameters:
      - description: Identifier of a field to enable.
        example: 00000000031D02DA
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Field has been enabled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Enable custom field with a specified identifier.
      tags:
      - fieldManagementV1
  /v1/fields/{id}/disable:
    delete:
      description: After disabling a field Sumo Logic will start dropping its incoming
        values at ingest. As a result, they won't be searchable or usable. Historical
        values are not removed and remain searchable.
      operationId: disableField
      parameters:
      - description: Identifier of a field to disable.
        example: 00000000031D02DA
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Field has been disabled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable a custom field.
      tags:
      - fieldManagementV1
  /v1/fields/dropped:
    get:
      description: Dropped fields are fields sent to Sumo Logic, but are ignored since
        they are not defined in your Fields schema. In order to save these values
        a field must both exist and be enabled.
      operationId: listDroppedFields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDroppedFieldsResponse'
          description: |
            List of dropped fields.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of dropped fields.
      tags:
      - fieldManagementV1
  /v1/fields/builtin:
    get:
      description: Built-in fields are created automatically by Sumo Logic for standard
        configuration purposes. They include `_sourceHost` and `_sourceCategory`.
        Built-in fields can't be deleted or disabled.
      operationId: listBuiltInFields
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBuiltinFieldsResponse'
          description: List of all built-in fields.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of built-in fields.
      tags:
      - fieldManagementV1
  /v1/fields/builtin/{id}:
    get:
      description: Get the details of a built-in field.
      operationId: getBuiltInField
      parameters:
      - description: Identifier of a built-in field.
        example: 000000000000000A
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuiltinField'
          description: The details of the built-in field.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a built-in field.
      tags:
      - fieldManagementV1
  /v1/fields/quota:
    get:
      description: Every account has a limited number of fields available. This endpoint
        returns your account limitations and remaining quota.
      operationId: getFieldQuota
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldQuotaUsage'
          description: Current fields capacity usage (fields count).
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get capacity information.
      tags:
      - fieldManagementV1
  /v1/ingestBudgets:
    get:
      description: Get a list of all ingest budgets. The response is paginated with
        a default limit of 100 budgets per page.
      operationId: listIngestBudgets
      parameters:
      - description: Limit the number of budgets returned in the response. The number
          of budgets returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIngestBudgetsResponse'
          description: A paginated list of budgets.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of ingest budgets.
      tags:
      - ingestBudgetManagementV1
    post:
      description: Create a new ingest budget.
      operationId: createIngestBudget
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestBudgetDefinition'
        description: Information about the new ingest budget.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudget'
          description: The ingest budget has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new ingest budget.
      tags:
      - ingestBudgetManagementV1
  /v1/ingestBudgets/{id}:
    delete:
      description: Delete an ingest budget with the given identifier.
      operationId: deleteIngestBudget
      parameters:
      - description: Identifier of the ingest budget to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The ingest budget was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete an ingest budget.
      tags:
      - ingestBudgetManagementV1
    get:
      description: Get an ingest budget by the given identifier.
      operationId: getIngestBudget
      parameters:
      - description: Identifier of ingest budget to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudget'
          description: Ingest budget object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get an ingest budget.
      tags:
      - ingestBudgetManagementV1
    put:
      description: Update an existing ingest budget. All properties specified in the
        request are required.
      operationId: updateIngestBudget
      parameters:
      - description: Identifier of the ingest budget to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestBudgetDefinition'
        description: Information to update about the ingest budget.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudget'
          description: The ingest budget was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update an ingest budget.
      tags:
      - ingestBudgetManagementV1
  /v1/ingestBudgets/{id}/usage/reset:
    post:
      description: Reset ingest budget's current usage to 0 before the scheduled reset
        time.
      operationId: resetUsage
      parameters:
      - description: Identifier of the ingest budget to reset usage.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Ingest budget's usage was reset successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Reset usage.
      tags:
      - ingestBudgetManagementV1
  /v1/ingestBudgets/{id}/collectors:
    get:
      description: Get a list of Collectors assigned to an ingest budget. The response
        is paginated with a default limit of 100 Collectors per page.
      operationId: getAssignedCollectors
      parameters:
      - description: Identifier of ingest budget to which Collectors are assigned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Limit the number of Collectors returned in the response. The
          number of Collectors returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCollectorIdentitiesResponse'
          description: A paginated list of Collectors.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of Collectors.
      tags:
      - ingestBudgetManagementV1
  /v1/ingestBudgets/{id}/collectors/{collectorId}:
    delete:
      description: Remove Collector from a budget.
      operationId: removeCollectorFromBudget
      parameters:
      - description: Identifier of the ingest budget to unassign from the Collector.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the Collector to unassign.
        explode: false
        in: path
        name: collectorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudget'
          description: Collector was successfully unassigned from the ingest budget.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Remove Collector from a budget.
      tags:
      - ingestBudgetManagementV1
    put:
      description: Assign a Collector to a budget.
      operationId: assignCollectorToBudget
      parameters:
      - description: Identifier of the ingest budget to assign to the Collector.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the Collector to assign.
        explode: false
        in: path
        name: collectorId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudget'
          description: Collector was successfully assigned to the ingest budget.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Assign a Collector to a budget.
      tags:
      - ingestBudgetManagementV1
  /v2/ingestBudgets:
    get:
      description: Get a list of all ingest budgets. The response is paginated with
        a default limit of 100 budgets per page.
      operationId: listIngestBudgetsV2
      parameters:
      - description: Limit the number of budgets returned in the response. The number
          of budgets returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListIngestBudgetsResponseV2'
          description: A paginated list of budgets.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of ingest budgets.
      tags:
      - ingestBudgetManagementV2
    post:
      description: Create a new ingest budget.
      operationId: createIngestBudgetV2
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestBudgetDefinitionV2'
        description: Information about the new ingest budget.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudgetV2'
          description: The ingest budget has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new ingest budget.
      tags:
      - ingestBudgetManagementV2
  /v2/ingestBudgets/{id}:
    delete:
      description: Delete an ingest budget with the given identifier.
      operationId: deleteIngestBudgetV2
      parameters:
      - description: Identifier of the ingest budget to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The ingest budget was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete an ingest budget.
      tags:
      - ingestBudgetManagementV2
    get:
      description: Get an ingest budget by the given identifier.
      operationId: getIngestBudgetV2
      parameters:
      - description: Identifier of ingest budget to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudgetV2'
          description: Ingest budget object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get an ingest budget.
      tags:
      - ingestBudgetManagementV2
    put:
      description: Update an existing ingest budget. All properties specified in the
        request are required.
      operationId: updateIngestBudgetV2
      parameters:
      - description: Identifier of the ingest budget to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IngestBudgetDefinitionV2'
        description: Information to update about the ingest budget.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBudgetV2'
          description: The ingest budget was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update an ingest budget.
      tags:
      - ingestBudgetManagementV2
  /v2/ingestBudgets/{id}/usage/reset:
    post:
      description: Reset ingest budget's current usage to 0 before the scheduled reset
        time.
      operationId: resetUsageV2
      parameters:
      - description: Identifier of the ingest budget to reset usage.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Ingest budget's usage was reset successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Reset usage.
      tags:
      - ingestBudgetManagementV2
  /v1/users:
    get:
      description: Get a list of all users in the organization. The response is paginated
        with a default limit of 100 users per page.
      operationId: listUsers
      parameters:
      - description: Limit the number of users returned in the response. The number
          of users returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: Sort the list of users by the `firstName`, `lastName`, or `email`
          field.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Find user with the given email address.
        explode: true
        in: query
        name: email
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUserModelsResponse'
          description: A paginated list of users in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of users.
      tags:
      - userManagement
    post:
      description: Create a new user in the organization.
      operationId: createUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDefinition'
        description: Information about the new user.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: The user has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new user.
      tags:
      - userManagement
  /v1/users/{id}:
    delete:
      description: Delete a user with the given identifier from the organization and
        transfer their content to the user with the identifier specified in "transferTo".
      operationId: deleteUser
      parameters:
      - description: Identifier of the user to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the user to receive the transfer of content from
          the deleted user. <br> **Note:** If `deleteContent` is not set to `true`,
          and no user identifier is specified in `transferTo`, content from the deleted
          user is transferred to the executing user.
        explode: true
        in: query
        name: transferTo
        required: false
        schema:
          type: string
        style: form
      - description: Whether to delete content from the deleted user or not. <br>
          **Warning:** If `deleteContent` is set to `true`, all of the content for
          the user being deleted is permanently deleted and cannot be recovered.
        explode: true
        in: query
        name: deleteContent
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: User was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a user.
      tags:
      - userManagement
    get:
      description: Get a user with the given identifier from the organization.
      operationId: getUser
      parameters:
      - description: Identifier of user to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: User object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a user.
      tags:
      - userManagement
    put:
      description: Update an existing user in the organization.
      operationId: updateUser
      parameters:
      - description: Identifier of the user to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDefinition'
        description: Information to update about the user.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserModel'
          description: The user was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a user.
      tags:
      - userManagement
  /v1/users/{id}/email/requestChange:
    post:
      description: An email with an activation link is sent to the user’s new email
        address. The user must click the link in the email within seven days to complete
        the email address change, or the link will expire.
      operationId: requestChangeEmail
      parameters:
      - description: Identifier of the user to change email address.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailRequest'
        description: New email address of the user.
        required: true
      responses:
        "204":
          description: Email change request was submitted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Change email address.
      tags:
      - userManagement
  /v1/users/{id}/password/reset:
    post:
      description: Reset a user's password.
      operationId: resetPassword
      parameters:
      - description: Identifier of the user to reset password.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User's password was reset successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Reset password.
      tags:
      - userManagement
  /v1/users/{id}/unlock:
    post:
      description: Unlock another user's account.
      operationId: unlockUser
      parameters:
      - description: The id of the user that needs to be unlocked.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User's account was unlocked successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Unlock a user.
      tags:
      - userManagement
  /v1/users/{id}/mfa/disable:
    put:
      description: Disable multi-factor authentication for given user.
      operationId: disableMfa
      parameters:
      - description: Identifier of the user to disable MFA for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisableMfaRequest'
        description: Email and Password of the user to disable MFA for.
        required: true
      responses:
        "204":
          description: User's MFA was disabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable MFA for user.
      tags:
      - userManagement
  /v1/roles:
    get:
      description: Get a list of all the roles in the organization. The response is
        paginated with a default limit of 100 roles per page.
      operationId: listRoles
      parameters:
      - description: Limit the number of roles returned in the response. The number
          of roles returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      - description: Sort the list of roles by the `name` field.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: Only return roles matching the given name.
        explode: true
        in: query
        name: name
        required: false
        schema:
          minLength: 1
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoleModelsResponse'
          description: A paginated list of roles in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of roles.
      tags:
      - roleManagement
    post:
      description: Create a new role in the organization.
      operationId: createRole
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleDefinition'
        description: Information about the new role.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModel'
          description: The role has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new role.
      tags:
      - roleManagement
      x-tf-create: createRole
  /v1/roles/{id}:
    delete:
      description: Delete a role with the given identifier from the organization.
      operationId: deleteRole
      parameters:
      - description: Identifier of the role to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Role was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a role.
      tags:
      - roleManagement
      x-tf-delete: deleteRole
    get:
      description: Get a role with the given identifier in the organization.
      operationId: getRole
      parameters:
      - description: Identifier of the role to fetch.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModel'
          description: Role object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a role.
      tags:
      - roleManagement
      x-tf-read: getRole
    put:
      description: Update an existing role in the organization.
      operationId: updateRole
      parameters:
      - description: Identifier of the role to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleDefinition'
        description: Information to update about the role.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModel'
          description: The user was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a role.
      tags:
      - roleManagement
      x-tf-update: updateRole
  /v1/roles/{roleId}/users/{userId}:
    delete:
      description: Remove a role from a user in the organization.
      operationId: removeRoleFromUser
      parameters:
      - description: Identifier of the role to delete.
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the user to remove the role from.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Role was successfully removed from the user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Remove role from a user.
      tags:
      - roleManagement
    put:
      description: Assign a role to a user in the organization.
      operationId: assignRoleToUser
      parameters:
      - description: Identifier of the role to assign.
        explode: false
        in: path
        name: roleId
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the user to assign the role to.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleModel'
          description: Role was successfully assigned to the user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Assign a role to a user.
      tags:
      - roleManagement
  /v2/content/folders:
    post:
      description: Creates a new folder under the given parent folder. Set the header
        parameter `isAdminMode` to `"true"` to create a folder inside "Admin Recommended"
        folder.
      operationId: createFolder
      parameters:
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderDefinition'
        description: Information about the new folder.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: The folder has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Create a new folder.
      tags:
      - folderManagement
  /v2/content/folders/{id}:
    get:
      description: Get a folder with the given identifier. Set the header parameter
        `isAdminMode` to `"true"` if fetching a folder inside "Admin Recommended"
        folder.
      operationId: getFolder
      parameters:
      - description: Identifier of the folder to fetch.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: Folder that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get a folder.
      tags:
      - folderManagement
    put:
      description: Update an existing folder with the given identifier. Set the header
        parameter `isAdminMode` to `"true"` if updating a folder inside "Admin Recommended"
        folder.
      operationId: updateFolder
      parameters:
      - description: Identifier of the folder to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolderRequest'
        description: Information to update about the folder.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: The folder was successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Update a folder.
      tags:
      - folderManagement
  /v2/content/folders/personal:
    get:
      description: Get the personal folder of the current user.
      operationId: getPersonalFolder
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: |
            The personal folder of the current user.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get personal folder.
      tags:
      - folderManagement
  /v2/content/folders/global:
    get:
      description: |-
        Schedule an asynchronous job to get Global View. Global View contains all top-level content items that a user has permissions to view in the organization. User can traverse the top-level folders using [GetFolder API](#operation/getFolder) to get rest of the content items. Make sure you set `isAdminMode` header parameter to `true` when traversing top-level items.

        _Global View is not a real folder, therefore there is no folder identifier associated with it_.

        _You get back a identifier of asynchronous job in response to this endpoint. See [Asynchronous-Request](#section/Getting-Started/Asynchronous-Request) section for more details on how to work with asynchronous request._
      operationId: getGlobalFolderAsync
      parameters:
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: An asynchronous job to get a list of all content items been
            scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Schedule Global View job
      tags:
      - folderManagement
  /v2/content/folders/global/{jobId}/status:
    get:
      description: Get the status of an asynchronous Global View job for the given
        job identifier. If job succeeds, use [Global View Result](#operation/getGlobalFolderAsyncResult)
        endpoint to fetch all content items that you have permissions to view.
      operationId: getGlobalFolderAsyncStatus
      parameters:
      - description: The identifier of the asynchronous Global View job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: Asynchronous Global View job status.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get Global View job status
      tags:
      - folderManagement
  /v2/content/folders/global/{jobId}/result:
    get:
      description: Get result of a Global View job for the given job identifier. The
        result will be a list of all content items that a user has permissions to
        view in the organization.
      operationId: getGlobalFolderAsyncResult
      parameters:
      - description: The identifier of the asynchronous Global View job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentList'
          description: List of all content items with view permission.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get Global View job result
      tags:
      - folderManagement
  /v2/content/folders/adminRecommended:
    get:
      description: |-
        Schedule an asynchronous job to get the top-level Admin Recommended content items. You can read more about Admin Recommended folder [here](https://help.sumologic.com/Manage/Content_Sharing/Admin_Mode#move-important-content-to-admin-recommended).

        _You get back a identifier of asynchronous job in response to this endpoint. See [Asynchronous-Request](#section/Getting-Started/Asynchronous-Request) section for more details on how to work with asynchronous request._
      operationId: getAdminRecommendedFolderAsync
      parameters:
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: An asynchronous job to get the Admin Recommended folder has
            been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Schedule Admin Recommended folder job
      tags:
      - folderManagement
  /v2/content/folders/adminRecommended/{jobId}/status:
    get:
      description: Get the status of an asynchronous Admin Recommended folder job
        for the given job identifier. If job succeeds, use [Admin Recommended Job
        Result](#operation/getAdminRecommendedFolderAsyncResult) endpoint to fetch
        top-level content items in Admin Recommended folder.
      operationId: getAdminRecommendedFolderAsyncStatus
      parameters:
      - description: The identifier of the asynchronous Admin Recommended folder job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: Asynchronous Admin Recommended folder job status.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get Admin Recommended folder job status
      tags:
      - folderManagement
  /v2/content/folders/adminRecommended/{jobId}/result:
    get:
      description: Get result of an Admin Recommended job for the given job identifier.
        The result will be "Admin Recommended" folder with a list of top-level Admin
        Recommended content items in `children` field.
      operationId: getAdminRecommendedFolderAsyncResult
      parameters:
      - description: The identifier of the asynchronous Admin Recommended folder job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: Admin Recommended folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Get Admin Recommended folder job result
      tags:
      - folderManagement
  /v2/content/{id}/permissions:
    get:
      description: Returns content permissions of a content item with the given identifier.
      operationId: getContentPermissions
      parameters:
      - description: The identifier of the content item.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: 'There are two permission types: explicit and implicit. Permissions
          specifically assigned to the content item are explicit. Permissions derived
          from a parent content item, like a folder are implicit. To return only explicit
          permissions set this to true.'
        explode: true
        in: query
        name: explicitOnly
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPermissionResult'
          description: A list of permissions for the requested content item.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get permissions of a content item
      tags:
      - contentPermissions
  /v2/content/{id}/permissions/add:
    put:
      description: Add permissions to a content item with the given identifier.
      operationId: addContentPermissions
      parameters:
      - description: The identifier of the content item.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPermissionUpdateRequest'
        description: New permissions to add to the content item with the given identifier.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPermissionResult'
          description: Updated permission object for the requested content item.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Add permissions to a content item.
      tags:
      - contentPermissions
  /v2/content/{id}/permissions/remove:
    put:
      description: Remove permissions from a content item with the given identifier.
      operationId: removeContentPermissions
      parameters:
      - description: The identifier of the content item.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPermissionUpdateRequest'
        description: Permissions to remove from a content item with the given identifier.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPermissionResult'
          description: Updated permissions for the requested content item.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error. Check that your request is
            valid.
      summary: Remove permissions from a content item.
      tags:
      - contentPermissions
  /v2/content/path:
    get:
      description: |-
        Get a content item corresponding to the given path.

        _Path is specified in the required query parameter `path`. The path should be URL encoded._ For example, to get "Acme Corp" folder of a user "user@sumo.com" you can use the following curl command:
          ```bash
          curl https://api.sumologic.com/api/v2/content/path?path=/Library/Users/user%40sumo.com/Acme%20Corp
          ```


        The absolute path to a content item should be specified to get the item. The content library has "Library" folder at the root level. For items in "Personal" folder, the base path is "/Library/Users/user@sumo.com" where "user@sumo.com" is the email address of the user. For example if a user with email address `wile@acme.com` has `Rockets` folder inside Personal folder, the path of Rockets folder will be `/Library/Users/wile@acme.com/Rockets`.

        For items in "Admin Recommended" folder, the base path is "/Library/Admin Recommended". For example, given a folder `Acme` in Admin Recommended folder, the path will be `/Library/Admin Recommended/Acme`.
      operationId: getItemByPath
      parameters:
      - description: Path of the content item to retrieve.
        example: /Library/Users/user@sumo.com/SampleFolder
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: Content item corresponding to the given path.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get content item by path.
      tags:
      - contentManagement
  /v2/content/{contentId}/path:
    get:
      description: |
        Get full path of a content item with the given identifier.
      operationId: getPathById
      parameters:
      - description: Identifier of the content item to get the path.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPath'
          description: Full path of the content item.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get path of an item.
      tags:
      - contentManagement
  /v2/content/{id}/export:
    post:
      description: |-
        Schedule an _asynchronous_ export of content with the given identifier. You will get back an asynchronous job identifier on success. Use the [getAsyncExportStatus](#operation/getAsyncExportStatus) endpoint and the job identifier you got back in the response to track the status of an asynchronous export job.
        If the content item is a folder, everything under the folder is exported recursively. Keep in mind when exporting large folders that there is a limit of 1000 content objects that can be exported at once. If you want to import more than 1000 content objects, then be sure to split the import into batches of 1000 objects or less.
        The results from the export are compatible with the Library import feature in the Sumo Logic user interface as well as the API content import job.
      operationId: beginAsyncExport
      parameters:
      - description: The identifier of the content item to export. Identifiers from
          the Library in the Sumo user interface are provided in decimal format which
          is incompatible with this API. The identifier needs to be in hexadecimal
          format.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: Export job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start a content export job.
      tags:
      - contentManagement
  /v2/content/{contentId}/export/{jobId}/status:
    get:
      description: Get the status of an asynchronous content export request for the
        given job identifier. On success, use the [getExportResult](#operation/getAsyncExportResult)
        endpoint to get the result of the export job.
      operationId: getAsyncExportStatus
      parameters:
      - description: The identifier of the exported content item.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the asynchronous export job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the export job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Content export job status.
      tags:
      - contentManagement
  /v2/content/{contentId}/export/{jobId}/result:
    get:
      description: Get results from content export job for the given job identifier.
        The results from this export are incompatible with the Library import feature
        in the Sumo user interface.
      operationId: getAsyncExportResult
      parameters:
      - description: The identifier of the exported content item.
        explode: false
        in: path
        name: contentId
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the asynchronous job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSyncDefinition'
          description: The result of export job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Content export job result.
      tags:
      - contentManagement
  /v2/content/folders/{folderId}/import:
    post:
      description: Schedule an asynchronous import of content inside an existing folder
        with the given identifier. Import requests can be used to create or update
        content within a folder. Content items need to have a unique name within their
        folder. If there is already a content item with the same name in the folder,
        you can set the `overwrite` parameter to `true` to overwrite existing content
        items. By default, the `overwrite` parameter is set to `false`, where the
        import will fail if a content item with the same name already exist. Keep
        in mind when importing large folders that there is a limit of 1000 content
        objects that can be imported at once. If you want to import more than 1000
        content objects, then be sure to split the import into batches of 1000 objects
        or less.
      operationId: beginAsyncImport
      parameters:
      - description: The identifier of the folder to import into. Identifiers from
          the Library in the Sumo user interface are provided in decimal format which
          is incompatible with this API. The identifier needs to be in hexadecimal
          format.
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      - description: Set this to "true" to overwrite a content item if the name already
          exists.
        explode: true
        in: query
        name: overwrite
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentSyncDefinition'
        description: The content to import.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: Import job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Start a content import job.
      tags:
      - contentManagement
  /v2/content/folders/{folderId}/import/{jobId}/status:
    get:
      description: Get the status of a content import job for the given job identifier.
      operationId: getAsyncImportStatus
      parameters:
      - description: The identifier of the folder to import into.
        explode: false
        in: path
        name: folderId
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the import request.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the import job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Content import job status.
      tags:
      - contentManagement
  /v2/content/{id}/delete:
    delete:
      description: Start an asynchronous content deletion job with the given identifier.
      operationId: beginAsyncDelete
      parameters:
      - description: Identifier of the content to delete. Identifiers from the Library
          in the Sumo user interface are provided in decimal format which is incompatible
          with this API. The identifier needs to be in hexadecimal format.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: Deletion job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start a content deletion job.
      tags:
      - contentManagement
  /v2/content/{id}/delete/{jobId}/status:
    get:
      description: Get the status of an asynchronous content deletion job request
        for the given job identifier.
      operationId: getAsyncDeleteStatus
      parameters:
      - description: Identifier of the content to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the asynchronous job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the content deletion job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Content deletion job status.
      tags:
      - contentManagement
  /v2/content/{id}/copy:
    post:
      description: Start an asynchronous content copy job with the given identifier
        to the destination folder. If the content item is a folder, everything under
        the folder is copied recursively.
      operationId: beginAsyncCopy
      parameters:
      - description: The identifier of the content item to copy. Identifiers from
          the Library in the Sumo user interface are provided in decimal format which
          is incompatible with this API. The identifier needs to be in hexadecimal
          format.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the destination folder.
        explode: true
        in: query
        name: destinationFolder
        required: true
        schema:
          type: string
        style: form
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: Content copy job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start a content copy job.
      tags:
      - contentManagement
  /v2/content/{id}/copy/{jobId}/status:
    get:
      description: |
        Get the status of the copy request with the given job identifier. On success, field `statusMessage` will contain identifier of the newly copied content in format: `id: {hexIdentifier}`.
      operationId: asyncCopyStatus
      parameters:
      - description: The identifier of the content which was copied.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the asynchronous copy request job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                status: Success
                statusMessage: 'id: 0000000000000197'
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the content copy job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Content copy job status.
      tags:
      - contentManagement
  /v2/content/{id}/move:
    post:
      description: |
        Moves an item from its current location to another folder.
      operationId: moveItem
      parameters:
      - description: Identifier of the destination folder.
        explode: true
        in: query
        name: destinationFolderId
        required: true
        schema:
          type: string
        style: form
      - description: Identifier of the item the user wants to move.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set this to "true" if you want to perform the request as a Content
          Administrator.
        explode: false
        in: header
        name: isAdminMode
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Content was moved successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Move an item.
      tags:
      - contentManagement
  /v1/transformationRules:
    get:
      description: Get a list of transformation rules in the organization. The response
        is paginated with a default limit of 100 rules per page.
      operationId: getTransformationRules
      parameters:
      - description: Limit the number of transformation rules returned in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformationRulesResponse'
          description: List of transformation rules.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of transformation rules.
      tags:
      - transformationRuleManagement
    post:
      description: Create a new transformation rule.
      operationId: createRule
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransformationRuleRequest'
        description: The configuration of the transformation rule to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformationRuleResponse'
          description: The transformation rule was successfully created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
      summary: Create a new transformation rule.
      tags:
      - transformationRuleManagement
  /v1/transformationRules/{id}:
    delete:
      description: Delete a transformation rule with the given identifier.
      operationId: deleteRule
      parameters:
      - description: Identifier of the transformation rule to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
        "204":
          description: The transformation rule was successfully deleted.
      summary: Delete a transformation rule.
      tags:
      - transformationRuleManagement
    get:
      description: Get a transformation rule with the given identifier.
      operationId: getTransformationRule
      parameters:
      - description: Identifier of transformation rule to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformationRuleResponse'
          description: Transformation rule object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a transformation rule.
      tags:
      - transformationRuleManagement
    put:
      description: Update an existing transformation rule. All properties specified
        in the request are replaced. Missing properties will remain the same.
      operationId: updateTransformationRule
      parameters:
      - description: Identifier of the transformation rule to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransformationRuleRequest'
        description: Information to update about the transformation rule.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransformationRuleResponse'
          description: The transformation rule was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a transformation rule.
      tags:
      - transformationRuleManagement
  /v1/account/accountOwner:
    get:
      description: Returns the user identifier of the account owner.
      operationId: getAccountOwner
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: User identifier of the account owner.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the owner of an account.
      tags:
      - accountManagement
  /v1/account/status:
    get:
      description: Get information related to the account's plan, pricing model, expiration
        and payment status.
      operationId: getStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountStatusResponse'
          description: Overview of the account.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get overview of the account status.
      tags:
      - accountManagement
  /v1/account/subdomain:
    delete:
      description: Delete the configured subdomain.
      operationId: deleteSubdomain
      responses:
        "204":
          description: The subdomain was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete the configured subdomain.
      tags:
      - accountManagement
    get:
      description: Get the configured subdomain.
      operationId: getSubdomain
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubdomainDefinitionResponse'
          description: The subdomain's definition.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the configured subdomain.
      tags:
      - accountManagement
    post:
      description: Create a subdomain. Only the Account Owner can create a subdomain.
      operationId: createSubdomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureSubdomainRequest'
        description: The new subdomain.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubdomainDefinitionResponse'
          description: Created a new subdomain.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create account subdomain.
      tags:
      - accountManagement
    put:
      description: Update a subdomain. Only the Account Owner can update the subdomain.
      operationId: updateSubdomain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureSubdomainRequest'
        description: The new subdomain.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubdomainDefinitionResponse'
          description: The updated subdomain's definition.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update account subdomain.
      tags:
      - accountManagement
  /v1/account/subdomain/recover:
    post:
      description: Send an email with the subdomain information for a user with the
        given email address.
      operationId: recoverSubdomains
      parameters:
      - description: Email address of the user to get subdomain information.
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "204":
          description: An email containing information about associated subdomains
            for the given email was sent.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Recover subdomains for a user.
      tags:
      - accountManagement
  /v1/metricsSearches:
    post:
      description: Saves a metrics search in the content library. Metrics search consists
        of one or more queries, a time range, a quantization period and a set of chart
        properties like line width.
      operationId: createMetricsSearch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveMetricsSearchRequest'
        description: The definition of the metrics search.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsSearchInstance'
          description: Newly created metrics search.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Save a metrics search.
      tags:
      - metricsSearchesManagement
  /v1/metricsSearches/{id}:
    delete:
      description: Deletes a metrics search from the content library.
      operationId: deleteMetricsSearch
      parameters:
      - description: Identifier of the metrics search.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The operation failed with an error.
        "204":
          description: The metrics search was successfully deleted.
      summary: Deletes a metrics search.
      tags:
      - metricsSearchesManagement
    get:
      description: Returns a metrics search with the specified identifier.
      operationId: getMetricsSearch
      parameters:
      - description: Identifier of the metrics search.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsSearchInstance'
          description: A metrics search object with metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a metrics search.
      tags:
      - metricsSearchesManagement
    put:
      description: Updates a metrics search with the specified identifier. Partial
        updates are not supported, you must provide values for all fields.
      operationId: updateMetricsSearch
      parameters:
      - description: Identifier of the metrics search.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsSearchV1'
        description: An updated metrics search definition.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsSearchInstance'
          description: The metrics saved search that was updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Updates a metrics search.
      tags:
      - metricsSearchesManagement
  /v1/tokens:
    get:
      description: Get a list of all tokens in the token library.
      operationId: listTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokensBaseResponse'
          description: A list of tokens.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of tokens.
      tags:
      - tokensLibraryManagement
    post:
      description: Create a token in the token library.
      operationId: createToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBaseDefinition'
        description: Information about the token to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBaseResponse'
          description: The token has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a token.
      tags:
      - tokensLibraryManagement
  /v1/tokens/{id}:
    delete:
      description: Delete a token with the given identifier in the token library.
      operationId: deleteToken
      parameters:
      - description: Identifier of the token to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The token was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a token.
      tags:
      - tokensLibraryManagement
    get:
      description: Get a token with the given identifier in the token library.
      operationId: getToken
      parameters:
      - description: Identifier of the token to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBaseResponse'
          description: Token object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a token.
      tags:
      - tokensLibraryManagement
    put:
      description: Update a token with the given identifier in the token library.
      operationId: updateToken
      parameters:
      - description: Identifier of the token to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBaseDefinitionUpdate'
        description: The token to update.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBaseResponse'
          description: The token was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a token.
      tags:
      - tokensLibraryManagement
  /v1/accessKeys:
    get:
      description: List all access keys in your account.
      operationId: listAccessKeys
      parameters:
      - description: Limit the number of access keys returned in the response. The
          number of access keys returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedListAccessKeysResult'
          description: A list of all access keys in your account.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List all access keys.
      tags:
      - accessKeyManagement
    post:
      description: |-
        Creates a new access ID and key pair. The new access key can be used from the domains specified in corsHeaders field. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:
          1. Requests with an ORIGIN header but the allowlist is empty.
          2. Requests with an ORIGIN header that don't match any entry in the allowlist.
      operationId: createAccessKey
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessKeyCreateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKey'
          description: Access key created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access key creation failed with an error.
      summary: Create an access key.
      tags:
      - accessKeyManagement
  /v1/accessKeys/personal:
    get:
      description: List all access keys that belong to your user.
      operationId: listPersonalAccessKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessKeysResult'
          description: A list of all access keys that belong to the user making the
            request.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List personal keys.
      tags:
      - accessKeyManagement
  /v1/accessKeys/{id}:
    delete:
      description: Deletes the access key with the given accessId.
      operationId: deleteAccessKey
      parameters:
      - description: The accessId of the access key to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Access key deletion completed successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access key deletion failed with an error.
      summary: Delete an access key.
      tags:
      - accessKeyManagement
    put:
      description: Updates the properties of existing accessKey by accessId. It can
        be used to enable or disable the access key and to update the corsHeaders
        list.
      operationId: updateAccessKey
      parameters:
      - description: The accessId of the access key to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessKeyUpdateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKeyPublic'
          description: Access key updated successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Access key update failed with an error.
      summary: Update an access key.
      tags:
      - accessKeyManagement
  /v1/saml/identityProviders:
    get:
      description: Get a list of all SAML configurations in the organization.
      operationId: getIdentityProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SamlIdentityProvider'
                type: array
          description: A list of SAML configurations in the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of SAML configurations.
      tags:
      - samlConfigurationManagement
    post:
      description: Create a new SAML configuration in the organization.
      operationId: createIdentityProvider
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamlIdentityProviderRequest'
        description: The configuration of the SAML identity provider.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlIdentityProvider'
          description: The SAML configuration was successfully created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new SAML configuration.
      tags:
      - samlConfigurationManagement
  /v1/saml/identityProviders/{id}:
    delete:
      description: Delete a SAML configuration with the given identifier from the
        organization.
      operationId: deleteIdentityProvider
      parameters:
      - description: Identifier of the SAML configuration to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The SAML configuration was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a SAML configuration.
      tags:
      - samlConfigurationManagement
    put:
      description: Update an existing SAML configuration in the organization.
      operationId: updateIdentityProvider
      parameters:
      - description: Identifier of the SAML configuration to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SamlIdentityProviderRequest'
        description: Information to update in the SAML configuration.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SamlIdentityProvider'
          description: The SAML configuration was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a SAML configuration.
      tags:
      - samlConfigurationManagement
  /v1/saml/allowlistedUsers:
    get:
      description: Get a list of allowlisted users.
      operationId: getAllowlistedUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AllowlistedUserResult'
                type: array
          description: A list of allowlisted users from the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get list of allowlisted users.
      tags:
      - samlConfigurationManagement
  /v1/saml/allowlistedUsers/{userId}:
    delete:
      description: Remove an allowlisted user requiring them to sign in using SAML.
      operationId: deleteAllowlistedUser
      parameters:
      - description: Identifier of user that will no longer be allowlisted from SAML
          Lockdown.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: User was successfully removed from the allowlist for SAML Lockdown.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Remove an allowlisted user.
      tags:
      - samlConfigurationManagement
    post:
      description: Allowlist a user from SAML lockdown allowing them to sign in using
        a password in addition to SAML.
      operationId: createAllowlistedUser
      parameters:
      - description: Identifier of the user.
        explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistedUserResult'
          description: User was successfully allowlisted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Allowlist a user.
      tags:
      - samlConfigurationManagement
  /v1/saml/lockdown/enable:
    post:
      description: Enabling SAML lockdown requires users to sign in using SAML preventing
        them from logging in with an email and password.
      operationId: enableSamlLockdown
      responses:
        "204":
          description: SAML lockdown was enabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Require SAML for sign-in.
      tags:
      - samlConfigurationManagement
  /v1/saml/lockdown/disable:
    post:
      description: Disable SAML lockdown for the organization.
      operationId: disableSamlLockdown
      responses:
        "204":
          description: SAML lockdown was disabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable SAML lockdown.
      tags:
      - samlConfigurationManagement
  /v1/serviceAllowlist/addresses:
    get:
      description: Get a list of all allowlisted CIDR notations and/or IP addresses
        for the organization.
      operationId: listAllowlistedCidrs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CidrList'
          description: List of all allowlisted CIDR notations and/or IP addresses
            for the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List all allowlisted CIDRs/IP addresses.
      tags:
      - serviceAllowlistManagement
  /v1/serviceAllowlist/addresses/add:
    post:
      description: Add CIDR notations and/or IP addresses to the allowlist of the
        organization if not already there. When service allowlisting functionality
        is enabled, CIDRs/IP addresses that are allowlisted will have access to Sumo
        Logic and/or content sharing.
      operationId: addAllowlistedCidrs
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CidrList'
        description: List of all CIDR notations and/or IP addresses to be added to
          the allowlist of the organization.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CidrList'
          description: List of all allowlisted CIDR notations and/or IP addresses
            for the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Allowlist CIDRs/IP addresses.
      tags:
      - serviceAllowlistManagement
  /v1/serviceAllowlist/addresses/remove:
    post:
      description: Remove allowlisted CIDR notations and/or IP addresses from the
        organization. Removed CIDRs/IPs will immediately lose access to Sumo Logic
        and content sharing.
      operationId: deleteAllowlistedCidrs
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CidrList'
        description: List of all CIDR notations and/or IP addresses to be removed
          from the allowlist of the organization.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CidrList'
          description: List of all allowlisted CIDR notations and/or IP addresses
            for the organization.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Remove allowlisted CIDRs/IP addresses.
      tags:
      - serviceAllowlistManagement
  /v1/serviceAllowlist/enable:
    post:
      description: 'Enable service allowlisting functionality for the organization.
        The service allowlisting can be for 1. Login: If enabled, access to Sumo Logic
        is granted only to CIDRs/IP addresses that are allowlisted. 2. Content: If
        enabled, dashboards can be shared with users connecting from CIDRs/IP addresses
        that are allowlisted without logging in.'
      operationId: enableAllowlisting
      parameters:
      - description: 'The type of allowlisting to be enabled. It can be one of: `Login`,
          `Content`, or `Both`.'
        explode: true
        in: query
        name: allowlistType
        required: true
        schema:
          description: 'One of: `Login`, `Content`, `Both`.'
          example: Login
          pattern: ^(Login|Content|Both)$
          type: string
          x-pattern-message: must be `Login`, `Content`, or `Both`
        style: form
      responses:
        "204":
          description: Service allowlisting was enabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Enable service allowlisting.
      tags:
      - serviceAllowlistManagement
  /v1/serviceAllowlist/disable:
    post:
      description: Disable service allowlisting functionality for login/API authentication
        or content sharing for the organization.
      operationId: disableAllowlisting
      parameters:
      - description: 'The type of allowlisting to be disabled. It can be one of: `Login`,
          `Content`, or `Both`.'
        explode: true
        in: query
        name: allowlistType
        required: true
        schema:
          description: 'One of: `Login`, `Content`, `Both`.'
          example: Login
          pattern: ^(Login|Content|Both)$
          type: string
          x-pattern-message: must be `Login`, `Content`, or `Both`
        style: form
      responses:
        "204":
          description: Service allowlisting was disabled successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable service allowlisting.
      tags:
      - serviceAllowlistManagement
  /v1/serviceAllowlist/status:
    get:
      description: Get the status of the service allowlisting functionality for login/API
        authentication or content sharing for the organization.
      operationId: getAllowlistingStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllowlistingStatus'
          description: The status of service allowlisting for Content and Login.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the allowlisting status.
      tags:
      - serviceAllowlistManagement
  /v1/policies/audit:
    get:
      description: Get the Audit policy. This policy specifies whether audit records
        for your account are enabled. You can access details about reported account
        events in the Sumo Logic Audit Index. [Learn More](https://help.sumologic.com/Manage/Security/Audit-Index)
      operationId: getAuditPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditPolicy'
          description: The Audit policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get Audit policy.
      tags:
      - policiesManagement
    put:
      description: Set the Audit policy. This policy specifies whether audit records
        for your account are enabled. You can access details about reported account
        events in the Sumo Logic Audit Index. [Learn More](https://help.sumologic.com/Manage/Security/Audit-Index)
      operationId: setAuditPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditPolicy'
          description: Audit policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set Audit policy.
      tags:
      - policiesManagement
  /v1/policies/searchAudit:
    get:
      description: Get the Search Audit policy. This policy specifies whether search
        records for your account are enabled. You can access details about your account's
        search capacity, queries run by users from the Sumo Search Audit Index. [Learn
        More](https://help.sumologic.com/Manage/Security/Search_Audit_Index)
      operationId: getSearchAuditPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAuditPolicy'
          description: The Search Audit policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get Search Audit policy.
      tags:
      - policiesManagement
    put:
      description: Set the Search Audit policy. This policy specifies whether search
        records for your account are enabled. You can access details about your account's
        search capacity, queries run by users from the Sumo Search Audit Index. [Learn
        More](https://help.sumologic.com/Manage/Security/Search_Audit_Index)
      operationId: setSearchAuditPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchAuditPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchAuditPolicy'
          description: Search Audit policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set Search Audit policy.
      tags:
      - policiesManagement
  /v1/policies/shareDashboardsOutsideOrganization:
    get:
      description: Get the Share Dashboards Outside Organization policy. This policy
        allows users to share the dashboard with view only privileges outside of the
        organization (capability must be enabled from the Roles page). Disabling this
        policy will disable all dashboards that have been shared outside of the organization.
        [Learn More](https://help.sumologic.com/Visualizations-and-Alerts/Dashboards/Share_Dashboards/Share_a_Dashboard_Outside_Your_Org)
      operationId: getShareDashboardsOutsideOrganizationPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareDashboardsOutsideOrganizationPolicy'
          description: The Share Dashboards Outside Organization policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get Share Dashboards Outside Organization policy.
      tags:
      - policiesManagement
    put:
      description: Set the Share Dashboards Outside Organization policy. This policy
        allows users to share the dashboard with view only privileges outside of the
        organization (capability must be enabled from the Roles page). Disabling this
        policy will disable all dashboards that have been shared outside of the organization.
        [Learn More](https://help.sumologic.com/Visualizations-and-Alerts/Dashboards/Share_Dashboards/Share_a_Dashboard_Outside_Your_Org)
      operationId: setShareDashboardsOutsideOrganizationPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareDashboardsOutsideOrganizationPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareDashboardsOutsideOrganizationPolicy'
          description: Share Dashboards Outside Organization policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set Share Dashboards Outside Organization policy.
      tags:
      - policiesManagement
  /v1/policies/dataAccessLevel:
    get:
      description: Get the Data Access Level policy. When enabled, this policy sets
        the default data access level for all newly created dashboards to the viewer’s
        role access filter. Otherwise, newly created dashboards will default to the
        sharer’s role access filter and might display data that viewers’ roles don’t
        allow them to view. [Learn More](https://help.sumologic.com/Manage/Security/Data_Access_Level_for_Shared_Dashboards)
      operationId: getDataAccessLevelPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAccessLevelPolicy'
          description: The Data Access Level policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get Data Access Level policy.
      tags:
      - policiesManagement
    put:
      description: Set the Data Access Level policy. When enabled, this policy sets
        the default data access level for all newly created dashboards to the viewer’s
        role access filter. Otherwise, newly created dashboards will default to the
        sharer’s role access filter and might display data that viewers’ roles don’t
        allow them to view. [Learn More](https://help.sumologic.com/Manage/Security/Data_Access_Level_for_Shared_Dashboards)
      operationId: setDataAccessLevelPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataAccessLevelPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataAccessLevelPolicy'
          description: Data Access Level policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set Data Access Level policy.
      tags:
      - policiesManagement
  /v1/policies/userConcurrentSessionsLimit:
    get:
      description: Get the User Concurrent Sessions Limit policy. When enabled, the
        number of concurrent sessions a user may have is limited to the value entered.
        If a user exceeds the allowed number of sessions, the user's oldest session
        will be logged out to accommodate the new one. Disabling this policy means
        a user may have an unlimited number of concurrent sessions. [Learn More](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions)
      operationId: getUserConcurrentSessionsLimitPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConcurrentSessionsLimitPolicy'
          description: The User Concurrent Sessions Limit policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get User Concurrent Sessions Limit policy.
      tags:
      - policiesManagement
    put:
      description: Set the User Concurrent Sessions Limit policy. When enabled, the
        number of concurrent sessions a user may have is limited to the value entered.
        If a user exceeds the allowed number of sessions, the user's oldest session
        will be logged out to accommodate the new one. Disabling this policy means
        a user may have an unlimited number of concurrent sessions. [Learn More](https://help.sumologic.com/Manage/Security/Set_a_Limit_for_User_Concurrent_Sessions)
      operationId: setUserConcurrentSessionsLimitPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConcurrentSessionsLimitPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserConcurrentSessionsLimitPolicy'
          description: User Concurrent Sessions Limit policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set User Concurrent Sessions Limit policy.
      tags:
      - policiesManagement
  /v1/policies/maxUserSessionTimeout:
    get:
      description: Get the Max User Session Timeout policy. When enabled, this policy
        sets the maximum web session timeout users are able to configure within their
        user preferences. Users preferences will be updated to match this value only
        if their current preference is set to a higher value. [Learn More](https://help.sumologic.com/Manage/Security/Set_a_Maximum_Web_Session_Timeout)
      operationId: getMaxUserSessionTimeoutPolicy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxUserSessionTimeoutPolicy'
          description: The Max User Session Timeout policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get Max User Session Timeout policy.
      tags:
      - policiesManagement
    put:
      description: Set the Max User Session Timeout policy. When enabled, this policy
        sets the maximum web session timeout users are able to configure within their
        user preferences. Users preferences will be updated to match this value only
        if their current preference is set to a higher value. [Learn More](https://help.sumologic.com/Manage/Security/Set_a_Maximum_Web_Session_Timeout)
      operationId: setMaxUserSessionTimeoutPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaxUserSessionTimeoutPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaxUserSessionTimeoutPolicy'
          description: Max User Session Timeout policy was set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Set Max User Session Timeout policy.
      tags:
      - policiesManagement
  /v1/healthEvents:
    get:
      description: Get a list of all the unresolved health events in your account.
      operationId: listAllHealthEvents
      parameters:
      - description: Limit the number of health events returned in the response. The
          number of health events returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHealthEventResponse'
          description: A paginated list of all the health events.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a list of health events.
      tags:
      - healthEvents
  /v1/healthEvents/resources:
    post:
      description: Get a list of all the unresolved events in your account that belong
        to the supplied resource identifiers.
      operationId: listAllHealthEventsForResources
      parameters:
      - description: Limit the number of health events returned in the response. The
          number of health events returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceIdentities'
        description: Resource identifiers to request health events from.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListHealthEventResponse'
          description: List of all the health events for the specified resources.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Health events for specific resources.
      tags:
      - healthEvents
  /v1/archive/{sourceId}/jobs:
    get:
      description: Get a list of all the ingestion jobs created on an Archive Source.
        The response is paginated with a default limit of 10 jobs per page.
      operationId: listArchiveJobsBySourceId
      parameters:
      - description: The identifier of an Archive Source.
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          example: 000000000606C009
          type: string
        style: simple
      - description: Limit the number of jobs returned in the response. The number
          of jobs returned may be less than the `limit`.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 10
          format: int32
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: Continuation token to get the next page of results. A page object
          with the next continuation token is returned in the response body. Subsequent
          GET requests should specify the continuation token to get the next page
          of results. `token` is set to null when no more pages are left.
        explode: true
        in: query
        name: token
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArchiveJobsResponse'
          description: A paginated list of ingestion jobs for an Archive Source.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get ingestion jobs for an Archive Source.
      tags:
      - archiveManagement
    post:
      description: Create an ingestion job to pull data from your S3 bucket.
      operationId: createArchiveJob
      parameters:
      - description: The identifier of the Archive Source for which the job is to
          be added.
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          example: 000000000606C009
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArchiveJobRequest'
        description: The definition of the ingestion job to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchiveJob'
          description: The ingestion job was created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create an ingestion job.
      tags:
      - archiveManagement
  /v1/archive/{sourceId}/jobs/{id}:
    delete:
      description: Delete an ingestion job with the given identifier from the organization.
        The delete operation is only possible for jobs with a Succeeded or Failed
        status.
      operationId: deleteArchiveJob
      parameters:
      - description: The identifier of the Archive Source.
        explode: false
        in: path
        name: sourceId
        required: true
        schema:
          type: string
        style: simple
      - description: The identifier of the ingestion job to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The ingestion job was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete an ingestion job.
      tags:
      - archiveManagement
  /v1/archive/jobs/count:
    get:
      description: Get a list of all Archive Sources with the count and status of
        ingestion jobs.
      operationId: listArchiveJobsCountPerSource
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListArchiveJobsCount'
          description: A list of Archive Sources with ingestion jobs.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: List ingestion jobs for all Archive Sources.
      tags:
      - archiveManagement
  /v1/logSearches/estimatedUsage:
    post:
      description: |
        Gets the estimated volume of data that would be scanned for a given log search in the Infrequent data tier.
      operationId: getLogSearchEstimatedUsage
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSearchEstimatedUsageRequest'
        description: The definition of the log search estimated usage.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearchEstimatedUsageDefinition'
          description: Log search information along with its estimated usage details.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Gets estimated usage details.
      tags:
      - logSearchesEstimatedUsage
  /v1/logSearches/estimatedUsageByTier:
    post:
      description: |
        Gets the estimated volume of data that would be scanned for a given log search per data tier.
      operationId: getLogSearchEstimatedUsageByTier
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogSearchEstimatedUsageRequestV2'
        description: The definition of the log search estimated usage.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogSearchEstimatedUsageByTierDefinition'
          description: Log search information along with its tier wise estimated usage
            details.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Gets Tier Wise estimated usage details.
      tags:
      - logSearchesEstimatedUsage
  /v2/dashboards:
    post:
      description: Creates a new dashboard.
      operationId: createDashboard
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardRequest'
        description: Information to create the new dashboard.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: The dashboard has been created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Create a new dashboard.
      tags:
      - dashboardManagement
  /v2/dashboards/{id}:
    delete:
      description: Delete a dashboard by the given identifier.
      operationId: deleteDashboard
      parameters:
      - description: Identifier of the dashboard to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Dashboard was deleted successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Delete a dashboard.
      tags:
      - dashboardManagement
    get:
      description: Get a dashboard by the given identifier.
      operationId: getDashboard
      parameters:
      - description: UUID of the dashboard to return.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: Dashboard object that was requested.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a dashboard.
      tags:
      - dashboardManagement
    put:
      description: Update a dashboard by the given identifier.
      operationId: updateDashboard
      parameters:
      - description: Identifier of the dashboard to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardRequest'
        description: Information to update on the dashboard.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dashboard'
          description: The dashboard was successfully modified.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Update a dashboard.
      tags:
      - dashboardManagement
  /v2/dashboards/reportJobs:
    post:
      description: |
        Schedule an asynchronous job to generate a report from a template. All items in the template will be included unless specified. See template section for more details on individual templates. Reports can be generated in Pdf or Png format and exported in various methods (ex. direct download). You will get back an asynchronous job identifier on success. Use the [getAsyncReportGenerationStatus](#operation/getAsyncExportStatus) endpoint and the job identifier you got back in the response to track the status of an asynchronous report generation job.
      operationId: generateDashboardReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateReportRequest'
        description: Request for a report.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeginAsyncJobResponse'
          description: Export job has been scheduled.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Start a report job
      tags:
      - dashboardManagement
  /v2/dashboards/reportJobs/{jobId}/status:
    get:
      description: Get the status of an asynchronous report generation request for
        the given job identifier. On success, use the [getReportGenerationResult](#operation/getAsyncReportGenerationResult)
        endpoint to get the result of the report generation job.
      operationId: getAsyncReportGenerationStatus
      parameters:
      - description: The identifier of the asynchronous report generation job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsyncJobStatus'
          description: The status of the report generation job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get report generation job status
      tags:
      - dashboardManagement
  /v2/dashboards/reportJobs/{jobId}/result:
    get:
      description: Get the result of an asynchronous report generation request for
        the given job identifier.
      operationId: getAsyncReportGenerationResult
      parameters:
      - description: The identifier of the asynchronous report generation job.
        explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
            image/png:
              schema:
                format: binary
                type: string
          description: The result of export job.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get report generation job result
      tags:
      - dashboardManagement
  /v1/monitors/usageInfo:
    get:
      description: Get the current number and the allowed number of log and metrics
        monitors.
      operationId: getMonitorUsageInfo
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorUsageInfo'
          description: MonitorUsageInfo has been retrieved successfully.
      summary: Usage info of monitors.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/disable:
    put:
      description: Bulk disable monitors by the given identifiers.
      operationId: disableMonitorByIds
      parameters:
      - description: A comma-separated list of identifiers.
        example: 0000000000000001,0000000000000002,0000000000000003
        explode: false
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisableMonitorResponse'
          description: Disabled monitors
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Disable monitors.
      tags:
      - monitorsLibraryManagement
  /v1/passwordPolicy:
    get:
      description: Get the current password policy.
      operationId: getPasswordPolicy
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPolicy'
          description: The current password policy.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the current password policy.
      tags:
      - passwordPolicy
    put:
      description: Update the current password policy.
      operationId: setPasswordPolicy
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordPolicy'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordPolicy'
          description: Password Policy set successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Setting the password policy failed with an error.
      summary: Update password policy.
      tags:
      - passwordPolicy
  /v1/metricsQueries:
    post:
      description: |-
        Execute up to six metrics queries. If you specify multiple queries, each is returned as a separate set of time series. A metric query returns a maximum of 300 data points per metric. A metric query will process a maximum of 15K unique time series to calculate the query results. Query results are limited to 1000 unique time series.
        For more information see [Metrics Queries](https://help.sumologic.com/?cid=10144).
      operationId: runMetricsQueries
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetricsQueryRequest'
        description: The parameters for the metrics query.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsQueryResponse'
          description: A set of time series grouped by the query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Run metrics queries
      tags:
      - metricsQuery
  /v1/monitors:
    delete:
      description: Bulk delete a monitor or folder by the given identifiers in the
        monitors library.
      operationId: monitorsDeleteByIds
      parameters:
      - description: A comma-separated list of identifiers.
        example: 0000000000000001,0000000000000002,0000000000000003
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToMonitorsLibraryBaseResponseMap'
          description: A map between the deleted identifier and its metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Bulk delete a monitor or folder.
      tags:
      - monitorsLibraryManagement
    get:
      description: Bulk read a monitor or folder by the given identifiers from the
        monitors library.
      operationId: monitorsReadByIds
      parameters:
      - description: A comma-separated list of identifiers.
        example: 0000000000000001,0000000000000002,0000000000000003
        explode: true
        in: query
        name: ids
        required: true
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdToMonitorsLibraryBaseResponseMap'
          description: A map between an identifier and its definition (monitor or
            folder).
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Bulk read a monitor or folder.
      tags:
      - monitorsLibraryManagement
    post:
      description: Create a monitor or folder in the monitors library.
      operationId: monitorsCreate
      parameters:
      - description: Identifier of the parent folder in which to create the monitor
          or folder.
        explode: true
        in: query
        name: parentId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorsLibraryBase'
        description: The monitor or folder to create.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: The monitor or folder was created.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Create a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/root:
    get:
      description: Get the root folder in the monitors library.
      operationId: getMonitorsLibraryRoot
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryFolderResponse'
          description: Root folder of the monitors library.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the root monitors folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/path:
    get:
      description: Read a monitor or folder by its path in the monitors library structure.
      operationId: monitorsGetByPath
      parameters:
      - description: The path of the monitor or folder.
        explode: true
        in: query
        name: path
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: Requested monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Read a monitor or folder by its path.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/search:
    get:
      description: Search for a monitor or folder in the monitors library structure.
      operationId: monitorsSearch
      parameters:
      - description: |-
          The search query to find monitor or folder. Below is the list of different filters with examples:
            - **createdBy** : Filter by the user's identifier who created the content. Example: `createdBy:000000000000968B`.
            - **createdBefore** : Filter by the content objects created before the given timestamp(in milliseconds). Example: `createdBefore:1457997222`.
            - **createdAfter** : Filter by the content objects created after the given timestamp(in milliseconds). Example: `createdAfter:1457997111`.
            - **modifiedBefore** : Filter by the content objects modified before the given timestamp(in milliseconds). Example: `modifiedBefore:1457997222`.
            - **modifiedAfter** : Filter by the content objects modified after the given timestamp(in milliseconds). Example: `modifiedAfter:1457997111`.
            - **type** : Filter by the type of the content object. Example: `type:folder`.
            - **monitorStatus** : Filter by the status of the monitor: Normal, Critical, Warning, MissingData, Disabled, AllTriggered. Example: `monitorStatus:Normal`.

          You can also use multiple filters in one query. For example to search for all content objects created by user with identifier 000000000000968B with creation timestamp after 1457997222 containing the text Test, the query would look like:

            `createdBy:000000000000968B createdAfter:1457997222 Test`
        example: createdBy:000000000000968B Test
        explode: true
        in: query
        name: query
        required: true
        schema:
          type: string
        style: form
      - description: Maximum number of items you want in the response.
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          format: int32
          type: integer
        style: form
      - description: The position or row from where to start the search operation.
        example: 5
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMonitorsLibraryItemWithPath'
          description: List of folders and monitors matching the search query.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Search for a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}:
    delete:
      description: Delete a monitor or folder from the monitors library.
      operationId: monitorsDeleteById
      parameters:
      - description: Identifier of the monitor or folder to delete.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The monitor or folder was successfully deleted.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Delete a monitor or folder.
      tags:
      - monitorsLibraryManagement
    get:
      description: Get a monitor or folder from the monitors library.
      operationId: monitorsReadById
      parameters:
      - description: Identifier of the monitor or folder to read.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: Requested monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get a monitor or folder.
      tags:
      - monitorsLibraryManagement
    put:
      description: Update a monitor or folder in the monitors library.
      operationId: monitorsUpdateById
      parameters:
      - description: Identifier of the monitor or folder to update.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorsLibraryBaseUpdate'
        description: The monitor or folder to update. The content version must match
          its latest version number in the monitors library. If the version does not
          match it will not be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: The monitor or folder was updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: |
        Update a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}/path:
    get:
      description: Get the full path of the monitor or folder in the monitors library.
      operationId: getMonitorsFullPath
      parameters:
      - description: Identifier of the monitor or folder.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Path'
          description: Full path of the monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Get the path of a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}/move:
    post:
      description: Move a monitor or folder to a different location in the monitors
        library.
      operationId: monitorsMove
      parameters:
      - description: Identifier of the monitor or folder to move.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Identifier of the parent folder to move the monitor or folder
          to.
        explode: true
        in: query
        name: parentId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: Moved monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Move a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}/copy:
    post:
      description: Copy a monitor or folder in the monitors library.
      operationId: monitorsCopy
      parameters:
      - description: Identifier of the monitor or folder to copy.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentCopyParams'
        description: |-
          Fields include:
            1) Identifier of the parent folder to copy to.
            2) Optionally provide a new name.
            3) Optionally provide a new description.
            4) Optionally set to true if you want to copy and preserve the locked status. Requires `LockMonitors` capability.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: The monitor or folder was copied.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Copy a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{id}/export:
    get:
      description: Export a monitor or folder. If the given identifier is a folder,
        everything under the folder is exported recursively with folder as the root.
      operationId: monitorsExportItem
      parameters:
      - description: Identifier of the monitor or folder to export.
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseExport'
          description: Exported monitor or folder.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Export a monitor or folder.
      tags:
      - monitorsLibraryManagement
  /v1/monitors/{parentId}/import:
    post:
      description: Import a monitor or folder.
      operationId: monitorsImportItem
      parameters:
      - description: Identifier of the parent folder in which to import the monitor
          or folder.
        explode: false
        in: path
        name: parentId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitorsLibraryBaseExport'
        description: The monitor or folder to be imported.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          description: 'Newly imported monitor or folder. NOTE: Permissions field
            will not be filled (empty list).'
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Operation failed with an error.
      summary: Import a monitor or folder.
      tags:
      - monitorsLibraryManagement
components:
  requestBodies:
    inline_object:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
  schemas:
    AddOrReplaceTransformation:
      allOf:
      - $ref: '#/components/schemas/DimensionTransformation'
      - $ref: '#/components/schemas/AddOrReplaceTransformation_allOf'
    AggregateOnTransformation:
      allOf:
      - $ref: '#/components/schemas/DimensionTransformation'
      - $ref: '#/components/schemas/AggregateOnTransformation_allOf'
    BeginBoundedTimeRange:
      allOf:
      - $ref: '#/components/schemas/ResolvableTimeRange'
      - $ref: '#/components/schemas/BeginBoundedTimeRange_allOf'
    CompleteLiteralTimeRange:
      allOf:
      - $ref: '#/components/schemas/ResolvableTimeRange'
      - $ref: '#/components/schemas/CompleteLiteralTimeRange_allOf'
    EpochTimeRangeBoundary:
      allOf:
      - $ref: '#/components/schemas/TimeRangeBoundary'
      - $ref: '#/components/schemas/EpochTimeRangeBoundary_allOf'
    Iso8601TimeRangeBoundary:
      allOf:
      - $ref: '#/components/schemas/TimeRangeBoundary'
      - $ref: '#/components/schemas/Iso8601TimeRangeBoundary_allOf'
    LiteralTimeRangeBoundary:
      allOf:
      - $ref: '#/components/schemas/TimeRangeBoundary'
      - $ref: '#/components/schemas/LiteralTimeRangeBoundary_allOf'
    RelativeTimeRangeBoundary:
      allOf:
      - $ref: '#/components/schemas/TimeRangeBoundary'
      - $ref: '#/components/schemas/RelativeTimeRangeBoundary_allOf'
    ResolvableTimeRange:
      discriminator:
        propertyName: type
      example:
        type: BeginBoundedTimeRange
        from:
          type: RelativeTimeRangeBoundary
          relativeTime: -15m
      properties:
        type:
          description: Type of the time range. Value must be either `CompleteLiteralTimeRange`
            or `BeginBoundedTimeRange`.
          type: string
      required:
      - type
      type: object
    TimeRangeBoundary:
      discriminator:
        propertyName: type
      properties:
        type:
          description: 'Type of the time range boundary. Value must be from list:
            - `RelativeTimeRangeBoundary`, - `EpochTimeRangeBoundary`, - `Iso8601TimeRangeBoundary`,
            - `LiteralTimeRangeBoundary`.'
          example: RelativeTimeRangeBoundary
          type: string
      required:
      - type
      type: object
    Header:
      properties:
        name:
          description: Name of the header field.
          type: string
        value:
          description: Value of the header field.
          type: string
      required:
      - name
      - value
      type: object
    ConnectionSubtype:
      description: The subtype of the connection. Valid values are `Event` or `Incident`.
      pattern: ^(Event|Incident)$
      type: string
      x-pattern-message: must be `Event` or `Incident`
    ServiceNowConnection:
      allOf:
      - $ref: '#/components/schemas/Connection'
      - $ref: '#/components/schemas/ServiceNowConnection_allOf'
    ServiceNowDefinition:
      allOf:
      - $ref: '#/components/schemas/ConnectionDefinition'
      - $ref: '#/components/schemas/ServiceNowDefinition_allOf'
    WebhookConnection:
      allOf:
      - $ref: '#/components/schemas/Connection'
      - $ref: '#/components/schemas/WebhookConnection_allOf'
    WebhookDefinition:
      allOf:
      - $ref: '#/components/schemas/ConnectionDefinition'
      - $ref: '#/components/schemas/WebhookDefinition_allOf'
    ContainerPanel:
      allOf:
      - $ref: '#/components/schemas/Panel'
      - $ref: '#/components/schemas/ContainerPanel_allOf'
    Layout:
      discriminator:
        propertyName: layoutType
      example:
        layoutStructures:
        - key: panelPANE-3DC454FD977E2A46
          structure: '{\"height\":5,\"width\":9,\"x\":0,\"y\":0}'
        - key: panelPANE-3DC454FD977E2A46
          structure: '{\"height\":5,\"width\":9,\"x\":0,\"y\":0}'
        layoutType: Grid
      properties:
        layoutType:
          description: The type of panel layout on the Dashboard. For example, Grid,
            Tabs, or Hierarchical. Currently supports `Grid` only.
          example: Grid
          type: string
        layoutStructures:
          description: Layout structures for the panel childen.
          items:
            $ref: '#/components/schemas/LayoutStructure'
          type: array
      required:
      - layoutStructures
      - layoutType
      type: object
    Panel:
      discriminator:
        propertyName: panelType
      example:
        keepVisualSettingsConsistentWithParent: true
        visualSettings: '{\"general\":{\"type\":\"column\"}'
        id: 2F7D449E3D511066
        title: This panel shows memory usage for your kubernetes pod.
        panelType: SumoSearchPanel
        key: panelca6280e4a75fca45
      properties:
        id:
          description: Unique identifier for the panel.
          example: 2F7D449E3D511066
          type: string
        key:
          description: |
            Key for the panel. Used to create searches for the queries in the panel and configure the layout of the panel in the dashboard.
          example: panelca6280e4a75fca45
          type: string
        title:
          description: Title of the panel.
          example: This panel shows memory usage for your kubernetes pod.
          type: string
        visualSettings:
          description: Visual settings of the panel.
          example: '{\"general\":{\"type\":\"column\"}'
          type: string
        keepVisualSettingsConsistentWithParent:
          default: true
          description: Keeps the visual settings, like series colors, consistent with
            the settings of the parent panel.
          type: boolean
        panelType:
          description: Type of panel.
          example: SumoSearchPanel
          type: string
      required:
      - key
      - panelType
      type: object
    SumoSearchPanel:
      allOf:
      - $ref: '#/components/schemas/Panel'
      - $ref: '#/components/schemas/SumoSearchPanel_allOf'
    Query:
      properties:
        queryString:
          description: The metrics, traces or logs query.
          example: _sourceCategory=cqsplitter metric=CPU_user | count by _sourceHost
          type: string
        queryType:
          description: The type of the query, either `Metrics`, `Traces` or `Logs`.
          example: Logs
          pattern: ^(Logs|Metrics|Traces)$
          type: string
          x-pattern-message: Must be `Logs`, `Traces` or `Metrics`
        queryKey:
          description: The key for metric, traces or log queries. Used as an identifier
            for queries.
          example: A
          type: string
        metricsQueryMode:
          description: |
            The mode of the metrics query that the user was editing. Can be `Basic` or `Advanced`. Will ONLY be specified for metrics queries.
          example: Basic
          pattern: ^(Basic|Advanced|basic|advanced)$
          type: string
          x-pattern-message: Must be `Basic`, or `Advanced`
        metricsQueryData:
          $ref: '#/components/schemas/MetricsQueryData'
        tracesQueryData:
          $ref: '#/components/schemas/TracesQueryData'
        parseMode:
          default: Auto
          description: |-
            This field only applies for queryType of `Logs` but other query types may be supported in the future. Define the parsing mode to scan the JSON format log messages. Possible values are:
              1. `Auto`
              2. `Manual`
            In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).
          example: Auto
          pattern: ^(Auto|Manual)$
          type: string
          x-pattern-message: Must be either `Auto` or `Manual`
        timeSource:
          default: Message
          description: This field only applies for queryType of `Logs` but other query
            types may be supported in the future. Define the time source of this query.
            Possible values are `Message` and `Receipt`. `Message` will use the timeStamp
            on the message, while `Receipt` will use the timestamp it was received
            by Sumo.
          example: Message
          pattern: ^(Message|Receipt)$
          type: string
          x-pattern-message: Must be `Message or `Receipt`
      required:
      - queryKey
      - queryString
      - queryType
      type: object
    TextPanel:
      allOf:
      - $ref: '#/components/schemas/Panel'
      - $ref: '#/components/schemas/TextPanel_allOf'
    EventsOfInterestScatterPanel:
      allOf:
      - $ref: '#/components/schemas/Panel'
    TracesListPanel:
      allOf:
      - $ref: '#/components/schemas/Panel'
      - $ref: '#/components/schemas/TracesListPanel_allOf'
    ServiceMapPanel:
      allOf:
      - $ref: '#/components/schemas/Panel'
      - $ref: '#/components/schemas/ServiceMapPanel_allOf'
    ColoringRule:
      properties:
        scope:
          description: Regex string to match queries to apply coloring to.
          example: CPU_*
          type: string
        singleSeriesAggregateFunction:
          description: Function to aggregate one series into one single value.
          example: Average
          type: string
        multipleSeriesAggregateFunction:
          description: Function to aggregate the aggregate values of multiple time
            series into one single value.
          example: Average
          type: string
        colorThresholds:
          description: Color thresholds.
          items:
            $ref: '#/components/schemas/ColoringThreshold'
          type: array
      required:
      - coloringThresholds
      - multipleSeriesAggregateFunction
      - scope
      - singleSeriesAggregateFunction
      type: object
    Grid:
      allOf:
      - $ref: '#/components/schemas/Layout'
    LayoutStructure:
      example:
        key: panelPANE-3DC454FD977E2A46
        structure: '{\"height\":5,\"width\":9,\"x\":0,\"y\":0}'
      properties:
        key:
          description: The identifier of the panel that this structure applies to.
          example: panelPANE-3DC454FD977E2A46
          type: string
        structure:
          description: The structure of a panel.
          example: '{\"height\":5,\"width\":9,\"x\":0,\"y\":0}'
          type: string
      required:
      - key
      - structure
      type: object
    ColoringThreshold:
      properties:
        color:
          description: Color for the threshold.
          example: FFFFFF
          type: string
        min:
          description: Absolute inclusive threshold to color by.
          example: 0
          format: double
          type: number
        max:
          description: Absolute exclusive threshold to color by.
          example: 50
          format: double
          type: number
      required:
      - color
      type: object
    MetricsQueryData:
      description: The data format describing a basic metrics query.
      example:
        metric: CPU_user
        aggregationType: count
        groupBy: _sourceHost
        filters:
        - key: _sourceCategory
          value: kubernetes
        - key: _sourceHost
          value: dep-kubernetes-1
        operators:
          operatorName: avg
          parameters:
          - key: aggregator
            value: max
          - key: operation
            value: ""
          - key: value
            value: 50
      properties:
        metric:
          description: The metric of the query.
          example: CPU_user
          type: string
        aggregationType:
          description: The type of aggregation. Can be `Count`, `Minimum`, `Maximum`,
            `Sum`, `Average` or `None`.
          example: Count
          pattern: ^(Count|Minimum|Maximum|Sum|Average|None)$|^$
          type: string
          x-pattern-message: Must be `Count`, `Minimum`, `Maximum`, `Sum`, `Average`
            or `None`
        groupBy:
          description: The field to group the results by.
          example: _sourceHost
          type: string
        filters:
          description: A list of filters for the metrics query.
          items:
            $ref: '#/components/schemas/MetricsFilter'
          type: array
        operators:
          description: A list of operator data for the metrics query.
          items:
            $ref: '#/components/schemas/OperatorData'
          type: array
      required:
      - filters
      - metric
      type: object
    MetricsFilter:
      description: The filter for metrics query.
      example:
        key: _sourceCategory
        value: cqmerger
        negation: false
      properties:
        key:
          description: The key of the metrics filter.
          example: _sourceCategory
          type: string
        value:
          description: The value of the metrics filter.
          example: kubernetes
          type: string
        negation:
          description: Whether or not the metrics filter is negated.
          example: false
          type: boolean
      required:
      - value
      type: object
    VariablesValuesData:
      properties:
        data:
          additionalProperties:
            items:
              type: string
            type: array
          default: {}
          description: Data for variable values.
          type: object
        richData:
          additionalProperties:
            $ref: '#/components/schemas/VariableValuesData'
          description: A rich form of data for the variable search, including variable
            values, status and variable type. This field is different from `data`
            in that it includes an object instead of list as the value in the map.
            The `data` field is kept for backwards compatibility, please use `richData`
            for all usages going forward.
          type: object
      required:
      - data
      type: object
    GenerateReportRequest:
      example:
        template:
          templateType: DashboardTemplate
        timezone: America/Los_Angeles
        action:
          actionType: DirectDownloadReportAction
        exportFormat: Pdf
      properties:
        action:
          $ref: '#/components/schemas/ReportAction'
        exportFormat:
          description: File format of the report. Can be `Pdf` or `Png`. `Pdf` is
            portable document format. `Png` is portable graphics image format.
          example: Pdf
          pattern: ^(Pdf|Png)$
          type: string
          x-pattern-message: 'should be one of the following: ''Pdf'', ''Png'''
        timezone:
          description: Time zone for the query time ranges. Follow the format in the
            [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
          example: America/Los_Angeles
          type: string
        template:
          $ref: '#/components/schemas/Template'
      required:
      - action
      - exportFormat
      - template
      - timezone
      type: object
    ReportAction:
      description: The base class of all report action types. `DirectDownloadReportAction`
        downloads dashboard from browser. New action types may be supported in the
        future.
      discriminator:
        propertyName: actionType
      example:
        actionType: DirectDownloadReportAction
      properties:
        actionType:
          description: Type of action.
          example: DirectDownloadReportAction
          pattern: ^DirectDownloadReportAction$
          type: string
          x-pattern-message: should be 'DirectDownloadReportAction'
      required:
      - actionType
      type: object
    DirectDownloadReportAction:
      allOf:
      - $ref: '#/components/schemas/ReportAction'
      - description: Generate a direct download report action.
        type: object
    Template:
      discriminator:
        propertyName: templateType
      example:
        templateType: DashboardTemplate
      properties:
        templateType:
          description: The type of template. `DashboardTemplate` provides a snapshot
            view of the exported dashboard. `DashboardReportModeTemplate` provides
            a printer-friendly view of the exported dashboard. New templates may be
            supported in the future.
          example: DashboardTemplate
          pattern: ^(DashboardTemplate|DashboardReportModeTemplate)$
          type: string
          x-pattern-message: Must be `DashboardTemplate`, or `DashboardReportModeTemplate`
      required:
      - templateType
      type: object
    DashboardTemplate:
      allOf:
      - $ref: '#/components/schemas/Template'
      - $ref: '#/components/schemas/DashboardTemplate_allOf'
    DashboardReportModeTemplate:
      allOf:
      - $ref: '#/components/schemas/DashboardTemplate'
      - description: Generate the report from a dashboard template in report mode.
        type: object
    DashboardSearchSessionIds:
      properties:
        data:
          additionalProperties:
            type: string
          default: {}
          description: Map of search keys to session ids.
          type: object
        errors:
          additionalProperties:
            $ref: '#/components/schemas/ErrorResponse'
          description: Error description for the session keys that failed validation.
          type: object
      required:
      - data
      type: object
    Variable:
      example:
        hideFromUI: false
        allowMultiSelect: false
        displayName: Source Host
        defaultValue: default_value
        sourceDefinition:
          variableSourceType: MetadataVariableSourceDefinition
        valueType: Any
        name: _sourceHost
        includeAllOption: true
        id: id
      properties:
        id:
          description: Unique identifier for the variable.
          type: string
        name:
          description: |
            Name of the variable. The variable name is case-insensitive. Only alphanumeric, and underscores are
            allowed in the variable name.
          example: _sourceHost
          maxLength: 256
          pattern: ^[a-zA-Z0-9_.\-:\/]*$
          type: string
          x-pattern-message: Only alphanumeric, dot, slash, dash, colon and underscores
            are allowed.
        displayName:
          description: |
            Display name of the variable shown in the UI. If this field is empty, the name field will be used.
            The display name is case-insensitive. Only numbers, and underscores are allowed in the variable name.
            This field is not yet supported by the UI.
          example: Source Host
          maxLength: 256
          type: string
        defaultValue:
          description: Default value of the variable.
          example: default_value
          type: string
        sourceDefinition:
          $ref: '#/components/schemas/VariableSourceDefinition'
        allowMultiSelect:
          default: false
          description: Allow multiple selections in the values dropdown.
          example: false
          type: boolean
        includeAllOption:
          default: true
          description: Include an "All" option at the top of the variable's values
            dropdown.
          example: true
          type: boolean
        hideFromUI:
          default: false
          description: Hide the variable in the dashboard UI.
          example: false
          type: boolean
        valueType:
          default: Any
          description: The type of value of the variable. Allowed values are `String`
            and Any`. `String` considers as a single phrase and will wrap in double-quotes,
            `Any` is all characters.
          example: Any
          pattern: ^(String|Any)$
          type: string
          x-pattern-message: Only `String` and `Any` are allowed.
      required:
      - name
      - sourceDefinition
      type: object
    VariableSourceDefinition:
      discriminator:
        propertyName: variableSourceType
      example:
        variableSourceType: MetadataVariableSourceDefinition
      properties:
        variableSourceType:
          description: Source type of the variable values.
          example: MetadataVariableSourceDefinition
          type: string
      required:
      - variableSourceType
      type: object
    MetadataVariableSourceDefinition:
      allOf:
      - $ref: '#/components/schemas/VariableSourceDefinition'
      - $ref: '#/components/schemas/MetadataVariableSourceDefinition_allOf'
    CsvVariableSourceDefinition:
      allOf:
      - $ref: '#/components/schemas/VariableSourceDefinition'
      - $ref: '#/components/schemas/CsvVariableSourceDefinition_allOf'
    LogQueryVariableSourceDefinition:
      allOf:
      - $ref: '#/components/schemas/VariableSourceDefinition'
      - $ref: '#/components/schemas/LogQueryVariableSourceDefinition_allOf'
    VariableValuesLogQueryRequest:
      description: The request to get a log query to populate variable values.
      properties:
        query:
          description: The original log query of the variable.
          example: _sourceCategory=forge | count by _sourceHost
          type: string
        field:
          description: A field in log query to populate the variable values.
          example: _sourceHost
          type: string
        variablesValues:
          $ref: '#/components/schemas/VariablesValuesData'
      required:
      - field
      - query
      type: object
    TopologySearchLabel:
      description: |
        Topology label to search for. Each label has a key and a list of values. If a value is `*`, it means we want to match for all values of the label's key.
      example:
        key: pod
        value: '*'
        isRequired: true
      properties:
        key:
          description: Key of a topology label to search for.
          type: string
        value:
          description: Value of a topology label to search for.
          type: string
        isRequired:
          description: |
            Whether the content item is required to contain this label in order to be matched. If true, content items without this label will not be matched. If false, content items without this label will be matched.
          type: boolean
      required:
      - key
      - value
      type: object
    AlertSearchNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - $ref: '#/components/schemas/AlertSearchNotificationSyncDefinition_allOf'
    EmailSearchNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - $ref: '#/components/schemas/EmailSearchNotificationSyncDefinition_allOf'
    FolderSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - $ref: '#/components/schemas/FolderSyncDefinition_allOf'
    QueryParameterSyncDefinition:
      properties:
        name:
          description: The name of the parameter.
          type: string
        label:
          description: The label of the parameter.
          type: string
        description:
          description: A description of the parameter.
          type: string
        dataType:
          description: |-
            The data type of the parameter. Supported values are:
              1. `NUMBER`
              2. `STRING`
              3. `QUERY_FRAGMENT`
              4. `SEARCH_KEYWORD`
          type: string
        value:
          description: A value for the parameter. Should be compatible with the type
            set in dataType field.
          type: string
        autoComplete:
          $ref: '#/components/schemas/ParameterAutoCompleteSyncDefinition'
      required:
      - autoComplete
      - dataType
      - description
      - label
      - name
      - value
      type: object
    DashboardSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - $ref: '#/components/schemas/DashboardSyncDefinition_allOf'
    MewboardSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - $ref: '#/components/schemas/MewboardSyncDefinition_allOf'
    DashboardV2SyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - $ref: '#/components/schemas/MewboardSyncDefinition_allOf'
    NotificationThresholdSyncDefinition:
      properties:
        thresholdType:
          description: |-
            Threshold type. Possible values are:
             1. `message`
             2. `group`

            Use `group` as threshold type if the search query is of aggregate type. For non-aggregate queries, set it to `message`.
          type: string
        operator:
          description: |-
            Criterion to be applied when comparing actual result count with expected count. Possible values are:
             1. `eq`
             2. `gt`
             3. `ge`
             4. `lt`
             5. `le`
          type: string
        count:
          description: Expected result count.
          type: integer
      required:
      - count
      - operator
      - thresholdType
      type: object
    ReportFilterSyncDefinition:
      properties:
        fieldName:
          description: The name af the field being filtered on, as listed in PanelField.
          type: string
        label:
          description: The name of the field being filtered on, as displayed to the
            user.
          type: string
        defaultValue:
          description: The default value of the parameter.
          type: string
        filterType:
          description: Type of filter. Can only be `numeric` or `textbox`.
          type: string
        properties:
          description: Visual settings for the panel.
          type: string
        panelIds:
          description: A list of panel identifiers that the filter applies to.
          items:
            type: string
          type: array
      required:
      - fieldName
      - filterType
      - label
      - panelIds
      - properties
      type: object
    ReportPanelSyncDefinition:
      properties:
        name:
          description: The title of the panel.
          type: string
        viewerType:
          description: |-
            Type of [area chart](https://help.sumologic.com/Dashboards-and-Alerts/Dashboards/Chart-Panel-Types). Supported values are:
              1. `table` for Table
              2. `bar` for Bar Chart
              3. `column` for Column Chart
              4. `line` for Line Chart
              5. `area` for Area Chart
              6. `pie` for Pie Chart
              7. `svv` for Single Value Viewer
              8. `title` for Title Panel
              9. `text` for Text Panel

            Values 1-7 are used for Data Panels.
          type: string
        detailLevel:
          description: |-
            Supported values are:
              - `1` for small
              - `2` for medium
              - `3` for large
          type: integer
        queryString:
          description: The query to run, for panels associated to log searches.
          type: string
        metricsQueries:
          description: The query or queries to run, for panels associated to metrics
            searches.
          items:
            $ref: '#/components/schemas/MetricsQuerySyncDefinition'
          type: array
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        x:
          description: The horizontal position of the panel. A sumo screen is divided
            into 24 columns. The value for x can be any integer from 0 to 24.
          type: integer
        y:
          description: The vertical position of the panel. A sumo screen is divided
            into 24 rows. The value for y can be any integer from 0 to 24.
          type: integer
        width:
          description: The width of the panel.
          type: integer
        height:
          description: The height of the panel.
          type: integer
        properties:
          description: Visual settings for the panel.
          type: string
        id:
          description: A string identifier that you can use to refer to the panel
            in filters.panelIds.
          type: string
        desiredQuantizationInSecs:
          description: The quantization interval aligns your time series data to common
            intervals on the time axis (for example every one minute) to optimize
            the visualization and performance.
          type: integer
        queryParameters:
          description: The parameters for parameterized searches.
          items:
            $ref: '#/components/schemas/QueryParameterSyncDefinition'
          type: array
        autoParsingInfo:
          $ref: '#/components/schemas/ReportAutoParsingInfo'
      required:
      - detailLevel
      - height
      - id
      - metricsQueries
      - name
      - properties
      - queryParameters
      - queryString
      - timeRange
      - viewerType
      - width
      - x
      - "y"
      type: object
    SavedSearchWithScheduleSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - $ref: '#/components/schemas/SavedSearchWithScheduleSyncDefinition_allOf'
    SavedSearchSyncDefinition:
      properties:
        queryText:
          description: The text of a Sumo Logic query.
          type: string
        defaultTimeRange:
          description: |-
            Default time range for the search. Possible types of time ranges are:
              - relative time range: e.g. "-1d -12h" represents a time range from one day ago to 12 hours ago.
              - absolute time range: e.g. "01-04-2017 20:32:00 to 01-04-2017 20:35:00" represents a time range
                from April 1st, 2017 at 8:32 PM until April 1st, 2017 at 8:35 PM.
          type: string
        byReceiptTime:
          default: false
          description: Set it to true to run the search using receipt time. By default,
            searches do not run by receipt time.
          type: boolean
        viewName:
          description: The name of the Scheduled View that has indexed the data you
            want to search.
          type: string
        viewStartTime:
          description: Start timestamp of the Scheduled View in UTC format.
          format: date-time
          type: string
        queryParameters:
          description: An array of search query parameter objects.
          items:
            $ref: '#/components/schemas/QueryParameterSyncDefinition'
          type: array
        parsingMode:
          default: Manual
          description: |-
            Define the parsing mode to scan the JSON format log messages. Possible values are:
              1. `AutoParse`
              2. `Manual`
            In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).
          example: AutoParse
          type: string
      required:
      - byReceiptTime
      - defaultTimeRange
      - queryParameters
      - queryText
      type: object
    SaveToViewNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - $ref: '#/components/schemas/SaveToViewNotificationSyncDefinition_allOf'
    SaveToLookupNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - $ref: '#/components/schemas/SaveToLookupNotificationSyncDefinition_allOf'
    ScheduleNotificationSyncDefinition:
      discriminator:
        propertyName: taskType
      properties:
        taskType:
          description: Delivery channel for notifications.
          type: string
      required:
      - taskType
      type: object
    ScheduleSearchParameterSyncDefinition:
      properties:
        name:
          description: Name of scheduled search parameter.
          type: string
        value:
          description: Value of scheduled search parameter.
          type: string
      required:
      - name
      - value
      type: object
    SearchScheduleSyncDefinition:
      properties:
        cronExpression:
          description: Cron-like expression specifying the search's schedule. Field
            scheduleType must be set to "Custom", otherwise, scheduleType takes precedence
            over cronExpression.
          example: 0 0/15 * * * ? *
          type: string
        displayableTimeRange:
          description: A human-friendly text describing the query time range. For
            e.g. "-2h", "last three days", "team default time"
          example: -2h
          type: string
        parseableTimeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        timeZone:
          description: Time zone identifier for time specification. Either an abbreviation
            such as "PST", a full name such as "America/Los_Angeles", or a custom
            ID such as "GMT-8:00". Note that the support of abbreviations is for JDK
            1.1.x compatibility only and full names should be used.
          type: string
        threshold:
          $ref: '#/components/schemas/NotificationThresholdSyncDefinition'
        notification:
          $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
        scheduleType:
          description: |-
            Run schedule of the scheduled search. Set to "Custom" to specify the schedule with a CRON expression. Possible schedule types are:
              - `RealTime`
              - `15Minutes`
              - `1Hour`
              - `2Hours`
              - `4Hours`
              - `6Hours`
              - `8Hours`
              - `12Hours`
              - `1Day`
              - `1Week`
              - `Custom`
          type: string
        muteErrorEmails:
          description: If enabled, emails are not sent out in case of errors with
            the search.
          type: boolean
        parameters:
          description: A list of scheduled search parameters.
          items:
            $ref: '#/components/schemas/ScheduleSearchParameterSyncDefinition'
          type: array
      required:
      - notification
      - parameters
      - parseableTimeRange
      - scheduleType
      - timeZone
      type: object
    ServiceNowSearchNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - $ref: '#/components/schemas/ServiceNowSearchNotificationSyncDefinition_allOf'
    ServiceNowFieldsSyncDefinition:
      properties:
        eventType:
          description: The category that the event source uses to identify the event.
          type: string
        severity:
          description: |-
            An integer value representing the severity of the alert. Supported values are:
              - `0` for Clear
              - `1` for Critical
              - `2` for Major
              - `3` for Minor
              - `4` for Warning
          type: integer
        resource:
          description: The component on the node to which the event applies.
          type: string
        node:
          description: The physical or virtual device on which the event occurred.
          type: string
      type: object
    WebhookSearchNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - $ref: '#/components/schemas/WebhookSearchNotificationSyncDefinition_allOf'
    CseSignalNotificationSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ScheduleNotificationSyncDefinition'
      - $ref: '#/components/schemas/CseSignalNotificationSyncDefinition_allOf'
    MetricsSavedSearchSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - $ref: '#/components/schemas/MetricsSavedSearchSyncDefinition_allOf'
    MetricsSearchSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - $ref: '#/components/schemas/MetricsSearchSyncDefinition_allOf'
    LookupTableSyncDefinition:
      allOf:
      - $ref: '#/components/schemas/ContentSyncDefinition'
      - $ref: '#/components/schemas/ExportableLookupTableInfo'
    CollectorRegistrationTokenResponse:
      allOf:
      - $ref: '#/components/schemas/TokenBaseResponse'
      - $ref: '#/components/schemas/CollectorRegistrationTokenResponse_allOf'
    CollectorResourceIdentity:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentity'
    OrgIdentity:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentity'
    SourceResourceIdentity:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentity'
      - $ref: '#/components/schemas/SourceResourceIdentity_allOf'
    IngestBudgetResourceIdentity:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentity'
      - $ref: '#/components/schemas/IngestBudgetResourceIdentity_allOf'
    LogsToMetricsRuleIdentity:
      allOf:
      - $ref: '#/components/schemas/ResourceIdentity'
    CollectorLimitApproachingTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    OAuthRefreshFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/OAuthRefreshFailedTracker_allOf'
    IngestBudgetExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/DataIngestAffectedTracker'
    CollectionAffectedDueToIngestBudgetTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/DataIngestAffectedTracker'
      - $ref: '#/components/schemas/CollectionAffectedDueToIngestBudgetTracker_allOf'
    CollectionS3AccessDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/S3CollectionErrorTracker'
      - $ref: '#/components/schemas/CollectionS3AccessDeniedTracker_allOf'
    CollectionS3GetObjectAccessDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/S3CollectionErrorTracker'
      - $ref: '#/components/schemas/CollectionS3AccessDeniedTracker_allOf'
    CollectionS3InvalidKeyTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/S3CollectionErrorTracker'
      - $ref: '#/components/schemas/CollectionS3InvalidKeyTracker_allOf'
    CollectionS3ListingFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/S3CollectionErrorTracker'
      - $ref: '#/components/schemas/CollectionS3ListingFailedTracker_allOf'
    CollectionS3SlowListingTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/S3CollectionErrorTracker'
      - $ref: '#/components/schemas/CollectionS3SlowListingTracker_allOf'
    InstalledCollectorOfflineTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/InstalledCollectorOfflineTracker_allOf'
    IngestThrottlingTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/DataIngestAffectedTracker'
      - $ref: '#/components/schemas/IngestThrottlingTracker_allOf'
    CollectionInvalidFilePathTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/FileCollectionErrorTracker'
      - $ref: '#/components/schemas/CollectionInvalidFilePathTracker_allOf'
    CollectionPathAccessDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/FileCollectionErrorTracker'
      - $ref: '#/components/schemas/CollectionInvalidFilePathTracker_allOf'
    CollectionRemoteConnectionFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/FileCollectionErrorTracker'
    CollectionDockerClientBuildingFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    CollectionWindowsEventChannelConnectionFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    CollectionWindowsHostConnectionFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    CollectionAwsMetadataTagsFetchDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    CollectionCloudWatchTagsFetchDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'
    CollectionCloudWatchListMetricsDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'
      - $ref: '#/components/schemas/CollectionCloudWatchListMetricsDeniedTracker_allOf'
    CollectionCloudWatchGetStatisticsDeniedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'
      - $ref: '#/components/schemas/CollectionCloudWatchListMetricsDeniedTracker_allOf'
    CollectionCloudWatchGetStatisticsThrottledTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsCloudWatchCollectionErrorTracker'
    MetricsHighCardinalityDetectedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsHighCardinalityDetectedTracker_allOf'
    MetricsCardinalityLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsCardinalityLimitExceededTracker_allOf'
    HighCardinalityDimensionDroppedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/HighCardinalityDimensionDroppedTracker_allOf'
    LogsToMetricsRuleDisabledTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    SpanIngestLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
    CollectionAwsInventoryThrottledTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsInventoryCollectionErrorTracker'
    CollectionAwsInventoryUnauthorizedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/AwsInventoryCollectionErrorTracker'
    CSEWindowsInvalidConfigurationTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsErrorTracker'
      - $ref: '#/components/schemas/CSEWindowsInvalidConfigurationTracker_allOf'
    CSEWindowsRuntimeErrorTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsErrorTracker'
      - $ref: '#/components/schemas/CSEWindowsInvalidConfigurationTracker_allOf'
    CSEWindowsExcessiveEventLogMonitorsTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsErrorTracker'
      - $ref: '#/components/schemas/CSEWindowsInvalidConfigurationTracker_allOf'
    CSEWindowsRuntimeWarningTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsErrorTracker'
      - $ref: '#/components/schemas/CSEWindowsInvalidConfigurationTracker_allOf'
    CSEWindowsInvalidUserPermissionsTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsAccessErrorTracker'
      - $ref: '#/components/schemas/CSEWindowsInvalidUserPermissionsTracker_allOf'
    CSEWindowsWriteQueueFilesToSensorDirectoryFailedTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsAccessErrorTracker'
      - $ref: '#/components/schemas/CSEWindowsInvalidUserPermissionsTracker_allOf'
    CSEWindowsStorageLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsSensorOutOfStorageTracker'
      - $ref: '#/components/schemas/CSEWindowsStorageLimitExceededTracker_allOf'
    CSEWindowsStorageLimitApproachingTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsSensorOutOfStorageTracker'
      - $ref: '#/components/schemas/CSEWindowsStorageLimitExceededTracker_allOf'
    CSEWindowsErrorAppendingToQueueFilesTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsSensorOutOfStorageTracker'
      - $ref: '#/components/schemas/CSEWindowsStorageLimitExceededTracker_allOf'
    CSEWindowsErrorParsingRecordsTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsParsingErrorTracker'
      - $ref: '#/components/schemas/CSEWindowsErrorParsingRecordsTracker_allOf'
    CSEWindowsExcessiveFilesPendingUploadTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsExcessiveBacklogTracker'
      - $ref: '#/components/schemas/CSEWindowsExcessiveFilesPendingUploadTracker_allOf'
    CSEWindowsOldestRecordTimestampExceedsThresholdTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsExcessiveBacklogTracker'
      - $ref: '#/components/schemas/CSEWindowsExcessiveFilesPendingUploadTracker_allOf'
    CSEWindowsSensorOfflineTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/CSEWindowsSensorOfflineTracker_allOf'
    MetricsMetadataKeyLengthLimitExceeded:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataValueLengthLimitExceeded:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataKeyValuePairsLimitExceeded:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataTotalMetadataSizeLimitExceeded:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    PermissionSubject:
      description: Identifier for the entity (subject) that is granted the permission
        on resource(s).
      properties:
        subjectType:
          description: 'Type of subject for the permission. Valid values are: `user`
            or `role`.'
          example: role
          pattern: ^(user|role)$
          type: string
          x-pattern-message: 'must be one of the following: `user`, `role`'
        subjectId:
          description: The identifier that belongs to the subject type chosen above.
            For e.g. if the subjectType is set to `user`, subjectId should be the
            identifier of a user (same goes for `role` subjectType).
          example: 0000000006743FDA
          type: string
      required:
      - subjectId
      - subjectType
      type: object
    PermissionIdentifier:
      allOf:
      - $ref: '#/components/schemas/PermissionSubject'
      - $ref: '#/components/schemas/PermissionIdentifier_allOf'
    PermissionIdentifiers:
      properties:
        permissionIdentifiers:
          description: List of permission identifiers.
          items:
            $ref: '#/components/schemas/PermissionIdentifier'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - permissionIdentifiers
      type: object
    PermissionStatementDefinition:
      allOf:
      - $ref: '#/components/schemas/Permissions'
      - $ref: '#/components/schemas/PermissionStatementDefinition_allOf'
    PermissionStatementDefinitions:
      properties:
        permissionStatementDefinitions:
          description: List of permission statement definitions.
          items:
            $ref: '#/components/schemas/PermissionStatementDefinition'
          maxItems: 1000
          minItems: 1
          type: array
      required:
      - permissionStatementDefinitions
      type: object
    PermissionStatement:
      allOf:
      - $ref: '#/components/schemas/PermissionStatementDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      type: object
    PermissionStatements:
      properties:
        permissionStatements:
          description: A list of permission statements.
          items:
            $ref: '#/components/schemas/PermissionStatement'
          type: array
      required:
      - permissionStatements
      type: object
    PermissionSummaryMeta:
      description: Permission Summary with additional information like inheritance,
        revocation, etc about the permission.
      properties:
        name:
          description: 'Name of the permission. Example values are: `Read`, `Update`,
            `Create`, etc.'
          example: Read
          type: string
        isInherited:
          description: A true value implies that the permission is inherited from
            some ancestors of the resource. A false value implies that the permission
            is explicitly assigned to the resource.
          example: true
          type: boolean
        isExplicit:
          description: A true value implies that the permission is explicitly assigned
            to the resource. A false value implies that the permission is not explicitly
            assigned to the resource.
          example: true
          type: boolean
        isRevoked:
          description: A true value implies that the capability required for this
            permission has been revoked.
          example: true
          type: boolean
        isRecursive:
          description: A true value implies that the permission is recursively cascaded
            down to all the direct and indirect children of the resource.
          example: true
          type: boolean
        isSystemDefined:
          description: A true value implies that the permission is defined by the
            system on the resource and can not be modified by the user. A false value
            implies that the permission is defined by the user on the resource and
            can be modified by the user.
          example: true
          type: boolean
      required:
      - isExplicit
      - isInherited
      - isRecursive
      - isRevoked
      - isSystemDefined
      - name
      type: object
    PermissionSummaryBySubjects:
      allOf:
      - $ref: '#/components/schemas/PermissionSubject'
      - $ref: '#/components/schemas/PermissionSummaryBySubjects_allOf'
      description: A list of PermissionSubjects and PermissionSummaryMeta(s) associated
        with each subject.
    PermissionSummariesBySubjects:
      properties:
        permissionSummariesBySubjects:
          description: A list of PermissionSubjects and PermissionSummaryMeta(s) associated
            with each subject.
          items:
            $ref: '#/components/schemas/PermissionSummaryBySubjects'
          type: array
      required:
      - permissionSummariesBySubjects
      type: object
    Permissions:
      properties:
        permissions:
          description: List of permissions.
          example:
          - Read
          - Delete
          items:
            type: string
          type: array
      required:
      - permissions
      type: object
    Email:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/Email_allOf'
    AWSLambda:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/AWSLambda_allOf'
    AzureFunctions:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/AWSLambda_allOf'
    Datadog:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/AWSLambda_allOf'
    HipChat:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/AWSLambda_allOf'
    PagerDuty:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/AWSLambda_allOf'
    Slack:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/AWSLambda_allOf'
    NewRelic:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/AWSLambda_allOf'
    Jira:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/AWSLambda_allOf'
    Opsgenie:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/AWSLambda_allOf'
    MicrosoftTeams:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/AWSLambda_allOf'
    ServiceNow:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/ServiceNow_allOf'
    SumoCloudSOAR:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/ServiceNow_allOf'
    Webhook:
      allOf:
      - $ref: '#/components/schemas/Action'
      - $ref: '#/components/schemas/AWSLambda_allOf'
    ChartDataRequest:
      description: Request payload for monitor chart data visualization.
      properties:
        monitorType:
          description: |-
            The type of monitor. Valid values:
              1. `Logs`: A logs query monitor.
              2. `Metrics`: A metrics query monitor.
          example: Logs
          pattern: ^(Logs|Metrics)$
          type: string
          x-pattern-message: should be either 'Logs' or 'Metrics'
        queries:
          description: All queries from the monitor.
          items:
            $ref: '#/components/schemas/MonitorQuery'
          type: array
          uniqueItems: true
        triggers:
          description: Defines the conditions of when to send notifications.
          items:
            $ref: '#/components/schemas/TriggerCondition'
          type: array
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
      required:
      - monitorType
      - queries
      type: object
    ChartDataResult:
      description: Response for monitor chart data visualization.
      properties:
        warnings:
          description: Execution warnings of queries.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
        series:
          description: List of time series of the monitor chart data.
          items:
            $ref: '#/components/schemas/SeriesData'
          type: array
      type: object
    OutlierSeriesDataPoint:
      allOf:
      - $ref: '#/components/schemas/DataPoint'
      - $ref: '#/components/schemas/OutlierSeriesDataPoint_allOf'
    StaticSeriesDataPoint:
      allOf:
      - $ref: '#/components/schemas/DataPoint'
      - $ref: '#/components/schemas/StaticSeriesDataPoint_allOf'
    SearchQueryFieldsAndTypes:
      items:
        $ref: '#/components/schemas/SearchQueryFieldAndType'
      type: array
    SearchQueryFieldAndType:
      description: A log field and its associated type
      properties:
        fieldName:
          description: Log field parsed from log search query.
          example: status_code
          type: string
        fieldType:
          description: |-
            The type of the field inferred from log results and explicit configuration. Valid values:
              1. `NumericValue`: A field with a numerical type.
              2. `DistinctCount`: A field with a dimensional type.
          pattern: ^(NumericValue|DistinctCount)$
          type: string
          x-pattern-message: should be either 'NumericValue' or 'DistinctCount'
        isImplicitField:
          description: Indicates if the field is implicit or user defined.
          example: true
          type: boolean
      type: object
    TriggerCondition:
      discriminator:
        propertyName: detectionMethod
      properties:
        detectionMethod:
          default: StaticCondition
          description: |-
            Detection method of the trigger condition. Valid values:
              1. `StaticCondition`: A condition that triggers based off of a static threshold.
              2. `LogsStaticCondition`: A logs condition that triggers based off of a static threshold. Currently LogsStaticCondition is available in closed beta (Notify your Sumo Logic representative in order to get the early access).
              3. `MetricsStaticCondition`: A metrics condition that triggers based off of a static threshold. Currently MetricsStaticCondition is available in closed beta (Notify your Sumo Logic representative in order to get the early access).
              4. `LogsOutlierCondition`: A logs condition that triggers based off of a dynamic outlier threshold. Currently LogsOutlierCondition is available in closed beta (Notify your Sumo Logic representative in order to get the early access).
              5. `MetricsOutlierCondition`: A metrics condition that triggers based off of a dynamic outlier threshold. Currently MetricsOutlierCondition is available in closed beta (Notify your Sumo Logic representative in order to get the early access).
              6. `LogsMissingDataCondition`: A logs missing data condition that triggers based off of no data available. Currently LogsMissingDataCondition is available in closed beta (Notify your Sumo Logic representative in order to get the early access).
              7. `MetricsMissingDataCondition`: A metrics missing data condition that triggers based off of no data available. Currently MetricsMissingDataCondition is available in closed beta (Notify your Sumo Logic representative in order to get the early access).
          example: StaticCondition
          pattern: ^(StaticCondition|LogsStaticCondition|MetricsStaticCondition|LogsOutlierCondition|MetricsOutlierCondition|LogsMissingDataCondition|MetricsMissingDataCondition)$
          type: string
          x-pattern-message: 'should be one of the following: ''StaticCondition'',
            ''LogsStaticCondition'', ''MetricsStaticCondition'', ''LogsOutlierCondition'',
            ''MetricsOutlierCondition'', ''LogsMissingDataCondition'', ''MetricsMissingDataCondition'''
        triggerType:
          description: |-
            The type of trigger condition. Valid values:
              1. `Critical`: A critical condition to trigger on.
              2. `Warning`: A warning condition to trigger on.
              3. `MissingData`: A condition that indicates data is missing.
              4. `ResolvedCritical`: A condition to resolve a Critical trigger on.
              5. `ResolvedWarning`: A condition to resolve a Warning trigger on.
              6. `ResolvedMissingData`: A condition to resolve a MissingData trigger.
          example: Critical
          pattern: ^(Critical|Warning|MissingData|ResolvedCritical|ResolvedWarning|ResolvedMissingData)$
          type: string
          x-pattern-message: 'should be one of the following: ''Critical'', ''Warning'',
            ''MissingData'', ''ResolvedCritical'', ''ResolvedWarning'', or ''ResolvedMissingData'''
      required:
      - triggerType
      type: object
    StaticCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - $ref: '#/components/schemas/StaticCondition_allOf'
    LogsStaticCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - $ref: '#/components/schemas/LogsStaticCondition_allOf'
    MetricsStaticCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - $ref: '#/components/schemas/MetricsStaticCondition_allOf'
    LogsOutlierCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - $ref: '#/components/schemas/LogsOutlierCondition_allOf'
    MetricsOutlierCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - $ref: '#/components/schemas/MetricsOutlierCondition_allOf'
    LogsMissingDataCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - $ref: '#/components/schemas/LogsMissingDataCondition_allOf'
    MetricsMissingDataCondition:
      allOf:
      - $ref: '#/components/schemas/TriggerCondition'
      - $ref: '#/components/schemas/MetricsMissingDataCondition_allOf'
    AlertSignalContext:
      allOf:
      - $ref: '#/components/schemas/SignalContext'
      - $ref: '#/components/schemas/AlertSignalContext_allOf'
      description: Details of the alert signal context.
      type: object
    MonitorsLibraryBase:
      discriminator:
        propertyName: type
      example:
        name: name
        description: description
        type: type
      properties:
        name:
          description: Name of the monitor or folder.
          type: string
        description:
          default: ""
          description: Description of the monitor or folder.
          type: string
        type:
          description: |-
            Type of the object model. Valid values:
              1) MonitorsLibraryMonitor
              2) MonitorsLibraryFolder
          type: string
      required:
      - name
      - type
      type: object
    MonitorsLibraryBaseUpdate:
      discriminator:
        propertyName: type
      example:
        name: name
        description: description
        type: type
        version: 0
      properties:
        name:
          description: The name of the monitor or folder.
          type: string
        description:
          default: ""
          description: The description of the monitor or folder.
          type: string
        version:
          description: The version of the monitor or folder.
          format: int64
          type: integer
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      - version
      type: object
    MonitorsLibraryBaseResponse:
      discriminator:
        propertyName: type
      example:
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        description: description
        type: type
        version: 0
        parentId: parentId
        isSystem: true
        createdAt: 2000-01-23T04:56:07.000+00:00
        isMutable: true
        createdBy: createdBy
        permissions:
        - Read
        - Delete
        name: name
        modifiedBy: modifiedBy
        id: id
        contentType: contentType
      properties:
        id:
          description: Identifier of the monitor or folder.
          type: string
        name:
          description: Identifier of the monitor or folder.
          type: string
        description:
          description: Description of the monitor or folder.
          type: string
        version:
          description: Version of the monitor or folder.
          format: int64
          type: integer
        createdAt:
          description: Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        parentId:
          description: Identifier of the parent folder.
          type: string
        contentType:
          description: |-
            Type of the content. Valid values:
              1) Monitor
              2) Folder
          type: string
        type:
          description: Type of the object model.
          type: string
        isSystem:
          description: System objects are objects provided by Sumo Logic. System objects
            can only be localized. Non-local fields can't be updated.
          type: boolean
        isMutable:
          description: Immutable objects are "READ-ONLY".
          type: boolean
        permissions:
          description: Aggregated permission summary for the calling user. If detailed
            permission statements are required, please call list permissions endpoint.
          example:
          - Read
          - Delete
          items:
            type: string
          type: array
      required:
      - contentType
      - createdAt
      - createdBy
      - description
      - id
      - isMutable
      - isSystem
      - modifiedAt
      - modifiedBy
      - name
      - parentId
      - type
      - version
      type: object
    MonitorsLibraryFolder:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBase'
    MonitorsLibraryFolderUpdate:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseUpdate'
    MonitorsLibraryFolderResponse:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
      - $ref: '#/components/schemas/MonitorsLibraryFolderResponse_allOf'
    MonitorsLibraryBaseExport:
      discriminator:
        propertyName: type
      example:
        name: name
        description: description
        type: type
      properties:
        name:
          description: Name of the monitor or folder.
          type: string
        description:
          description: Description of the monitor or folder.
          type: string
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      type: object
    MonitorsLibraryFolderExport:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseExport'
      - $ref: '#/components/schemas/MonitorsLibraryFolderExport_allOf'
    MonitorsLibraryMonitor:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBase'
      - $ref: '#/components/schemas/MonitorsLibraryMonitor_allOf'
    MonitorsLibraryMonitorResponse:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
      - $ref: '#/components/schemas/MonitorsLibraryMonitorResponse_allOf'
    MonitorsLibraryMonitorExport:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseExport'
      - $ref: '#/components/schemas/MonitorsLibraryMonitor_allOf'
    MonitorsLibraryMonitorUpdate:
      allOf:
      - $ref: '#/components/schemas/MonitorsLibraryBaseUpdate'
      - $ref: '#/components/schemas/MonitorsLibraryMonitor_allOf'
    MonitorNotification:
      properties:
        notification:
          $ref: '#/components/schemas/Action'
        runForTriggerTypes:
          description: The trigger types assigned to send this notification.
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - notification
      - runForTriggerTypes
      type: object
    RunAs:
      properties:
        runAsId:
          description: The runAsId indicates the context in which monitors will run.
            If not provided, then it will run in the context of the monitor author.
          example: 00000000000001DF
          type: string
      required:
      - runAsId
      type: object
    AlertsLibraryBase:
      discriminator:
        propertyName: type
      properties:
        name:
          description: Name of the alert or folder.
          type: string
        description:
          default: ""
          description: Description of the alert or folder.
          type: string
        type:
          description: |-
            Type of the object model. Valid values:
              1) AlertsLibraryAlert
              2) AlertsLibraryFolder
          type: string
        isLocked:
          default: false
          description: Locking/Unlocking requires the `LockAlerts` capability. Locked
            objects can only be `Localized`. Updating or moving requires unlocking
            the object. Locking/Unlocking recursively locks all of the objects children.
            All children of a locked object must be locked.
          type: boolean
      required:
      - name
      - type
      type: object
    AlertsLibraryBaseUpdate:
      discriminator:
        propertyName: type
      properties:
        name:
          description: The name of the alert or folder.
          type: string
        description:
          default: ""
          description: The description of the alert or folder.
          type: string
        version:
          description: The version of the alert or folder.
          format: int64
          type: integer
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      - version
      type: object
    AlertsLibraryBaseResponse:
      discriminator:
        propertyName: type
      properties:
        id:
          description: Identifier of the alert or folder.
          type: string
        name:
          description: Identifier of the alert or folder.
          type: string
        description:
          description: Description of the alert or folder.
          type: string
        version:
          description: Version of the alert or folder.
          format: int64
          type: integer
        createdAt:
          description: Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        parentId:
          description: Identifier of the parent folder.
          type: string
        contentType:
          description: |-
            Type of the content. Valid values:
              1) Alert
              2) Folder
          type: string
        type:
          description: Type of the object model.
          type: string
        isLocked:
          description: Whether the object is locked.
          type: boolean
        isSystem:
          description: System objects are objects provided by Sumo Logic. System objects
            can only be localized. Non-local fields can't be updated.
          type: boolean
        isMutable:
          description: Immutable objects are "READ-ONLY".
          type: boolean
      required:
      - contentType
      - createdAt
      - createdBy
      - description
      - id
      - isMutable
      - isSystem
      - modifiedAt
      - modifiedBy
      - name
      - parentId
      - type
      - version
      type: object
    AlertsLibraryFolder:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBase'
    AlertsLibraryFolderUpdate:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseUpdate'
    AlertsLibraryFolderResponse:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseResponse'
      - $ref: '#/components/schemas/AlertsLibraryFolderResponse_allOf'
    AlertsLibraryBaseExport:
      discriminator:
        propertyName: type
      properties:
        name:
          description: Name of the alert or folder.
          type: string
        description:
          description: Description of the alert or folder.
          type: string
        type:
          description: Type of the object model.
          type: string
      required:
      - name
      - type
      type: object
    AlertsLibraryFolderExport:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseExport'
      - $ref: '#/components/schemas/AlertsLibraryFolderExport_allOf'
    AlertsLibraryAlert:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBase'
      - $ref: '#/components/schemas/AlertsLibraryAlert_allOf'
    AlertsLibraryAlertResponse:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseResponse'
      - $ref: '#/components/schemas/AlertsLibraryAlert_allOf'
    AlertsLibraryAlertExport:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseExport'
      - $ref: '#/components/schemas/AlertsLibraryAlert_allOf'
    AlertsLibraryAlertUpdate:
      allOf:
      - $ref: '#/components/schemas/AlertsLibraryBaseUpdate'
      - $ref: '#/components/schemas/AlertsLibraryAlert_allOf'
    AlertMonitorQuery:
      allOf:
      - $ref: '#/components/schemas/MonitorQuery'
      - $ref: '#/components/schemas/AlertMonitorQuery_allOf'
    ExtraDetails:
      properties:
        details:
          items:
            $ref: '#/components/schemas/KeyValuePair'
          type: array
      type: object
    KeyValuePair:
      properties:
        key:
          description: Name of the key.
          example: cluster
          type: string
        value:
          description: Value of the key.
          example: cluster1
          type: string
    ListAppsResult:
      description: List of all available apps from the App Catalog.
      example:
        apps:
        - appDefinition:
            preview: true
            appVersion: "1.0"
            manifestVersion: "0.1"
            contentId: 00000000000011AE
            name: Sumo Config
            uuid: 1c57fbc3-3141-4b12-aab3-5f40152bc3d9
          appManifest:
            authorWebsite: https://www.sumologic.com
            screenshotURLs:
            - https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png
            - https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png
            requirements: []
            communityURL: https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations
            author: Sumo Logic
            description: A description for Sumo Logic Config App.
            helpURL: https://help.sumologic.com/
            installationInstructions: installationInstructions
            helpDocIdMap:
              key: helpDocIdMap
            accountTypes:
            - free
            categories:
            - Sumo Logic
            - Configuration
            iconURL: https://sumologic-app-data.sumologic.com/icons/sumoconfig.png
            family: IIS
            parameters:
            - parameterType: DATA_SOURCE
              parameterId: paramId1
              hidden: false
              description: Log data source
              label: Log label
              dataSourceType: LOG
              example: example
            - parameterType: DATA_SOURCE
              parameterId: paramId1
              hidden: false
              description: Log data source
              label: Log label
              dataSourceType: LOG
              example: example
            hoverText: Sumo Config App
            requiresInstallationInstructions: false
        - appDefinition:
            preview: true
            appVersion: "1.0"
            manifestVersion: "0.1"
            contentId: 00000000000011AE
            name: Sumo Config
            uuid: 1c57fbc3-3141-4b12-aab3-5f40152bc3d9
          appManifest:
            authorWebsite: https://www.sumologic.com
            screenshotURLs:
            - https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png
            - https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png
            requirements: []
            communityURL: https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations
            author: Sumo Logic
            description: A description for Sumo Logic Config App.
            helpURL: https://help.sumologic.com/
            installationInstructions: installationInstructions
            helpDocIdMap:
              key: helpDocIdMap
            accountTypes:
            - free
            categories:
            - Sumo Logic
            - Configuration
            iconURL: https://sumologic-app-data.sumologic.com/icons/sumoconfig.png
            family: IIS
            parameters:
            - parameterType: DATA_SOURCE
              parameterId: paramId1
              hidden: false
              description: Log data source
              label: Log label
              dataSourceType: LOG
              example: example
            - parameterType: DATA_SOURCE
              parameterId: paramId1
              hidden: false
              description: Log data source
              label: Log label
              dataSourceType: LOG
              example: example
            hoverText: Sumo Config App
            requiresInstallationInstructions: false
      properties:
        apps:
          description: An array of Apps
          items:
            $ref: '#/components/schemas/App'
          type: array
      required:
      - apps
      type: object
    App:
      example:
        appDefinition:
          preview: true
          appVersion: "1.0"
          manifestVersion: "0.1"
          contentId: 00000000000011AE
          name: Sumo Config
          uuid: 1c57fbc3-3141-4b12-aab3-5f40152bc3d9
        appManifest:
          authorWebsite: https://www.sumologic.com
          screenshotURLs:
          - https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png
          - https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png
          requirements: []
          communityURL: https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations
          author: Sumo Logic
          description: A description for Sumo Logic Config App.
          helpURL: https://help.sumologic.com/
          installationInstructions: installationInstructions
          helpDocIdMap:
            key: helpDocIdMap
          accountTypes:
          - free
          categories:
          - Sumo Logic
          - Configuration
          iconURL: https://sumologic-app-data.sumologic.com/icons/sumoconfig.png
          family: IIS
          parameters:
          - parameterType: DATA_SOURCE
            parameterId: paramId1
            hidden: false
            description: Log data source
            label: Log label
            dataSourceType: LOG
            example: example
          - parameterType: DATA_SOURCE
            parameterId: paramId1
            hidden: false
            description: Log data source
            label: Log label
            dataSourceType: LOG
            example: example
          hoverText: Sumo Config App
          requiresInstallationInstructions: false
      properties:
        appDefinition:
          $ref: '#/components/schemas/AppDefinition'
        appManifest:
          $ref: '#/components/schemas/AppManifest'
      required:
      - appDefinition
      - appManifest
      type: object
    AppDefinition:
      example:
        preview: true
        appVersion: "1.0"
        manifestVersion: "0.1"
        contentId: 00000000000011AE
        name: Sumo Config
        uuid: 1c57fbc3-3141-4b12-aab3-5f40152bc3d9
      properties:
        contentId:
          description: Content identifier of the app in hexadecimal format.
          example: 00000000000011AE
          type: string
        uuid:
          description: Unique identifier for the app.
          example: 1c57fbc3-3141-4b12-aab3-5f40152bc3d9
          format: uuid
          type: string
        name:
          description: Name of the app.
          example: Sumo Config
          type: string
        appVersion:
          description: Version of the app.
          example: "1.0"
          type: string
        preview:
          description: Indicates whether the app is in preview or not.
          example: true
          type: boolean
        manifestVersion:
          description: Manifest version of the app
          example: "0.1"
          type: string
      required:
      - appVersion
      - contentId
      - name
      - uuid
      type: object
    AppManifest:
      example:
        authorWebsite: https://www.sumologic.com
        screenshotURLs:
        - https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png
        - https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png
        requirements: []
        communityURL: https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations
        author: Sumo Logic
        description: A description for Sumo Logic Config App.
        helpURL: https://help.sumologic.com/
        installationInstructions: installationInstructions
        helpDocIdMap:
          key: helpDocIdMap
        accountTypes:
        - free
        categories:
        - Sumo Logic
        - Configuration
        iconURL: https://sumologic-app-data.sumologic.com/icons/sumoconfig.png
        family: IIS
        parameters:
        - parameterType: DATA_SOURCE
          parameterId: paramId1
          hidden: false
          description: Log data source
          label: Log label
          dataSourceType: LOG
          example: example
        - parameterType: DATA_SOURCE
          parameterId: paramId1
          hidden: false
          description: Log data source
          label: Log label
          dataSourceType: LOG
          example: example
        hoverText: Sumo Config App
        requiresInstallationInstructions: false
      properties:
        family:
          description: The app family
          example: IIS
          type: string
        description:
          description: Description of the app.
          example: A description for Sumo Logic Config App.
          type: string
        categories:
          description: Categories that the app belongs to.
          example:
          - Sumo Logic
          - Configuration
          items:
            type: string
          type: array
        hoverText:
          description: Text to be displayed when hovered over in UI.
          example: Sumo Config App
          type: string
        iconURL:
          description: App icon URL.
          example: https://sumologic-app-data.sumologic.com/icons/sumoconfig.png
          type: string
        screenshotURLs:
          description: App screenshot URLs.
          example:
          - https://sumologic-app-data.sumologic.com/icons/sumoconfig/overview.png
          - https://sumologic-app-data.sumologic.com/screenshots/sumoconfig/details.png
          items:
            type: string
          type: array
        helpURL:
          description: App help page URL.
          example: https://help.sumologic.com/
          type: string
        helpDocIdMap:
          additionalProperties:
            type: string
          description: the IDs of the docs pages for this app
          type: object
        communityURL:
          description: App community page URL.
          example: https://support.sumologic.com/hc/en-us/community/topics/200263058-Applications-and-Integrations
          type: string
        requirements:
          description: Requirements for the app.
          example: []
          items:
            type: string
          type: array
        accountTypes:
          description: Account types that are allowed to install the app
          example:
          - free
          items:
            type: string
          type: array
        requiresInstallationInstructions:
          description: Indicates whether installation instructions are required or
            not.
          example: false
          type: boolean
        installationInstructions:
          description: Installation instructions for the app.
          type: string
        parameters:
          description: Content identifier of the app.
          items:
            $ref: '#/components/schemas/ServiceManifestDataSourceParameter'
          type: array
        author:
          description: App author.
          example: Sumo Logic
          type: string
        authorWebsite:
          description: App author website URL.
          example: https://www.sumologic.com
          type: string
      required:
      - description
      - hoverText
      - iconURL
      type: object
    ServiceManifestDataSourceParameter:
      example:
        parameterType: DATA_SOURCE
        parameterId: paramId1
        hidden: false
        description: Log data source
        label: Log label
        dataSourceType: LOG
        example: example
      properties:
        parameterType:
          description: Parameter type.
          example: DATA_SOURCE
          pattern: ^DATA_SOURCE$
          type: string
          x-pattern-message: 'Supported parameter types include: DATA_SOURCE'
        parameterId:
          description: Parameter identifier.
          example: paramId1
          type: string
        dataSourceType:
          description: Data source type.
          example: LOG
          pattern: ^(LOG|METRICS)$
          type: string
          x-pattern-message: 'Supported data source types include: LOG, METRICS'
        label:
          description: Label.
          example: Log label
          type: string
        description:
          description: Description.
          example: Log data source
          type: string
        example:
          description: Example.
          type: string
        hidden:
          default: false
          description: Should the UI display?
          type: boolean
      required:
      - parameterId
      - parameterType
      type: object
    ErrorResponse:
      example:
        id: IUUQI-DGH5I-TJ045
        errors:
        - code: auth:password_too_short
          message: Your password was too short.
        - code: auth:password_character_classes
          message: Your password did not contain any non-alphanumeric characters
      properties:
        id:
          description: An identifier for the error; this is unique to the specific
            API request.
          example: IUUQI-DGH5I-TJ045
          type: string
        errors:
          description: A list of one or more causes of the error.
          example:
          - code: auth:password_too_short
            message: Your password was too short.
          - code: auth:password_character_classes
            message: Your password did not contain any non-alphanumeric characters
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
      required:
      - errors
      - id
      type: object
    ErrorDescription:
      example:
        code: auth:password_too_short
        meta:
          minLength: 12
          actualLength: 5
        detail: Your password was 5 characters long, the minimum length is 12 characters.
          See http://example.com/password for more information.
        message: Your password was too short.
      properties:
        code:
          description: An error code describing the type of error.
          example: auth:password_too_short
          type: string
        message:
          description: A short English-language description of the error.
          example: Your password was too short.
          type: string
        detail:
          description: An optional fuller English-language description of the error.
          example: Your password was 5 characters long, the minimum length is 12 characters.
            See http://example.com/password for more information.
          type: string
        meta:
          description: An optional list of metadata about the error.
          example:
            minLength: 12
            actualLength: 5
          type: object
      required:
      - code
      - message
      type: object
    BeginAsyncJobResponse:
      example:
        id: C03E086C137F38B4
      properties:
        id:
          description: Identifier to get the status of an asynchronous job.
          example: C03E086C137F38B4
          type: string
      required:
      - id
      type: object
    AsyncJobStatus:
      example:
        status: Success
        statusMessage: ""
      properties:
        status:
          description: Whether or not the request is in progress (`InProgress`), has
            completed successfully (`Success`), or has completed with an error (`Failed`).
          type: string
        statusMessage:
          description: Additional status message generated if the status is not `Failed`.
          type: string
        error:
          $ref: '#/components/schemas/ErrorDescription'
      required:
      - status
      type: object
    AppItemsList:
      properties:
        items:
          description: Items associated with the app.
          items:
            $ref: '#/components/schemas/AppListItem'
          type: array
      required:
      - items
      type: object
    AppListItem:
      properties:
        itemType:
          description: Type of the item. Can be `Dashboard`, `Report`, `Search`, `ScheduledSearch`,
            `MetricsSearch` or `Folder`.
          example: Dashboard
          type: string
        name:
          description: Name of the item.
          example: AWS CloudTrail - Overview
          type: string
        description:
          description: Description of the item.
          example: See an overview of your AWS users, resources, network and security
            events.
          type: string
        query:
          description: Search query for the item. Applicable only for `Search`, `ScheduledSearch`
            and `MetricsSearch` itemType.
          example: _sourceCategory=aws
          type: string
        screenshotUrl:
          description: URL for the screenshot of the item. Applicable only for `Dashboard`
            and `Report` itemType.
          example: https://my-app-data.s3.amazonaws.com/dashboards/AWSCloudTrail/Overview.PNG
          type: string
        panels:
          description: Panels associated with the item. Applicable only for `Dashboard`
            and `Report` itemType.
          items:
            $ref: '#/components/schemas/PanelItem'
          type: array
        children:
          description: Child content items. Applicable only for `Folder` itemType.
          items:
            $ref: '#/components/schemas/AppListItem'
          type: array
      required:
      - itemType
      - name
      type: object
    PanelItem:
      properties:
        name:
          description: Name of the panel.
          example: Failed Logins
          type: string
        description:
          description: Description of the panel.
          example: Details about failed logins
          type: string
      required:
      - name
      type: object
    AppInstallRequest:
      description: JSON object containing name, description, destinationFolderId,
        and dataSourceType.
      example:
        dataSourceValues:
          logsrc: _sourceCategory = api
        destinationFolderId: 00000000000001C8
        name: Sumo Logic Configuration App
        description: Sumo Logic Configuration App to configure collectors and data
          sources
      properties:
        name:
          description: Preferred name of the app to be installed. This will be the
            name of the app in the selected installation folder.
          example: Sumo Logic Configuration App
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: Preferred description of the app to be installed. This will
            be displayed as the app description in the selected installation folder.
          example: Sumo Logic Configuration App to configure collectors and data sources
          maxLength: 255
          minLength: 1
          type: string
        destinationFolderId:
          description: Identifier of the folder in which the app will be installed
            in hexadecimal format.
          example: 00000000000001C8
          type: string
        dataSourceValues:
          additionalProperties:
            type: string
          description: Dictionary of properties specifying log-source name and value.
          example:
            logsrc: _sourceCategory = api
          type: object
      required:
      - description
      - destinationFolderId
      - name
      type: object
    ListAppRecommendations:
      description: List of app recommendations
      items:
        $ref: '#/components/schemas/AppRecommendation'
      type: array
    AppRecommendation:
      description: App recommendation details
      properties:
        uuid:
          description: Unique identifier for the app.
          example: ebcbd463-b38b-47b0-819c-8d44ca859c3b
          format: uuid
          type: string
        name:
          description: Name of the app.
          example: Data Volume
          type: string
        description:
          description: Description of the app.
          example: 'The Sumo Logic App for Data Volume uses predefined searches and
            Dashboards to provide real-time visibility and analysis of your account''s
            data usage volume for both logs and metrics. Use this app to identify
            your top Collectors and monitor your ingest activity and trends. NOTE:
            Please enable Data Volume Index before installing this app.'
          type: string
        iconURL:
          description: URL of the app icon.
          example: https://app_icons.s3.amazonaws.com/volumeview.png
          type: string
        confidence:
          description: Percentage relevance of recommendation.
          example: 0.98
          format: double
          type: number
      required:
      - confidence
      - description
      - iconURL
      - name
      - uuid
      type: object
    ListConnectionsResponse:
      example:
        next: next
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          modifiedBy: modifiedBy
          id: id
          type: type
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          modifiedBy: modifiedBy
          id: id
          type: type
      properties:
        data:
          description: List of connections.
          items:
            $ref: '#/components/schemas/Connection'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    Connection:
      discriminator:
        propertyName: type
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        modifiedBy: modifiedBy
        id: id
        type: type
      properties:
        type:
          description: Type of connection. Valid values are `WebhookConnection`, `ServiceNowConnection`.
          type: string
        id:
          description: Unique identifier for the connection.
          type: string
        name:
          description: Name of the connection.
          type: string
        description:
          description: Description of the connection.
          type: string
        createdAt:
          description: Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
      required:
      - createdAt
      - createdBy
      - description
      - id
      - modifiedAt
      - modifiedBy
      - name
      - type
      type: object
    ConnectionDefinition:
      discriminator:
        propertyName: type
      example:
        name: name
        description: description
        type: type
      properties:
        type:
          description: Type of connection. Valid values are `WebhookDefinition`, `ServiceNowDefinition`.
          pattern: ^(WebhookDefinition|ServiceNowDefinition)$
          type: string
          x-pattern-message: must be either `WebhookDefinition` or `ServiceNowDefinition`
        name:
          description: Name of connection. Name should be a valid alphanumeric value.
          maxLength: 127
          minLength: 1
          pattern: ^([a-zA-Z0-9 +%\-@.,_()]+)$
          type: string
        description:
          default: ""
          description: Description of the connection.
          maxLength: 1024
          type: string
      required:
      - name
      - type
      type: object
    TestConnectionResponse:
      example:
        responseContent: responseContent
        statusCode: 0
      properties:
        statusCode:
          description: Status code of the response of the connection test.
          type: integer
        responseContent:
          description: Content of the response of the connection test.
          type: string
      required:
      - responseContent
      - statusCode
      type: object
    ListScheduledViewsResponse:
      example:
        next: next
        data:
        - null
        - null
      properties:
        data:
          description: List of scheduled views.
          items:
            $ref: '#/components/schemas/ScheduledView'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    ScheduledView:
      allOf:
      - $ref: '#/components/schemas/CreateScheduledViewDefinition'
      - $ref: '#/components/schemas/ScheduledView_allOf'
      type: object
      x-tf-generated-properties: id,query,indexName,startTime,retentionPeriod,parsingMode
    CreateScheduledViewDefinition:
      example:
        parsingMode: AutoParse
        indexName: TestScheduledView
        query: _sourcecategory=*/Apache
        dataForwardingId: dataForwardingId
        startTime: 2000-01-23T04:56:07.000+00:00
        retentionPeriod: 365
      properties:
        query:
          description: The query that defines the data to be included in the scheduled
            view.
          example: _sourcecategory=*/Apache
          maxLength: 16384
          minLength: 1
          type: string
        indexName:
          description: Name of the index for the scheduled view.
          example: TestScheduledView
          maxLength: 255
          minLength: 0
          type: string
        startTime:
          description: Start timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: date-time
          type: string
        retentionPeriod:
          default: -1
          description: The number of days to retain data in the scheduled view, or
            -1 to use the default value for your account.  Only relevant if your account
            has multi-retention. enabled.
          example: 365
          format: int32
          type: integer
        dataForwardingId:
          description: An optional ID of a data forwarding configuration to be used
            by the scheduled view.
          type: string
        parsingMode:
          default: Manual
          description: |-
            Define the parsing mode to scan the JSON format log messages. Possible values are:
              1. `AutoParse`
              2. `Manual`
            In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).
          example: AutoParse
          pattern: ^(AutoParse|Manual)$
          type: string
          x-pattern-message: should be either AutoParse or Manual
      required:
      - indexName
      - query
      - startTime
      - store
      type: object
    UpdateScheduledViewDefinition:
      example:
        reduceRetentionPeriodImmediately: false
        dataForwardingId: dataForwardingId
        retentionPeriod: 365
      properties:
        dataForwardingId:
          description: An optional ID of a data forwarding configuration to be used
            by the scheduled view.
          type: string
        retentionPeriod:
          default: -1
          description: The number of days to retain data in the scheduled view, or
            -1 to use the default value for your account.  Only relevant if your account
            has multi-retention. enabled.
          example: 365
          format: int32
          type: integer
        reduceRetentionPeriodImmediately:
          default: false
          description: This is required if the newly specified `retentionPeriod` is
            less than the existing retention period.  In such a situation, a value
            of `true` says that data between the existing retention period and the
            new retention period should be deleted immediately; if `false`, such data
            will be deleted after seven days. This property is optional and ignored
            if the specified `retentionPeriod` is greater than or equal to the current
            retention period.
          type: boolean
      type: object
    LookupTableDefinition:
      allOf:
      - $ref: '#/components/schemas/ExportableLookupTableInfo'
      - $ref: '#/components/schemas/LookupTableDefinition_allOf'
      description: Definition of the lookup table.
      required:
      - name
      - parentFolderId
      type: object
    ExportableLookupTableInfo:
      description: The lookup table definition independent of its location in the
        Library and name.
      properties:
        description:
          description: The description of the lookup table.
          example: This is a sample lookup table description.
          maxLength: 1000
          type: string
        fields:
          description: The list of fields in the lookup table.
          items:
            $ref: '#/components/schemas/LookupTableField'
          minItems: 1
          type: array
        primaryKeys:
          description: The names of the fields that make up the primary key for the
            lookup table. These will be a subset of the fields that the table will
            contain.
          example:
          - FieldName1
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        ttl:
          default: 0
          description: A time to live for each entry in the lookup table (in minutes).
            365 days is the maximum time to live for each entry that you can specify.
            Setting it to 0 means that the records will not expire automatically.
          example: 100
          format: int32
          maximum: 525600
          minimum: 0
          type: integer
        sizeLimitAction:
          default: StopIncomingMessages
          description: The action that needs to be taken when the size limit is reached
            for the table. The possible values can be `StopIncomingMessages` or `DeleteOldData`.
            DeleteOldData will start deleting old data once size limit is reached
            whereas StopIncomingMessages will discard all the updates made to the
            lookup table once size limit is reached.
          example: DeleteOldData
          pattern: ^(StopIncomingMessages|DeleteOldData)$
          type: string
          x-pattern-message: must be either `StopIncomingMessages` or `DeleteOldData`
      required:
      - description
      - fields
      - primaryKeys
      type: object
    LookupTableField:
      description: The definition of the field.
      properties:
        fieldName:
          description: The name of the field.
          example: FieldName1
          type: string
        fieldType:
          description: |-
            The data type of the field. Supported types:
              - `boolean`
              - `int`
              - `long`
              - `double`
              - `string`
          example: boolean
          pattern: ^(boolean|int|long|double|string)$
          type: string
          x-pattern-message: 'must be one of the following: `boolean`, `int`, `long`,
            `double`, `string`'
      required:
      - fieldName
      - fieldType
      type: object
    LookupTable:
      allOf:
      - $ref: '#/components/schemas/MetadataModel'
      - $ref: '#/components/schemas/LookupTableDefinition'
      - $ref: '#/components/schemas/LookupTable_allOf'
      description: Lookup table definition and metadata.
      required:
      - id
      type: object
    LookupUpdateDefinition:
      description: The updated lookup table parameters.
      example:
        description: This is a sample lookup table description.
        sizeLimitAction: DeleteOldData
        ttl: 100
      properties:
        ttl:
          default: 0
          description: A time to live for each entry in the lookup table (in minutes).
            0 is a special value. A TTL of 0 implies entry will never be deleted from
            the table.
          example: 100
          format: int32
          maximum: 525600
          minimum: 0
          type: integer
        description:
          description: The description of the lookup table. The description cannot
            be blank.
          example: This is a sample lookup table description.
          maxLength: 1000
          type: string
        sizeLimitAction:
          default: StopIncomingMessages
          description: The action that needs to be taken when the size limit is reached
            for the table. The possible values can be `StopIncomingMessages` or `DeleteOldData`.
            DeleteOldData will starting deleting old data once size limit is reached
            whereas StopIncomingMessages will discard all the updates made to the
            lookup table once size limit is reached.
          example: DeleteOldData
          type: string
      required:
      - description
      - ttl
      type: object
    LookupRequestToken:
      description: Allows you to track the status of an upload or export request.
      example:
        id: 0000000001C41EF2
      properties:
        id:
          description: The identifier used to track the request.
          example: 0000000001C41EF2
          type: string
      required:
      - id
      type: object
    LookupAsyncJobStatus:
      description: Lookup table async job status.
      example:
        jobId: 0000000001C41EF2
        statusMessages:
        - statusMessages
        - statusMessages
        createdAt: 2000-01-23T04:56:07.000+00:00
        requestType: BulkMerge
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        warnings:
        - cause: Primary key values were duplicate.
          message: 60 rows were dropped.
        - cause: Primary key values were duplicate.
          message: 60 rows were dropped.
        lookupContentId: 0000000001C41EE4
        lookupContentPath: /Library/Users/xyz@demo.com/sampleLookup
        userId: 0000000006743FDD
        errors:
        - code: auth:password_too_short
          meta:
            minLength: 12
            actualLength: 5
          detail: Your password was 5 characters long, the minimum length is 12 characters.
            See http://example.com/password for more information.
          message: Your password was too short.
        - code: auth:password_too_short
          meta:
            minLength: 12
            actualLength: 5
          detail: Your password was 5 characters long, the minimum length is 12 characters.
            See http://example.com/password for more information.
          message: Your password was too short.
        lookupName: sampleLookup
        status: status
      properties:
        jobId:
          description: An identifier returned in response to an asynchronous request.
          example: 0000000001C41EF2
          type: string
        status:
          description: Whether or not the request is pending (`Pending`), in progress
            (`InProgress`), has completed successfully (`Success`), has completed
            partially with warnings (`PartialSuccess`) or has completed with an error
            (`Failed`).
          type: string
        statusMessages:
          description: Additional status messages generated if any if the status is
            `Success`.
          items:
            type: string
          type: array
        errors:
          description: More information about the failures, if the status is `Failed`.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
        warnings:
          description: More information about the warnings, if the status is `PartialSuccess`.
          items:
            $ref: '#/components/schemas/warningDescription'
          type: array
        lookupContentId:
          description: Content id of lookup table on which this operation was performed.
          example: 0000000001C41EE4
          type: string
        lookupName:
          description: Name of lookup table on which this operation was performed.
          example: sampleLookup
          type: string
        lookupContentPath:
          description: Content path of lookup table on which this operation was performed.
          example: /Library/Users/xyz@demo.com/sampleLookup
          type: string
        requestType:
          description: |-
            Type of asynchronous request made:
              - `BulkMerge`
              - `BulkReplace`
              - `Truncate`
          example: BulkMerge
          type: string
        userId:
          description: User id of user who initiated this operation.
          example: 0000000006743FDD
          type: string
        createdAt:
          description: Creation time of this job in UTC.
          format: date-time
          type: string
        modifiedAt:
          description: Timestamp in UTC when status was last updated.
          format: date-time
          type: string
      required:
      - createdAt
      - eventType
      - jobId
      - lookupContentId
      - lookupContentPath
      - lookupName
      - modifiedAt
      - status
      - userId
      type: object
    warningDescription:
      description: Warning description
      example:
        cause: Primary key values were duplicate.
        message: 60 rows were dropped.
      properties:
        message:
          description: Description of the warning.
          example: 60 rows were dropped.
          type: string
        cause:
          description: An optional cause of this warning.
          example: Primary key values were duplicate.
          type: string
      required:
      - message
      type: object
    LookupPreviewData:
      description: The preview data of the lookup table.
      properties:
        fieldProperties:
          description: The field properties of the lookup table. This includes the
            field name, field description, and an identifier associated with each
            field.
          items:
            $ref: '#/components/schemas/PreviewLookupTableField'
          type: array
        fieldValueMapList:
          description: The data of the lookup table as a list of field identifiers
            mapped to their values.
          items:
            additionalProperties:
              type: string
            description: A map of all the field identifiers and their corresponding
              values.
            type: object
          type: array
      type: object
    PreviewLookupTableField:
      description: The properties of the field.
      properties:
        fieldName:
          description: The name of the field.
          example: sampleFieldName
          type: string
        fieldType:
          description: |-
            The data type of the field. Supported types:
              - `boolean`
              - `int`
              - `long`
              - `double`
              - `string`
          example: boolean
          type: string
        fieldId:
          description: Identifier associated with each field of the table.
          example: "1"
          type: string
      required:
      - fieldId
      - fieldName
      - fieldType
      type: object
    RowUpdateDefinition:
      description: Lookup table data to be uploaded.
      example:
        row:
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
      properties:
        row:
          description: A list of all the field identifiers and their corresponding
            values.
          items:
            $ref: '#/components/schemas/TableRow'
          maxItems: 1000
          type: array
      required:
      - row
      type: object
    TableRow:
      description: Lookup table row column and column value.
      example:
        columnValue: user1
        columnName: user_id
      properties:
        columnName:
          description: Name of the column of the table.
          example: user_id
          type: string
        columnValue:
          description: Value of the specified column.
          example: user1
          type: string
      required:
      - columnName
      - columnValue
      type: object
    RowDeleteDefinition:
      description: Lookup table primary key of the row to be deleted.
      example:
        primaryKey:
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
        - columnValue: user1
          columnName: user_id
      properties:
        primaryKey:
          description: A list of all primary key field identifiers and their corresponding
            values.
          items:
            $ref: '#/components/schemas/TableRow'
          maxItems: 1000
          type: array
      required:
      - primaryKey
      type: object
    SecondaryKeysDefinition:
      description: The secondary keys of the lookup table
      example:
      - - ip
      - - latitude
        - longitude
      items:
        items:
          type: string
        type: array
      maxItems: 20
      minItems: 1
      type: array
    LookupTablesLimits:
      description: Properties related to lookup tables being allowed and created.
      properties:
        tablesCreated:
          description: Number of lookup tables currently created.
          example: 8
          format: int32
          type: integer
        tableCapacityRemaining:
          description: Remaining count of lookup tables that can be created.
          example: 2
          format: int32
          type: integer
        totalTableCapacity:
          description: Total capacity of lookup tables that can be created for the
            given org id.
          example: 10
          format: int32
          type: integer
      type: object
    ListPartitionsResponse:
      example:
        next: "1"
        data:
        - null
        - null
      properties:
        data:
          description: List of partitions.
          items:
            $ref: '#/components/schemas/Partition'
          type: array
        next:
          description: Next continuation token.
          example: "1"
          type: string
      required:
      - data
      type: object
    Partition:
      allOf:
      - $ref: '#/components/schemas/CreatePartitionDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      - $ref: '#/components/schemas/Partition_allOf'
      type: object
    CreatePartitionDefinition:
      example:
        routingExpression: _sourcecategory=*/Apache
        analyticsTier: continuous
        name: apache
        isCompliant: false
        retentionPeriod: 365
      properties:
        name:
          description: The name of the partition.
          example: apache
          maxLength: 255
          type: string
        routingExpression:
          description: The query that defines the data to be included in the partition.
          example: _sourcecategory=*/Apache
          maxLength: 16384
          minLength: 1
          type: string
        analyticsTier:
          default: continuous
          description: |-
            The Data Tier where the data in the partition will reside. Possible values are:
                          1. `continuous`
                          2. `frequent`
                          3. `infrequent`
            Note: The "infrequent" and "frequent" tiers are only to available Cloud Flex Credits Enterprise Suite accounts.
          example: continuous
          pattern: ^(frequent|infrequent|continuous)$
          type: string
          x-pattern-message: must be one of `continuous`, `frequent` or `infrequent`
        retentionPeriod:
          default: -1
          description: The number of days to retain data in the partition, or -1 to
            use the default value for your account.  Only relevant if your account
            has variable retention enabled.
          example: 365
          type: integer
        isCompliant:
          default: false
          description: Whether the partition is compliant or not. Mark a partition
            as compliant if it contains data used for compliance or audit purpose.
            Retention for a compliant partition can only be increased and cannot be
            reduced after the partition is marked compliant. A partition once marked
            compliant, cannot be marked non-compliant later.
          example: false
          type: boolean
      required:
      - name
      - routingExpression
      type: object
    UpdatePartitionDefinition:
      example:
        reduceRetentionPeriodImmediately: false
        routingExpression: _sourcecategory=*/Apache
        isCompliant: false
        retentionPeriod: 365
      properties:
        retentionPeriod:
          description: The number of days to retain data in the partition, or -1 to
            use the default value for your account. Only relevant if your account
            has variable retention enabled.
          example: 365
          type: integer
        reduceRetentionPeriodImmediately:
          default: false
          description: This is required if the newly specified `retentionPeriod` is
            less than the existing retention period.  In such a situation, a value
            of `true` says that data between the existing retention period and the
            new retention period should be deleted immediately; if `false`, such data
            will be deleted after seven days. This property is optional and ignored
            if the specified `retentionPeriod` is greater than or equal to the current
            retention period.
          type: boolean
        isCompliant:
          default: false
          description: Whether to mark a partition as compliant. Mark a partition
            as compliant if it contains data used for compliance or audit purpose.
            Retention for a compliant partition can only be increased and cannot be
            reduced after the partition marked as compliant. A partition once marked
            compliant, cannot be marked non-compliant later.
          example: false
          type: boolean
        routingExpression:
          description: The query that defines the data to be included in the partition.
          example: _sourcecategory=*/Apache
          maxLength: 16384
          minLength: 1
          type: string
      type: object
    PartitionsResponse:
      properties:
        data:
          description: Array of partitions.
          items:
            $ref: '#/components/schemas/Partition'
          type: array
      required:
      - data
      type: object
    ListExtractionRulesResponse:
      example:
        next: next
        data:
        - null
        - null
      properties:
        data:
          description: List of field extraction rules.
          items:
            $ref: '#/components/schemas/ExtractionRule'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    ExtractionRule:
      allOf:
      - $ref: '#/components/schemas/ExtractionRuleDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      - $ref: '#/components/schemas/ExtractionRule_allOf'
      type: object
      x-tf-generated-properties: id,name,scope,parseExpression,enabled
      x-tf-resource-name: ExtractionRule
    ExtractionRuleDefinition:
      allOf:
      - $ref: '#/components/schemas/BaseExtractionRuleDefinition'
      - $ref: '#/components/schemas/ExtractionRuleDefinition_allOf'
    BaseExtractionRuleDefinition:
      properties:
        name:
          description: Name of the field extraction rule. Use a name that makes it
            easy to identify the rule.
          example: ExtractionRule123
          maxLength: 256
          minLength: 1
          type: string
        scope:
          description: Scope of the field extraction rule. This could be a sourceCategory,
            sourceHost, or any other metadata that describes the data you want to
            extract from. Think of the Scope as the first portion of an ad hoc search,
            before the first pipe ( | ). You'll use the Scope to run a search against
            the rule.
          example: _sourceHost=127.0.0.1
          maxLength: 2048
          minLength: 0
          type: string
        parseExpression:
          description: Describes the fields to be parsed.
          example: csv _raw extract 1 as f1
          maxLength: 16384
          type: string
      required:
      - name
      - parseExpression
      - scope
      type: object
    UpdateExtractionRuleDefinition:
      allOf:
      - $ref: '#/components/schemas/BaseExtractionRuleDefinition'
      - $ref: '#/components/schemas/UpdateExtractionRuleDefinition_allOf'
    ListDynamicRulesResponse:
      example:
        next: 0000000001C51FF7
        data:
        - null
        - null
      properties:
        data:
          description: List of dynamic parsing rules.
          items:
            $ref: '#/components/schemas/DynamicRule'
          type: array
        next:
          description: Next continuation token.
          example: 0000000001C51FF7
          type: string
      required:
      - data
      type: object
    DynamicRule:
      allOf:
      - $ref: '#/components/schemas/DynamicRuleDefinition'
      - $ref: '#/components/schemas/Metadata'
      - $ref: '#/components/schemas/DynamicRule_allOf'
      type: object
    DynamicRuleDefinition:
      example:
        scope: _sourceHost=127.0.0.1
        name: DynamicParsingRule123
        enabled: false
      properties:
        name:
          description: Name of the dynamic parsing rule. Use a name that makes it
            easy to identify the rule.
          example: DynamicParsingRule123
          maxLength: 256
          minLength: 1
          type: string
        scope:
          description: Scope of the dynamic parsing rule. This could be a sourceCategory,
            sourceHost, or any other metadata that describes the data you want to
            extract from. Think of the Scope as the first portion of an ad hoc search,
            before the first pipe ( | ). You'll use the Scope to run a search against
            the rule.
          example: _sourceHost=127.0.0.1
          maxLength: 2048
          minLength: 1
          type: string
        enabled:
          default: true
          description: Is the dynamic parsing rule enabled.
          example: false
          type: boolean
      required:
      - enabled
      - name
      - scope
      type: object
    ListCustomFieldsResponse:
      example:
        data:
        - null
        - null
      properties:
        data:
          description: List of custom fields.
          items:
            $ref: '#/components/schemas/CustomField'
          type: array
      required:
      - data
      type: object
    CustomField:
      allOf:
      - $ref: '#/components/schemas/FieldName'
      - $ref: '#/components/schemas/CustomField_allOf'
    FieldName:
      example:
        fieldName: hostIP
      properties:
        fieldName:
          description: Field name.
          example: hostIP
          maxLength: 255
          minLength: 1
          type: string
      required:
      - fieldName
      type: object
    ListDroppedFieldsResponse:
      example:
        data:
        - null
        - null
      properties:
        data:
          description: List of dropped fields.
          items:
            $ref: '#/components/schemas/DroppedField'
          type: array
      required:
      - data
      type: object
    DroppedField:
      allOf:
      - $ref: '#/components/schemas/FieldName'
    ListBuiltinFieldsResponse:
      example:
        data:
        - null
        - null
      properties:
        data:
          description: List of built-in fields.
          items:
            $ref: '#/components/schemas/BuiltinField'
          type: array
      required:
      - data
      type: object
    BuiltinField:
      allOf:
      - $ref: '#/components/schemas/FieldName'
      - $ref: '#/components/schemas/CustomField_allOf'
    FieldQuotaUsage:
      example:
        quota: 200
        remaining: 121
      properties:
        quota:
          description: Maximum number of fields available.
          example: 200
          format: int32
          type: integer
        remaining:
          description: Current number of fields available.
          example: 121
          format: int32
          type: integer
      required:
      - quota
      - remaining
      type: object
    ListFieldNamesResponse:
      properties:
        data:
          description: List of all built-in and custom field names.
          items:
            $ref: '#/components/schemas/FieldName'
          type: array
      required:
      - data
      type: object
    ListCustomFieldsUsageResponse:
      properties:
        data:
          description: List of fields with their usages.
          items:
            $ref: '#/components/schemas/CustomFieldUsage'
          type: array
      required:
      - data
      type: object
    CustomFieldUsage:
      allOf:
      - $ref: '#/components/schemas/FieldName'
      - $ref: '#/components/schemas/CustomFieldUsage_allOf'
    ListBuiltinFieldsUsageResponse:
      properties:
        data:
          description: List of fields with their usages.
          items:
            $ref: '#/components/schemas/BuiltinFieldUsage'
          type: array
      required:
      - data
      type: object
    BuiltinFieldUsage:
      allOf:
      - $ref: '#/components/schemas/FieldName'
      - $ref: '#/components/schemas/BuiltinFieldUsage_allOf'
    GetCollectorsUsageResponse:
      properties:
        data:
          description: List of collectors.
          items:
            $ref: '#/components/schemas/Collector'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    Collector:
      properties:
        collectorId:
          description: Identifier of a collector.
          example: 000000000000000F
          type: string
        collectorName:
          description: Name of a collector.
          example: SyslogCollector
          type: string
      required:
      - collectorId
      - collectorName
      type: object
    GetSourcesUsageResponse:
      properties:
        data:
          description: List of sources.
          items:
            $ref: '#/components/schemas/Source'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    Source:
      properties:
        sourceId:
          description: Identifier of a source.
          example: 000000000000000F
          type: string
        sourceName:
          description: Name of a source.
          example: Collector
          type: string
      required:
      - sourceId
      - sourceName
      type: object
    ListIngestBudgetsResponse:
      example:
        next: next
        data:
        - null
        - null
      properties:
        data:
          description: List of ingest budgets.
          items:
            $ref: '#/components/schemas/IngestBudget'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    IngestBudget:
      allOf:
      - $ref: '#/components/schemas/IngestBudgetDefinition'
      - $ref: '#/components/schemas/MetadataWithUserInfo'
      - $ref: '#/components/schemas/IngestBudget_allOf'
      type: object
    IngestBudgetDefinition:
      example:
        capacityBytes: 1000
        timezone: America/Los_Angeles
        name: Developer Budget
        auditThreshold: 85
        description: description
        action: stopCollecting
        resetTime: 23:30
        fieldValue: dev_30_gb
      properties:
        name:
          description: Display name of the ingest budget.
          example: Developer Budget
          maxLength: 128
          minLength: 1
          type: string
        fieldValue:
          description: Custom field value that is used to assign Collectors to the
            ingest budget.
          example: dev_30_gb
          maxLength: 1024
          minLength: 1
          type: string
        capacityBytes:
          description: Capacity of the ingest budget, in bytes. It takes a few minutes
            for Collectors to stop collecting when capacity is reached. We recommend
            setting a soft limit that is lower than your needed hard limit.
          example: 1000
          format: int64
          minimum: 0
          type: integer
        timezone:
          description: Time zone of the reset time for the ingest budget. Follow the
            format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
          example: America/Los_Angeles
          type: string
        resetTime:
          description: Reset time of the ingest budget in HH:MM format.
          example: 23:30
          maxLength: 5
          minLength: 5
          type: string
        description:
          description: Description of the ingest budget.
          maxLength: 1024
          minLength: 0
          type: string
        action:
          description: |-
            Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:
              * `stopCollecting`
              * `keepCollecting`
          example: stopCollecting
          pattern: ^(keepCollecting|stopCollecting)$
          type: string
          x-pattern-message: must be either `keepCollecting` or `stopCollecting`
        auditThreshold:
          description: The threshold as a percentage of when an ingest budget's capacity
            usage is logged in the Audit Index.
          example: 85
          format: int32
          maximum: 99
          minimum: 1
          type: integer
      required:
      - action
      - capacityBytes
      - fieldValue
      - name
      - resetTime
      - timezone
      type: object
    ListCollectorIdentitiesResponse:
      example:
        next: next
        data:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        data:
          description: List of Collector identities.
          items:
            $ref: '#/components/schemas/CollectorIdentity'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    CollectorIdentity:
      example:
        name: name
        id: id
      properties:
        id:
          description: Unique identifier for the Collector.
          type: string
        name:
          description: The name of the Collector.
          type: string
      required:
      - id
      - name
      type: object
    ListIngestBudgetsResponseV2:
      example:
        next: next
        data:
        - null
        - null
      properties:
        data:
          description: List of ingest budgets.
          items:
            $ref: '#/components/schemas/IngestBudgetV2'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    IngestBudgetV2:
      allOf:
      - $ref: '#/components/schemas/IngestBudgetDefinitionV2'
      - $ref: '#/components/schemas/IngestBudgetV2_allOf'
      type: object
    IngestBudgetDefinitionV2:
      example:
        capacityBytes: 1000
        timezone: America/Los_Angeles
        scope: _sourceCategory=*prod*nginx*
        name: Developer Budget
        auditThreshold: 85
        description: description
        action: stopCollecting
        resetTime: 23:30
      properties:
        name:
          description: Display name of the ingest budget.
          example: Developer Budget
          maxLength: 128
          minLength: 1
          type: string
        scope:
          description: A scope is a constraint that will be used to identify the messages
            on which budget needs to be applied. A scope is consists of key and value
            separated by =. The field must be enabled in the fields table. Value supports
            wildcard. e.g. _sourceCategory=*prod*payment*, cluster=kafka. If the scope
            is defined _sourceCategory=*nginx* in this budget will be applied on messages
            having fields _sourceCategory=prod/nginx, _sourceCategory=dev/nginx, or
            _sourceCategory=dev/nginx/error
          example: _sourceCategory=*prod*nginx*
          maxLength: 1024
          minLength: 1
          type: string
        capacityBytes:
          description: Capacity of the ingest budget, in bytes. It takes a few minutes
            for Collectors to stop collecting when capacity is reached. We recommend
            setting a soft limit that is lower than your needed hard limit.
          example: 1000
          format: int64
          minimum: 1
          type: integer
        timezone:
          description: Time zone of the reset time for the ingest budget. Follow the
            format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
          example: America/Los_Angeles
          type: string
        resetTime:
          description: Reset time of the ingest budget in HH:MM format.
          example: 23:30
          maxLength: 5
          minLength: 5
          type: string
        description:
          description: Description of the ingest budget.
          maxLength: 1024
          minLength: 0
          type: string
        action:
          description: |-
            Action to take when ingest budget's capacity is reached. All actions are audited. Supported values are:
              * `stopCollecting`
              * `keepCollecting`
          example: stopCollecting
          pattern: ^(keepCollecting|stopCollecting)$
          type: string
          x-pattern-message: must be either `keepCollecting` or `stopCollecting`
        auditThreshold:
          description: The threshold as a percentage of when an ingest budget's capacity
            usage is logged in the Audit Index.
          example: 85
          format: int32
          maximum: 99
          minimum: 1
          type: integer
      required:
      - action
      - capacityBytes
      - name
      - resetTime
      - scope
      - timezone
      type: object
    ListUserModelsResponse:
      example:
        next: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        data:
        - null
        - null
      properties:
        data:
          description: List of users.
          items:
            $ref: '#/components/schemas/UserModel'
          type: array
        next:
          description: Next continuation token.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - data
      type: object
    UserModel:
      allOf:
      - $ref: '#/components/schemas/CreateUserDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      - $ref: '#/components/schemas/UserModel_allOf'
      type: object
    CreateUserDefinition:
      example:
        firstName: John
        lastName: Doe
        roleIds:
        - 00000000000001DF
        - 00000000000002D2
        email: johndoe@acme.com
      properties:
        firstName:
          description: First name of the user.
          example: John
          maxLength: 128
          minLength: 1
          type: string
        lastName:
          description: Last name of the user.
          example: Doe
          maxLength: 128
          minLength: 0
          type: string
        email:
          description: Email address of the user.
          example: johndoe@acme.com
          format: email
          maxLength: 255
          type: string
        roleIds:
          description: List of roleIds associated with the user.
          example:
          - 00000000000001DF
          - 00000000000002D2
          items:
            type: string
          type: array
      required:
      - email
      - firstName
      - lastName
      - roleIds
      type: object
    ListUserId:
      properties:
        data:
          description: List of users.
          items:
            type: string
          type: array
      required:
      - data
      type: object
    UpdateUserDefinition:
      example:
        firstName: John
        lastName: Doe
        roleIds:
        - 00000000000001DF
        - 00000000000002D2
        isActive: true
      properties:
        firstName:
          description: First name of the user.
          example: John
          maxLength: 128
          minLength: 1
          type: string
        lastName:
          description: Last name of the user.
          example: Doe
          maxLength: 128
          minLength: 0
          type: string
        isActive:
          description: This has the value `true` if the user is active and `false`
            if they have been deactivated.
          example: true
          type: boolean
        roleIds:
          description: List of role identifiers associated with the user.
          example:
          - 00000000000001DF
          - 00000000000002D2
          items:
            type: string
          type: array
      required:
      - firstName
      - isActive
      - lastName
      - roleIds
      type: object
    ChangeEmailRequest:
      example:
        email: johndoe@acme.com
      properties:
        email:
          description: New email address of the user.
          example: johndoe@acme.com
          format: email
          maxLength: 255
          type: string
      required:
      - email
      type: object
    DisableMfaRequest:
      example:
        password: password
        email: johndoe@cme.com
      properties:
        email:
          description: Email of user whose mfa is being disabled.
          example: johndoe@cme.com
          format: email
          maxLength: 255
          type: string
        password:
          description: Password of user whose mfa is being disabled.
          type: string
      required:
      - email
      - password
      type: object
    ListRoleModelsResponse:
      example:
        next: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        data:
        - null
        - null
      properties:
        data:
          description: List of roles.
          items:
            $ref: '#/components/schemas/RoleModel'
          type: array
        next:
          description: Next continuation token.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - data
      type: object
    RoleModel:
      allOf:
      - $ref: '#/components/schemas/CreateRoleDefinition'
      - $ref: '#/components/schemas/MetadataModel'
      - $ref: '#/components/schemas/RoleModel_allOf'
      type: object
      x-tf-generated-properties: id,name,description,filterPredicate,capabilities
      x-tf-resource-name: Role
    CreateRoleDefinition:
      example:
        autofillDependencies: true
        capabilities:
        - manageContent
        - manageDataVolumeFeed
        - manageFieldExtractionRules
        - manageS3DataForwarding
        name: DataAdmin
        description: Manage data of the org.
        filterPredicate: '!_sourceCategory=billing'
        users:
        - 0000000006743FE0
        - 0000000005FCE0EE
      properties:
        name:
          description: Name of the role.
          example: DataAdmin
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: Description of the role.
          example: Manage data of the org.
          maxLength: 255
          minLength: 0
          type: string
        filterPredicate:
          description: A search filter to restrict access to specific logs. The filter
            is silently added to the beginning of each query a user runs. For example,
            using '!_sourceCategory=billing' as a filter predicate will prevent users
            assigned to the role from viewing logs from the source category named
            'billing'.
          example: '!_sourceCategory=billing'
          type: string
        users:
          description: List of user identifiers to assign the role to.
          example:
          - 0000000006743FE0
          - 0000000005FCE0EE
          items:
            type: string
          type: array
        capabilities:
          description: |-
            List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are
            ### Data Management
              - viewCollectors
              - manageCollectors
              - manageBudgets
              - manageDataVolumeFeed
              - viewFieldExtraction
              - manageFieldExtractionRules
              - manageS3DataForwarding
              - manageContent
              - dataVolumeIndex
              - manageConnections
              - viewScheduledViews
              - manageScheduledViews
              - viewPartitions
              - managePartitions
              - viewFields
              - manageFields
              - viewAccountOverview
              - manageTokens

            ### Entity management
              - manageEntityTypeConfig

            ### Metrics
              - metricsTransformation
              - metricsExtraction
              - metricsRules

            ### Security
              - managePasswordPolicy
              - ipAllowlisting
              - createAccessKeys
              - manageAccessKeys
              - manageSupportAccountAccess
              - manageAuditDataFeed
              - manageSaml
              - shareDashboardOutsideOrg
              - manageOrgSettings
              - changeDataAccessLevel

            ### Dashboards
              - shareDashboardWorld
              - shareDashboardAllowlist

            ### UserManagement
              - manageUsersAndRoles

            ### Observability
              - searchAuditIndex
              - auditEventIndex

            ### Cloud SIEM Enterprise
              - viewCse

            ### Alerting
              - viewMonitorsV2
              - manageMonitorsV2
              - viewAlerts
          example:
          - manageContent
          - manageDataVolumeFeed
          - manageFieldExtractionRules
          - manageS3DataForwarding
          items:
            type: string
          type: array
        autofillDependencies:
          default: true
          description: Set this to true if you want to automatically append all missing
            capability requirements. If set to false an error will be thrown if any
            capabilities are missing their dependencies.
          type: boolean
      required:
      - name
      type: object
    UpdateRoleDefinition:
      example:
        autofillDependencies: true
        capabilities:
        - manageContent
        - manageDataVolumeFeed
        - manageFieldExtractionRules
        - manageS3DataForwarding
        name: DataAdmin
        description: Manage data of the org.
        filterPredicate: '!_sourceCategory=billing'
        users:
        - 0000000006743FE0
        - 0000000005FCE0EE
      properties:
        name:
          description: Name of the role.
          example: DataAdmin
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: Description of the role.
          example: Manage data of the org.
          maxLength: 255
          minLength: 0
          type: string
        filterPredicate:
          description: A search filter to restrict access to specific logs. The filter
            is silently added to the beginning of each query a user runs. For example,
            using '!_sourceCategory=billing' as a filter predicate will prevent users
            assigned to the role from viewing logs from the source category named
            'billing'.
          example: '!_sourceCategory=billing'
          type: string
        users:
          description: List of user identifiers to assign the role to.
          example:
          - 0000000006743FE0
          - 0000000005FCE0EE
          items:
            type: string
          type: array
        capabilities:
          description: |-
            List of [capabilities](https://help.sumologic.com/Manage/Users-and-Roles/Manage-Roles/Role-Capabilities) associated with this role. Valid values are
            ### Data Management
              - viewCollectors
              - manageCollectors
              - manageBudgets
              - manageDataVolumeFeed
              - viewFieldExtraction
              - manageFieldExtractionRules
              - manageS3DataForwarding
              - manageContent
              - dataVolumeIndex
              - manageConnections
              - viewScheduledViews
              - manageScheduledViews
              - viewPartitions
              - managePartitions
              - viewFields
              - manageFields
              - viewAccountOverview
              - manageTokens

            ### Entity management
              - manageEntityTypeConfig

            ### Metrics
              - metricsTransformation
              - metricsExtraction
              - metricsRules

            ### Security
              - managePasswordPolicy
              - ipAllowlisting
              - createAccessKeys
              - manageAccessKeys
              - manageSupportAccountAccess
              - manageAuditDataFeed
              - manageSaml
              - shareDashboardOutsideOrg
              - manageOrgSettings
              - changeDataAccessLevel

            ### Dashboards
              - shareDashboardWorld
              - shareDashboardAllowlist

            ### UserManagement
              - manageUsersAndRoles

            ### Observability
              - searchAuditIndex
              - auditEventIndex

            ### Cloud SIEM Enterprise
              - viewCse

            ### Alerting
              - viewMonitorsV2
              - manageMonitorsV2
              - viewAlerts
          example:
          - manageContent
          - manageDataVolumeFeed
          - manageFieldExtractionRules
          - manageS3DataForwarding
          items:
            type: string
          type: array
        autofillDependencies:
          default: true
          description: Set this to true if you want to automatically append all missing
            capability requirements. If set to false an error will be thrown if any
            capabilities are missing their dependencies.
          type: boolean
      required:
      - capabilities
      - description
      - filterPredicate
      - name
      - users
      type: object
    CapabilityMap:
      properties:
        capabilities:
          additionalProperties:
            $ref: '#/components/schemas/CapabilityDefinition'
          description: Map of capabilities to their attributes
          type: object
      required:
      - capabilities
      type: object
    CapabilityDefinition:
      properties:
        id:
          description: The name of the capability
          example: manageParsers
          type: string
        label:
          description: The UI label for the capability.
          example: Manage Parsers
          type: string
        dependsOn:
          description: Any capabilities that are required for this capability to be
            enabled.
          example:
          - ViewParsers
          - EditParsers
          items:
            type: string
          type: array
        group:
          $ref: '#/components/schemas/CapabilityDefinition_group'
        message:
          description: Warning message that appears when this capability is enabled.
          example: By enabling this capability, you are allowing any user in this
            role to share a dashboard, including its contents, with ANYONE who has
            the URL. This URL can be shared with users outside of your organization,
            allowing them to view the dashboard and its contents. Are you sure you
            want to enable this permission?
          type: string
      required:
      - dependsOn
      - group
      - id
      - label
      type: object
    CapabilityList:
      properties:
        data:
          description: List of capabilities
          items:
            $ref: '#/components/schemas/CapabilityDefinition'
          type: array
      required:
      - data
      type: object
    FolderDefinition:
      example:
        name: SampleFolder
        description: This is a sample folder.
        parentId: parentId
      properties:
        name:
          description: The name of the folder.
          example: SampleFolder
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: The description of the folder.
          example: This is a sample folder.
          maxLength: 255
          minLength: 0
          type: string
        parentId:
          description: The identifier of the parent folder.
          type: string
      required:
      - name
      - parentId
      type: object
    Folder:
      allOf:
      - $ref: '#/components/schemas/Content'
      - $ref: '#/components/schemas/Folder_allOf'
    UpdateFolderRequest:
      example:
        name: SampleFolder
        description: This is a sample folder.
      properties:
        name:
          description: The name of the folder.
          example: SampleFolder
          maxLength: 128
          minLength: 1
          type: string
        description:
          description: The description of the folder.
          example: This is a sample folder.
          maxLength: 255
          minLength: 0
          type: string
      required:
      - name
      type: object
    ContentList:
      example:
        data:
        - null
        - null
      properties:
        data:
          description: A list of the content items.
          items:
            $ref: '#/components/schemas/Content'
          type: array
      required:
      - data
      type: object
    ContentPermissionResult:
      example:
        explicitPermissions:
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
        implicitPermissions:
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
      properties:
        explicitPermissions:
          description: Explicitly assigned content permissions.
          items:
            $ref: '#/components/schemas/ContentPermissionAssignment'
          type: array
        implicitPermissions:
          description: Implicitly inherited content permissions.
          items:
            $ref: '#/components/schemas/ContentPermissionAssignment'
          type: array
      required:
      - explicitPermissions
      type: object
    ContentPermissionAssignment:
      example:
        sourceId: sourceId
        sourceType: role
        contentId: contentId
        permissionName: permissionName
      properties:
        permissionName:
          description: 'Content permission name. Valid values are: `View`, `GrantView`,
            `Edit`, `GrantEdit`, `Manage`, and `GrantManage`.'
          pattern: ^(View|GrantView|Edit|GrantEdit|Manage|GrantManage)$
          type: string
          x-pattern-message: 'must be one of the following: `View`, `GrantView`, `Edit`,
            `GrantEdit`, `Manage`, `GrantManage`'
        sourceType:
          description: 'Type of source for the permission. Valid values are: `user`,
            `role`, and `org`.'
          example: role
          pattern: ^(user|role|org)$
          type: string
          x-pattern-message: 'must be one of the following: `user`, `role`, `org`'
        sourceId:
          description: An identifier that belongs to the source type chosen above.
            For e.g. if the sourceType is set to "user", sourceId should be identifier
            of a user (same goes for `role` and `org` sourceType)
          type: string
        contentId:
          description: Unique identifier for the content item.
          type: string
      required:
      - contentId
      - permissionName
      - sourceId
      - sourceType
      type: object
    ContentPermissionUpdateRequest:
      example:
        contentPermissionAssignments:
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
        - sourceId: sourceId
          sourceType: role
          contentId: contentId
          permissionName: permissionName
        notificationMessage: notificationMessage
        notifyRecipients: true
      properties:
        contentPermissionAssignments:
          description: Content permissions to be updated.
          items:
            $ref: '#/components/schemas/ContentPermissionAssignment'
          type: array
        notifyRecipients:
          description: Set this to "true" to notify the users who had a permission
            update.
          type: boolean
        notificationMessage:
          description: The notification message sent to the users who had a permission
            update.
          type: string
      required:
      - contentPermissionAssignments
      - notificationMessage
      - notifyRecipients
      type: object
    Content:
      allOf:
      - $ref: '#/components/schemas/MetadataModel'
      - $ref: '#/components/schemas/Content_allOf'
      type: object
    MetadataModel:
      properties:
        createdAt:
          description: Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          example: 0000000006743FDD
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          example: 0000000006743FE8
          type: string
      required:
      - createdAt
      - createdBy
      - modifiedAt
      - modifiedBy
      type: object
    ContentPath:
      example:
        path: /Library/Users/user@test.com/SampleFolder
      properties:
        path:
          description: Path of the content item.
          example: /Library/Users/user@test.com/SampleFolder
          type: string
      required:
      - path
      type: object
    ContentSyncDefinition:
      discriminator:
        propertyName: type
      example:
        name: name
        type: type
      properties:
        type:
          description: |-
            The content item type.
            **Note:**
             - `MewboardSyncDefinition` _is depreciated, and will soon be removed. Please use_ `DashboardV2SyncDefinition`
               _instead_.
             - Dashboard links are not supported for dashboards.
          type: string
        name:
          description: The name of the item.
          type: string
      required:
      - name
      - type
      type: object
    IdArray:
      items:
        type: string
      type: array
    BulkBeginAsyncJobResponse:
      properties:
        jobIds:
          additionalProperties:
            type: string
          description: Map of content identifiers to job identifiers.
          type: object
        errors:
          additionalProperties:
            $ref: '#/components/schemas/BulkErrorResponse'
          description: Map of content identifiers to error messages for all failed
            job requests
          type: object
      required:
      - errors
      - jobIds
      type: object
    BulkErrorResponse:
      properties:
        status:
          description: HTTP status code of individual request
          type: integer
        errorResponse:
          $ref: '#/components/schemas/ErrorResponse'
      required:
      - errorResponse
      - status
      type: object
    BulkAsyncStatusResponse:
      properties:
        jobStatuses:
          additionalProperties:
            $ref: '#/components/schemas/AsyncJobStatus'
          description: Map of job identifiers to job statuses.
          type: object
        errors:
          additionalProperties:
            $ref: '#/components/schemas/BulkErrorResponse'
          description: Map of content identifiers to error messages for all failed
            job requests
          type: object
      required:
      - errors
      - jobStatuses
      type: object
    TransformationRulesResponse:
      description: A generic response for transformation rule.
      example:
        next: aGNzTmZBN1ZZWFk9
        data:
        - null
        - null
      properties:
        data:
          description: List of transformation rules.
          items:
            $ref: '#/components/schemas/TransformationRuleResponse'
          type: array
        next:
          description: Next continuation token.
          example: aGNzTmZBN1ZZWFk9
          type: string
      required:
      - data
      type: object
    TransformationRuleResponse:
      allOf:
      - $ref: '#/components/schemas/TransformationRuleRequest'
      - $ref: '#/components/schemas/MetadataModel'
      - $ref: '#/components/schemas/TransformationRuleResponse_allOf'
      description: A generic response for transformation rule.
      type: object
    TransformationRuleRequest:
      description: A request for creating or updating a transformation rule.
      example:
        ruleDefinition:
          name: Transformation Rule 1
          selector: _sourceCategory=metricsstore
          transformedMetricsRetention: 8
          retention: 8
          dimensionTransformations:
          - transformationType: AggregateOnTransformation
            aggregateOn:
            - metric
          - transformationType: AddOrReplaceTransformation
            dimensionToReplace: metric
            value: '{{metric}}_aggregated'
        enabled: true
      properties:
        ruleDefinition:
          $ref: '#/components/schemas/TransformationRuleDefinition'
        enabled:
          description: True if the rule is enabled.
          example: true
          type: boolean
      required:
      - enabled
      - ruleDefinition
      type: object
    TransformationRuleDefinition:
      description: The properties that define a transformation rule.
      example:
        name: Transformation Rule 1
        selector: _sourceCategory=metricsstore
        transformedMetricsRetention: 8
        retention: 8
        dimensionTransformations:
        - transformationType: AggregateOnTransformation
          aggregateOn:
          - metric
        - transformationType: AddOrReplaceTransformation
          dimensionToReplace: metric
          value: '{{metric}}_aggregated'
      properties:
        name:
          description: Name of the transformation rule.
          example: Transformation Rule 1
          type: string
        selector:
          description: Selector of the transformation rule.
          example: _sourceCategory=metricsstore
          type: string
        dimensionTransformations:
          default: []
          description: Dimension transformations of the transformation rule.
          example:
          - transformationType: AggregateOnTransformation
            aggregateOn:
            - metric
          - transformationType: AddOrReplaceTransformation
            dimensionToReplace: metric
            value: '{{metric}}_aggregated'
          items:
            $ref: '#/components/schemas/DimensionTransformation'
          type: array
        transformedMetricsRetention:
          default: 0
          description: Retention period in days for the transformed metrics that are
            generated by this rule. The supported retention periods for transformed
            metrics are 8 days, and 400 days. If no dimension transformations are
            defined, this value will be set to 0.
          example: 8
          format: int64
          type: integer
        retention:
          default: 400
          description: Retention period in days for the metrics that are selected
            by the selector. The supported retention periods for selected metrics
            are 8 days, 400 days, and 0 (Do not store) if this rule contains dimension
            transformation.
          example: 8
          format: int64
          type: integer
      required:
      - name
      - retention
      - selector
      type: object
    DimensionTransformation:
      description: Base class of all transformation types.
      discriminator:
        propertyName: transformationType
      properties:
        transformationType:
          description: This is the base type of all dimension transformations.
          type: string
      required:
      - transformationType
      type: object
    ContractDetails:
      description: |
        Contract details include Entitlements of the customer such as ContinuousLogs, FrequentLogs, Metrics, Storage, and Dashboards along with the entitlement value of each entitlement.
      properties:
        orgId:
          description: Organization identifier of the account.
          type: string
        planType:
          description: Plan name of the account.
          example: Sumo Logic Logs and Metrics Analytics Service - Enterprise Edition
            (Cloud Flex)
          type: string
        entitlements:
          description: List of the entitlements of the account. Entitlements of the
            account are the list of products subscribed by the user.
          items:
            $ref: '#/components/schemas/Entitlements'
          type: array
        sharedBuckets:
          description: Contains list of buckets. Bucket means shared pool from which
            multiple entitlements can use capacity.
          items:
            $ref: '#/components/schemas/SharedBucket'
          type: array
        contractPeriod:
          $ref: '#/components/schemas/ContractPeriod'
        currentBillingPeriod:
          $ref: '#/components/schemas/CurrentBillingPeriod'
      required:
      - contractPeriod
      - currentBillingPeriod
      - entitlements
      - orgId
      - planType
      type: object
    Entitlements:
      properties:
        contractType:
          description: Details of the contract type. `AnnualBucket` are contracts
            that buy and consume ingest on yearly basis. `Credits` are contracts that
            buy a single unit called credits for all our features. `DailyAverage`
            are contracts that buy and consume ingest on a monthly basis.
          example: AnnualBucket, Credits, DailyAverage
          type: string
        entitlementType:
          description: Text denoting the type of entitlement. - `continuous` for Continuous
            Analytics, - `frequent` for Frequent Analytics, - `storage` for Total
            Storage, - `metrics` for Metrics.
          type: string
        label:
          description: The label of an entitlement is the plan name displayed on the
            accounts page in our user interface.
          example: Continuous log entitlement is represented by `Daily Log Ingest
            (Continuous Analytics)`.
          type: string
        capacity:
          $ref: '#/components/schemas/Capacity'
        capacities:
          description: Contains the capacities that were part of the contract.
          items:
            $ref: '#/components/schemas/Capacity'
          type: array
      required:
      - capacity
      - contractType
      - entitlementType
      - label
      type: object
    Capacity:
      description: Amount of entitlement provided by Sumo Logic for the entitlement
        type of the account.
      properties:
        value:
          description: The value of the entitlement in units.
          example: 61425.23
          format: double
          type: number
        unit:
          description: The unit of the entitlement. Units are provided in `GB` or
            `DPM`(data points per minute).
          example: GB
          type: string
        capacityType:
          description: 'Type of capacity. Valid values are: 1) `Paid` : This means
            that the capacity is chargeable. 2) `Free` : This means that this capacity
            is not chargeable.'
          pattern: ^(Paid|Free)$
          type: string
      required:
      - unit
      - value
      type: object
    SharedBucket:
      description: A shared bucket contains capacities which can be used my multiple
        entitlements which are linked to the bucket. There will be a 1:many mapping
        between SharedBucket:Entitlement.
      properties:
        name:
          description: Name of the bucket.
          example: totalReservedCredits
          type: string
        label:
          description: The text to be displayed on UI for this bucket.
          example: Sumo Credits
          type: string
        linkedEntitlementTypes:
          description: List of entitlement types which can consume from this bucket.
          example:
          - continuous
          - frequent
          - metrics
          - storage
          items:
            type: string
          type: array
        capacitites:
          description: List of capacities alloted.
          items:
            $ref: '#/components/schemas/Capacity'
          type: array
      required:
      - capacities
      - label
      - linkedEntitlementTypes
      - name
      type: object
    ContractPeriod:
      properties:
        startDate:
          description: Start date of the contract.
          format: date
          type: string
        endDate:
          description: End date of the contract.
          format: date
          type: string
      required:
      - endDate
      - startDate
      type: object
    CurrentBillingPeriod:
      properties:
        startDate:
          description: Start date of the current billing period.
          format: date
          type: string
        endDate:
          description: End date of the current billing period.
          format: date
          type: string
      required:
      - endDate
      - startDate
      type: object
    ConsumptionDetails:
      description: List of entitlements consumption.
      properties:
        entitlementConsumptions:
          description: An array of entitlements.
          items:
            $ref: '#/components/schemas/EntitlementConsumption'
          type: array
        startDate:
          description: Start date of the data usage.
          format: date
          type: string
        endDate:
          description: End date of the data usage.
          format: date
          type: string
      required:
      - endDate
      - entitlementConsumptions
      - startDate
      type: object
    EntitlementConsumption:
      properties:
        entitlementType:
          description: String value denoting the type of entitlement. - `continuous`
            for Continuous Analytics, - `frequent` for Frequent Analytics, - `storage`
            for Total Storage, - `metrics` for Metrics.
          type: string
        datapoints:
          description: Array of data points of the entitlement with their respective
            date range.
          items:
            $ref: '#/components/schemas/DataPoints'
          type: array
        operators:
          description: Operators used on the data. Available operators are `sum`,
            `average`, `usagePercentage`, `forecastValue`, `forecastPercentage`, and
            `forecastRemainingDays`. sum - Returns the sum of the usages. average
            - Returns the average of the usages. usagePercentage - Returns percentage
            of total capacity used for the startDate and endDate. forecastValue -
            Returns expected usage value assuming current usage behavior continues.
            forecastPercentage - Returns expected percentage usage by the endDate
            assuming current usage behavior continues. forecastRemainingDays- Returns
            the number of expected days, from today, that consumption will last assuming
            current usage behavior continues.
          items:
            $ref: '#/components/schemas/Operator'
          type: array
        contractType:
          description: Consumption model of the entitlements, available values are
            `DailyAverage`, `AnnualBucket`, and `Credits`.
          example: DailyAverage
          type: string
      required:
      - contractType
      - dataPoints
      - entitlementType
      - operators
      type: object
    DataPoints:
      description: Denotes the data points as a result of the groupBy function performed
        on the usage data.
      properties:
        timeRange:
          $ref: '#/components/schemas/BeginBoundedTimeRange'
        values:
          description: An array of objects denoting the value and unit of the data
            points.
          items:
            $ref: '#/components/schemas/DataValue'
          type: array
      required:
      - timeRange
      - value
      type: object
    DataValue:
      properties:
        value:
          description: The value of the data point in units.
          example: 425
          format: double
          type: number
        unit:
          description: The unit of the entitlement, possible values are `GB`, `DPM`,
            or `Credits`.
          example: GB
          type: string
      required:
      - unit
      - value
      type: object
    Operator:
      description: Result of the aggregations performed on the usages. Operator can
        be `sum`, `average`, `usagePercentage`, `forecastValue`,`forecastPercentage`,
        or `forecastRemainingDays`.
      properties:
        values:
          description: An array of objects denoting the value and unit of the results.
          items:
            $ref: '#/components/schemas/DataValue'
          type: array
        name:
          description: The name of the operator applied to the data.
          example: sum
          type: string
      required:
      - name
      - values
      type: object
    PlansCatalog:
      description: Plans available for the account to update.
      properties:
        plans:
          description: List of plans available.
          items:
            $ref: '#/components/schemas/SelfServicePlan'
          type: array
      required:
      - plans
      type: object
    SelfServicePlan:
      description: Details about a Plan, along with its product groups and subscription
        options
      properties:
        productId:
          description: |
            Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`
          example: Essentials
          pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$
          type: string
          x-pattern-message: 'must be one of the following: `Essentials`, `Trial`,
            `Free`, `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`'
        productName:
          description: Name for the product.
          example: Sumo Logic Continuous Intelligence Service - Essentials Edition
          type: string
        productGroups:
          description: A list of product group for preview.
          items:
            $ref: '#/components/schemas/ProductGroup'
          type: array
        productSubscriptionOptions:
          description: A list of product subscription option.
          items:
            $ref: '#/components/schemas/ProductSubscriptionOption'
          type: array
      required:
      - productGroups
      - productId
      - productName
      - productSubscriptionOptions
      type: object
    ProductId:
      description: |
        Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`
      example: Essentials
      pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$
      type: string
      x-pattern-message: 'must be one of the following: `Essentials`, `Trial`, `Free`,
        `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`'
    ProductName:
      description: Name for the product.
      example: Sumo Logic Continuous Intelligence Service - Essentials Edition
      type: string
    ProductGroup:
      description: Details of product group and its quantity.
      properties:
        productGroupName:
          description: |
            Name of the Product group:
          example: Continuous Analytics
          type: string
        productVariables:
          description: Different product variables of the product group
          items:
            $ref: '#/components/schemas/ProductVariable'
          type: array
      required:
      - productGroupName
      - productVariables
      type: object
    ProductVariable:
      description: Details of product variable and its quantity.
      properties:
        productVariableName:
          description: Name of a product variable.
          example: Continuous Log Ingest
          type: string
        productVariableId:
          description: Unique Identifier of the product variable.
          example: continuousIngest
          pattern: ^(continuousIngest|continuousStorage|frequentIngest|frequentStorage|infrequentIngest|infrequentStorage|infrequentScannedData|cseIngest|cseStorage|metrics)$
          type: string
          x-pattern-message: 'must be one of the following: `continuousIngest`, `continuousStorage`,
            `frequentIngest`, `frequentStorage`, `infrequentIngest`, `infrequentStorage`,
            `infrequentScannedData`, `cseIngest`, `cseStorage`, `metrics`'
        unit:
          description: Unit of measure for the productvariable.
          example: GB
          type: string
        possibleValues:
          description: Possible values allowed for the productvariable.
          example:
          - 3
          - 5
          - 10
          - 20
          items:
            format: int64
            type: integer
          type: array
      required:
      - possibleValues
      - productVariableId
      - productVariableName
      - unit
      type: object
    ProductSubscriptionOption:
      description: Subscription option containing billing frequency and discount details.
      properties:
        billingFrequency:
          description: |
            Identifier for the plans billing term. Valid values are:
             1. Monthly
             2. Annually
          example: Monthly
          pattern: ^(Monthly|Annually)$
          type: string
          x-pattern-message: 'must be one of the following: `Monthly`, `Annually`'
        discountPercentage:
          description: Discount percentage for this plan's subscription.
          example: 20
          type: integer
      required:
      - billingFrequency
      - discountPercentage
      type: object
    BillingFrequency:
      description: |
        Identifier for the plans billing term. Valid values are:
         1. Monthly
         2. Annually
      example: Monthly
      pattern: ^(Monthly|Annually)$
      type: string
      x-pattern-message: 'must be one of the following: `Monthly`, `Annually`'
    CurrentPlan:
      description: Current plan of the account.
      properties:
        productId:
          description: |
            Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`
          example: Essentials
          pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$
          type: string
          x-pattern-message: 'must be one of the following: `Essentials`, `Trial`,
            `Free`, `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`'
        planCost:
          description: Cost incurred for the current plan.
          example: 725.46
          format: double
          type: number
        billingFrequency:
          description: |
            Billing frequency for the current plan. Valid values are: 1. `Monthly` 2. `Annually`
          example: Monthly
          pattern: ^(Monthly|Annually)$
          type: string
          x-pattern-message: 'must be one of the following: `Monthly` or `Annually`'
        consumables:
          description: Consumables in the current plan.
          items:
            $ref: '#/components/schemas/Consumable'
          type: array
        planType:
          description: Whether the account is `Free`/`Trial`/`Paid`
          example: Free
          pattern: ^(Free|Trial|Paid)$
          type: string
          x-pattern-message: 'must be one of the following: `Free`, `Trial` or `Paid`'
        planName:
          description: The plan name for the product being used.
          type: string
        discountAmount:
          description: The discount offered for the given contract period.
          type: integer
        contractPeriod:
          $ref: '#/components/schemas/ContractPeriod'
        currentBillingPeriod:
          $ref: '#/components/schemas/CurrentBillingPeriod'
        credits:
          description: Numerical value of the amount of credits
          example: 300
          format: int64
          type: integer
        baselines:
          $ref: '#/components/schemas/Baselines'
      required:
      - billingFrequency
      - planCost
      - productId
      type: object
    Consumable:
      description: Details of consumable and its quantity.
      properties:
        consumableId:
          description: |
            Unique identifier of the consumable. Valid values are: 1. `Storage` 2. `Metrics` 3. `Continuous` 4. `Credits`
          example: Metrics
          pattern: ^(Storage|Metrics|Continuous|Credits)$
          type: string
          x-pattern-message: 'must be one of the following: `Storage`, `Metrics`,
            `Continuous`, `Credits`'
        quantity:
          $ref: '#/components/schemas/Quantity'
      required:
      - consumableId
      - quantity
      type: object
    Quantity:
      description: Details of unit of consumption and its value.
      properties:
        value:
          description: The value of the consumable in units.
          example: 61425
          format: int64
          type: integer
        unit:
          description: |
            The unit of the consumable. Units are provided in: 1. `GB` 2. `DPM`(Data Points Per Minute) 3. `Credits` 4. `Days`
          example: GB
          pattern: ^(GB|DPM|Credits|Days)$
          type: string
          x-pattern-message: 'must be one of the following: `GB`, `DPM`, `Credits`,
            `Days`'
      required:
      - unit
      - value
      type: object
    Baselines:
      description: Details of consumable and its quantity.
      properties:
        continuousIngest:
          default: 0
          description: The amount of continuous logs ingest to allocate to the organization,
            in GBs.
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        continuousStorage:
          default: 30
          description: Number of days of continuous logs storage to allocate to the
            organization, in Days.
          example: 30
          format: int64
          maximum: 30
          minimum: 30
          type: integer
        frequentIngest:
          default: 0
          description: The amount of frequent logs ingest to allocate to the organization,
            in GBs.
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        frequentStorage:
          default: 30
          description: Number of days of frequent logs storage to allocate to the
            organization, in Days.
          example: 30
          format: int64
          maximum: 30
          minimum: 30
          type: integer
        infrequentIngest:
          default: 0
          description: The amount of infrequent logs ingest to allocate to the organization,
            in GBs.
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        infrequentStorage:
          default: 30
          description: The amount of infrequent logs storage to allocate to the organization,
            in Days.
          example: 30
          format: int64
          maximum: 30
          minimum: 30
          type: integer
        infrequentScan:
          default: 0
          description: The amount of infrequent logs scan to allocate to the organization,
            in GBs.
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        metrics:
          default: 0
          description: The amount of Metrics usage to allocate to the organization,
            in DPMs (Data Points per Minute).
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        cseIngest:
          default: 0
          description: The amount of CSE ingest to allocate to the organization, in
            GBs.
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        cseStorage:
          default: 0
          description: The amount of CSE storage to allocate to the organization,
            in GBs.
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
        tracingIngest:
          default: 0
          description: The amount of tracing data ingest to allocate to the organization,
            in GBs.
          example: 50000
          format: int64
          maximum: 1000000
          minimum: 0
          type: integer
      type: object
    UpdateRequest:
      description: Update request for the account.
      properties:
        productId:
          description: |
            Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`
          example: Essentials
          pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$
          type: string
          x-pattern-message: 'must be one of the following: `Essentials`, `Trial`,
            `Free`, `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`'
        billingFrequency:
          description: |
            Identifier for the plans billing term. Valid values are:
             1. Monthly
             2. Annually
          example: Monthly
          pattern: ^(Monthly|Annually)$
          type: string
          x-pattern-message: 'must be one of the following: `Monthly`, `Annually`'
        baselines:
          $ref: '#/components/schemas/SelfServiceCreditsBaselines'
      required:
      - baselines
      - billingFrequency
      - productId
      type: object
    SelfServiceCreditsBaselines:
      description: Details of product variables and its quantity as required for credits.
      properties:
        continuousIngest:
          default: 0
          description: The amount of continuous logs ingest to allocate to the organization,
            in GBs.
          example: 5
          format: int64
          minimum: 0
          type: integer
        continuousStorage:
          default: 0
          description: Number of days of continuous logs storage to allocate to the
            organization, in Days.
          example: 30
          format: int64
          minimum: 0
          type: integer
        metrics:
          default: 0
          description: The amount of Metrics usage to allocate to the organization,
            in DPMs (Data Points per Minute).
          example: 20000
          format: int64
          minimum: 0
          type: integer
        tracingIngest:
          default: 0
          description: The amount of tracing data ingest to allocate to the organization,
            in GBs.
          example: 1
          format: int64
          minimum: 0
          type: integer
      type: object
    UpgradePlans:
      description: Upgrade plans available for the account.
      properties:
        plans:
          description: List of plans available.
          items:
            $ref: '#/components/schemas/Plan'
          type: array
      required:
      - plans
      type: object
    Plan:
      description: Upgrade preview request for the account.
      properties:
        productId:
          description: |
            Unique identifier of the product in current plan. Valid values are: 1. `Free` 2. `Trial` 3. `Essentials` 4. `EnterpriseOps` 5. `EnterpriseSec` 6. `EnterpriseSuite`
          example: Essentials
          pattern: ^(Essentials|Trial|Free|EnterpriseOps|EnterpriseSec|EnterpriseSuite)$
          type: string
          x-pattern-message: 'must be one of the following: `Essentials`, `Trial`,
            `Free`, `EnterpriseOps`, `EnterpriseSec`, `EnterpriseSuite`'
        productName:
          description: Name for the product.
          example: Sumo Logic Continuous Intelligence Service - Essentials Edition
          type: string
        productGroups:
          description: A list of product group for preview.
          items:
            $ref: '#/components/schemas/ProductGroup'
          type: array
      required:
      - productGroups
      - productId
      - productName
      type: object
    AccountStatusResponse:
      description: Information about the account's plan and payment.
      example:
        pricingModel: credits
        applicationUse: ALLOWED
        planType: Free
        accountActivated: true
        planExpirationDays: 20
        canUpdatePlan: true
      properties:
        pricingModel:
          description: Whether the account is `cloudflex` or `credits`
          example: credits
          pattern: ^(credits|cloudflex)$
          type: string
        canUpdatePlan:
          description: If the plan can be updated by the given user
          example: true
          type: boolean
        planType:
          description: Whether the account is `Free`/`Trial`/`Paid`
          example: Free
          pattern: ^(Free|Trial|Paid)$
          type: string
        planExpirationDays:
          description: The number of days in which the plan will expire
          example: 20
          type: integer
        applicationUse:
          description: The current usage of the application.
          example: ALLOWED
          pattern: ^(ALLOWED|ALLOWED_WITH_WARNING|THROTTLED|RESTRICTED)$
          type: string
        accountActivated:
          description: If the account is activated or not
          example: true
          type: boolean
      required:
      - applicationUse
      - canUpdatePlan
      - planType
      - pricingModel
      type: object
    SubdomainDefinitionResponse:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        subdomain: my-company
        modifiedBy: modifiedBy
        url: https://your-company.sumologic.com
      properties:
        createdAt:
          description: |
            Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339) format.
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
        subdomain:
          description: The new subdomain.
          example: my-company
          type: string
        url:
          description: Login URL corresponding to the subdomain.
          example: https://your-company.sumologic.com
          type: string
      required:
      - createdAt
      - createdBy
      - modifiedAt
      - modifiedBy
      - subdomain
      - url
      type: object
    ConfigureSubdomainRequest:
      example:
        subdomain: my-company
      properties:
        subdomain:
          description: The new subdomain.
          example: my-company
          maxLength: 63
          minLength: 4
          pattern: ^(?!xn--)[a-z]([a-z0-9-]*[a-z0-9])?$
          type: string
      required:
      - subdomain
      type: object
    SubdomainAvailabilityResponse:
      properties:
        isAvailable:
          description: Subdomain is available for use or not.
          example: false
          type: boolean
      required:
      - isAvailable
      type: object
    SubdomainUrlResponse:
      properties:
        url:
          description: Login URL corresponding to the subdomain.
          example: https://your-company.sumologic.com
          type: string
      required:
      - url
      type: object
    CalculatorRequest:
      description: Details of the request
      properties:
        parentDeploymentId:
          description: Identifier of the deployment in which the parent org is present.
          example: us2
          maxLength: 4
          type: string
        deploymentId:
          description: Identifier of the deployment in which the child org is present.
          example: us2
          type: string
        trialPlanPeriod:
          description: length of the trial period.
          example: 45
          type: integer
        baselines:
          $ref: '#/components/schemas/Baselines'
      type: object
    TotalCredits:
      description: Total amount of credits to be deducted from the parent organization
        corresponding to the baselines
      properties:
        totalCredits:
          description: Numerical value of the amount of credits
          example: 300.0
          format: double
          type: number
        breakdown:
          $ref: '#/components/schemas/CreditsBreakdown'
      required:
      - totalCredits
      type: object
    CreditsBreakdown:
      description: Breakdown of the credits.
      properties:
        deploymentChargeCredits:
          description: The total credits deducted from the parent organization in
            the form of deployment charge.
          example: 100.0
          format: double
          type: number
        allocatedCredits:
          description: The total useable credits allocated to the child organization.
          example: 200.0
          format: double
          type: number
      required:
      - allocatedCredits
      - deploymentChargeCredits
      type: object
    PlanUpdateEmail:
      description: details of the plan for updating with contact information
      properties:
        emailId:
          description: email id on which support team will contact on
          example: johndoe@acme.com
          format: email
          maxLength: 255
          type: string
        phoneNumber:
          description: contact number on which support team can call user
          example: +01-87789-65749
          maxLength: 30
          type: string
        billingFrequency:
          description: The frequency with with the customer needs to be billed at.
            The current supported values are Monthly and Annually
          example: Monthly
          pattern: ^(Monthly|Annually|)$
          type: string
          x-pattern-message: 'must be one of the following: `Monthly`, `Annually`'
        baselines:
          $ref: '#/components/schemas/SelfServiceCreditsBaselines'
        details:
          description: option details the user might want to inform
          example: I need some help with my plan.
          type: string
      required:
      - baselines
      - emailId
      type: object
    SaveMetricsSearchRequest:
      allOf:
      - $ref: '#/components/schemas/MetricsSearchV1'
      - $ref: '#/components/schemas/SaveMetricsSearchRequest_allOf'
      description: The definition of the metrics search to save in the content library.
      type: object
    MetricsSearchV1:
      description: Definition of a metrics search.
      example:
        logQuery: my_metric | timeslice 1m | count by _timeslice
        desiredQuantizationInSecs: 60
        description: Long and detailed description
        metricsQueries:
        - query: my_metric | avg
          rowId: A
        - query: my_metric | avg
          rowId: A
        title: Short title
        properties: '{ \"key\": \"value\" }'
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      properties:
        title:
          description: Item title in the content library.
          example: Short title
          maxLength: 255
          minLength: 1
          pattern: ^[a-zA-Z0-9 +%-@.,_()]+$
          type: string
        description:
          description: Item description in the content library.
          example: Long and detailed description
          maxLength: 8192
          type: string
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        logQuery:
          description: Log query used to add an overlay to the chart.
          example: my_metric | timeslice 1m | count by _timeslice
          maxLength: 10240
          type: string
        metricsQueries:
          description: Metrics queries, up to the maximum of six.
          items:
            $ref: '#/components/schemas/MetricsSearchQuery'
          type: array
        desiredQuantizationInSecs:
          default: 0
          description: Desired quantization in seconds.
          example: 60
          format: int32
          minimum: 0
          type: integer
        properties:
          description: |
            Chart properties, like line width, color palette, and the fill missing data method. Leave this field empty to use the defaults.
            This property contains JSON object encoded as a string.
          example: '{ \"key\": \"value\" }'
          type: string
      required:
      - description
      - metricsQueries
      - timeRange
      - title
      type: object
    MetricsSearchQuery:
      description: Definition of a metrics query.
      example:
        query: my_metric | avg
        rowId: A
      properties:
        rowId:
          description: Row identifier. All row IDs are represented by subsequent upper
            case letters starting with `A`.
          example: A
          type: string
        query:
          description: Metrics query.
          example: my_metric | avg
          type: string
      required:
      - query
      - rowId
      type: object
    MetricsSearchInstance:
      allOf:
      - $ref: '#/components/schemas/MetricsSearchV1'
      - $ref: '#/components/schemas/MetadataModel'
      - $ref: '#/components/schemas/MetricsSearchInstance_allOf'
    ListTokensBaseResponse:
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: token-name
          description: 'token description: for test.'
          modifiedBy: modifiedBy
          id: id
          type: CollectorRegistrationTokenResponse
          version: 0
          status: Active
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          name: token-name
          description: 'token description: for test.'
          modifiedBy: modifiedBy
          id: id
          type: CollectorRegistrationTokenResponse
          version: 0
          status: Active
      properties:
        data:
          description: List of tokens.
          items:
            $ref: '#/components/schemas/TokenBaseResponse'
          type: array
      required:
      - data
      type: object
    TokenBaseResponse:
      discriminator:
        propertyName: type
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        name: token-name
        description: 'token description: for test.'
        modifiedBy: modifiedBy
        id: id
        type: CollectorRegistrationTokenResponse
        version: 0
        status: Active
      properties:
        id:
          description: Identifier of the token.
          type: string
        name:
          description: Name of the token.
          example: token-name
          maxLength: 255
          minLength: 1
          type: string
        description:
          description: Description of the token.
          example: 'token description: for test.'
          maxLength: 4096
          minLength: 0
          type: string
        status:
          description: Status of the token. Can be `Active`, or `Inactive`.
          example: Active
          pattern: ^(Active|Inactive)$
          type: string
          x-pattern-message: must be either `Active` or `Inactive`
        type:
          description: 'Type of the token. Valid values: 1) CollectorRegistrationTokenResponse'
          example: CollectorRegistrationTokenResponse
          pattern: ^(CollectorRegistrationTokenResponse)$
          type: string
          x-pattern-message: must be `CollectorRegistrationTokenResponse`
        version:
          description: Version of the token.
          format: int64
          type: integer
        createdAt:
          description: Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
      required:
      - createdAt
      - createdBy
      - description
      - id
      - modifiedAt
      - modifiedBy
      - name
      - status
      - type
      - version
      type: object
    TokenBaseDefinition:
      example:
        name: token-name
        description: 'token description: for test.'
        type: CollectorRegistration
        status: Active
      properties:
        name:
          description: Name of the token.
          example: token-name
          maxLength: 255
          minLength: 1
          type: string
        description:
          description: Description of the token.
          example: 'token description: for test.'
          maxLength: 4096
          minLength: 0
          type: string
        status:
          description: Status of the token. Can be `Active`, or `Inactive`.
          example: Active
          pattern: ^(Active|Inactive)$
          type: string
          x-pattern-message: must be either `Active` or `Inactive`
        type:
          description: 'Type of the token. Valid values: 1) CollectorRegistration'
          example: CollectorRegistration
          pattern: ^(CollectorRegistration)$
          type: string
          x-pattern-message: must be `CollectorRegistration`
      required:
      - name
      - status
      - type
      type: object
    TokenBaseDefinitionUpdate:
      example:
        name: token-name
        description: 'token description: for test.'
        type: CollectorRegistration
        version: 0
        status: Active
      properties:
        name:
          description: Name of the token.
          example: token-name
          maxLength: 255
          minLength: 1
          type: string
        description:
          description: Description of the token.
          example: 'token description: for test.'
          maxLength: 4096
          minLength: 0
          type: string
        status:
          description: Status of the token. Can be `Active`, or `Inactive`.
          example: Active
          pattern: ^(Active|Inactive)$
          type: string
          x-pattern-message: must be either `Active` or `Inactive`
        type:
          description: 'Type of the token. Valid values: 1) CollectorRegistration'
          example: CollectorRegistration
          pattern: ^(CollectorRegistration)$
          type: string
          x-pattern-message: must be `CollectorRegistration`
        version:
          description: Version of the token.
          format: int64
          type: integer
      required:
      - name
      - status
      - type
      - version
      type: object
    PaginatedListAccessKeysResult:
      description: List of access keys.
      example:
        next: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
        data:
        - corsHeaders:
          - https://my-app.com
          - https://mail.my-app.com
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: 0000000006743FDD
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          disabled: false
          id: su0w3Q37CBzHUM
          label: collector access key
        - corsHeaders:
          - https://my-app.com
          - https://mail.my-app.com
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: 0000000006743FDD
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          disabled: false
          id: su0w3Q37CBzHUM
          label: collector access key
      properties:
        data:
          description: An array of access keys.
          items:
            $ref: '#/components/schemas/AccessKeyPublic'
          type: array
        next:
          description: Next continuation token.
          example: GDCiRv4vebF3UWFJQ1kySXBOR3Bzh69GR0RyWm9vCtc
          type: string
      required:
      - data
      type: object
    AccessKeyPublic:
      example:
        corsHeaders:
        - https://my-app.com
        - https://mail.my-app.com
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: 0000000006743FDD
        modifiedAt: 2000-01-23T04:56:07.000+00:00
        disabled: false
        id: su0w3Q37CBzHUM
        label: collector access key
      properties:
        id:
          description: Identifier of the access key.
          example: su0w3Q37CBzHUM
          type: string
        label:
          description: The name of the access key.
          example: collector access key
          type: string
        corsHeaders:
          description: |-
            An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:
              1. Requests with an ORIGIN header but the allowlist is empty.
              2. Requests with an ORIGIN header that don't match any entry in the allowlist.
          example:
          - https://my-app.com
          - https://mail.my-app.com
          items:
            type: string
          type: array
        disabled:
          description: Indicates whether the access key is disabled or not.
          example: false
          type: boolean
        createdAt:
          description: Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: date-time
          type: string
        createdBy:
          description: Identifier of the user who created the access key.
          example: 0000000006743FDD
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: date-time
          type: string
      required:
      - createdAt
      - createdBy
      - disabled
      - id
      - label
      - modifiedAt
      type: object
    AccessKeyCreateRequest:
      example:
        corsHeaders:
        - https://my-app.com
        - https://mail.my-app.com
        label: automation access key
      properties:
        label:
          description: A name for the access key to be created.
          example: automation access key
          maxLength: 128
          type: string
        corsHeaders:
          description: |-
            An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request
            depends on whether it contains an ORIGIN header and the entries in the allowlist.
            Sumo Logic will reject:
              1. Requests with an ORIGIN header but the allowlist is empty.
              2. Requests with an ORIGIN header that don't match any entry in the allowlist.
          example:
          - https://my-app.com
          - https://mail.my-app.com
          items:
            type: string
          maxItems: 20
          type: array
      required:
      - label
      type: object
    AccessKey:
      allOf:
      - $ref: '#/components/schemas/AccessKeyPublic'
      - $ref: '#/components/schemas/AccessKey_allOf'
    ListAccessKeysResult:
      description: List of access keys.
      example:
        data:
        - corsHeaders:
          - https://my-app.com
          - https://mail.my-app.com
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: 0000000006743FDD
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          disabled: false
          id: su0w3Q37CBzHUM
          label: collector access key
        - corsHeaders:
          - https://my-app.com
          - https://mail.my-app.com
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: 0000000006743FDD
          modifiedAt: 2000-01-23T04:56:07.000+00:00
          disabled: false
          id: su0w3Q37CBzHUM
          label: collector access key
      properties:
        data:
          description: An array of access keys.
          items:
            $ref: '#/components/schemas/AccessKeyPublic'
          type: array
      required:
      - data
      type: object
    AccessKeyUpdateRequest:
      example:
        corsHeaders:
        - https://my-app.com
        - https://mail.my-app.com
        disabled: true
      properties:
        disabled:
          description: Indicates whether the access key is disabled or not.
          example: true
          type: boolean
        corsHeaders:
          description: |-
            An array of domains for which the access key is valid. Whether Sumo Logic accepts or rejects an API request depends on whether it contains an ORIGIN header and the entries in the allowlist. Sumo Logic will reject:
              1. Requests with an ORIGIN header but the allowlist is empty.
              2. Requests with an ORIGIN header that don't match any entry in the allowlist.
          example:
          - https://my-app.com
          - https://mail.my-app.com
          items:
            type: string
          maxItems: 20
          type: array
      required:
      - disabled
      type: object
    SamlIdentityProvider:
      allOf:
      - $ref: '#/components/schemas/SamlIdentityProviderRequest'
      - $ref: '#/components/schemas/AuthnCertificateResult'
      - $ref: '#/components/schemas/MetadataModel'
      - $ref: '#/components/schemas/SamlIdentityProvider_allOf'
      type: object
    SamlIdentityProviderRequest:
      example:
        x509cert1: x509cert1
        isRedirectBinding: false
        rolesAttribute: Sumo_Role
        configurationName: SumoLogic
        signAuthnRequest: false
        x509cert2: x509cert2
        x509cert3: x509cert3
        disableRequestedAuthnContext: false
        issuer: http://www.okta.com/abxcseyuiwelflkdjh
        spInitiatedLoginEnabled: false
        spInitiatedLoginPath: http://www.okta.com/abxcseyuiwelflkdjh
        authnRequestUrl: https://service.sumologic.com/sumo/saml/login/9483922
        onDemandProvisioningEnabled:
          firstNameAttribute: http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname
          onDemandProvisioningRoles: Analyst/Administrator
          lastNameAttribute: http://schemas.microsoft.com/ws/2008/06/identity/claims/surname
        logoutUrl: https://www.sumologic.com
        logoutEnabled: false
        emailAttribute: attribute/subject
        debugMode: false
      properties:
        spInitiatedLoginPath:
          default: ""
          deprecated: true
          description: This property has been deprecated and is no longer used.
          example: http://www.okta.com/abxcseyuiwelflkdjh
          type: string
        configurationName:
          description: Name of the SSO policy or another name used to describe the
            policy internally.
          example: SumoLogic
          type: string
        issuer:
          description: The unique URL assigned to the organization by the SAML Identity
            Provider.
          example: http://www.okta.com/abxcseyuiwelflkdjh
          type: string
        spInitiatedLoginEnabled:
          default: false
          description: True if Sumo Logic redirects users to your identity provider
            with a SAML AuthnRequest when signing in.
          type: boolean
        authnRequestUrl:
          default: ""
          description: The URL that the identity provider has assigned for Sumo Logic
            to submit SAML authentication requests to the identity provider.
          example: https://service.sumologic.com/sumo/saml/login/9483922
          type: string
        x509cert1:
          description: The certificate is used to verify the signature in SAML assertions.
          type: string
        x509cert2:
          default: ""
          description: The backup certificate used to verify the signature in SAML
            assertions when x509cert1 expires.
          type: string
        x509cert3:
          default: ""
          description: The backup certificate used to verify the signature in SAML
            assertions when x509cert1 expires and x509cert2 is empty.
          type: string
        onDemandProvisioningEnabled:
          $ref: '#/components/schemas/OnDemandProvisioningInfo'
        rolesAttribute:
          default: ""
          description: The role that Sumo Logic will assign to users when they sign
            in.
          example: Sumo_Role
          type: string
        logoutEnabled:
          default: false
          description: True if users are redirected to a URL after signing out of
            Sumo Logic.
          type: boolean
        logoutUrl:
          default: ""
          description: The URL that users will be redirected to after signing out
            of Sumo Logic.
          example: https://www.sumologic.com
          type: string
        emailAttribute:
          default: ""
          description: The email address of the new user account.
          example: attribute/subject
          type: string
        debugMode:
          default: false
          description: True if additional details are included when a user fails to
            sign in.
          type: boolean
        signAuthnRequest:
          default: false
          description: True if Sumo Logic will send signed Authn requests to the identity
            provider.
          type: boolean
        disableRequestedAuthnContext:
          default: false
          description: True if Sumo Logic will include the RequestedAuthnContext element
            of the SAML AuthnRequests it sends to the identity provider.
          type: boolean
        isRedirectBinding:
          default: false
          description: True if the SAML binding is of HTTP Redirect type.
          type: boolean
      required:
      - configurationName
      - issuer
      - x509cert1
      type: object
    OnDemandProvisioningInfo:
      example:
        firstNameAttribute: http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname
        onDemandProvisioningRoles: Analyst/Administrator
        lastNameAttribute: http://schemas.microsoft.com/ws/2008/06/identity/claims/surname
      properties:
        firstNameAttribute:
          default: ""
          description: First name attribute of the new user account.
          example: http://schemas.microsoft.com/ws/2008/06/identity/claims/givenname
          type: string
        lastNameAttribute:
          default: ""
          description: Last name attribute of the new user account.
          example: http://schemas.microsoft.com/ws/2008/06/identity/claims/surname
          type: string
        onDemandProvisioningRoles:
          default: []
          description: Sumo Logic RBAC roles to be assigned when user accounts are
            provisioned.
          example: Analyst/Administrator
          items:
            type: string
          type: array
      required:
      - onDemandProvisioningRoles
      type: object
    AuthnCertificateResult:
      properties:
        certificate:
          description: Authentication Request Signing Certificate for the user.
          type: string
      required:
      - certificate
      type: object
    AllowlistedUserResult:
      example:
        firstName: firstName
        lastName: lastName
        lastLogin: 2000-01-23T04:56:07.000+00:00
        isActive: true
        userId: userId
        email: john@sumologic.com
        canManageSaml: true
      properties:
        userId:
          description: Unique identifier of the user.
          type: string
        firstName:
          description: First name of the user.
          type: string
        lastName:
          description: Last name of the user.
          type: string
        email:
          description: Email of the user.
          example: john@sumologic.com
          type: string
        canManageSaml:
          description: If the user can manage SAML Configurations.
          type: boolean
        isActive:
          description: Checks if the user is active.
          type: boolean
        lastLogin:
          description: Timestamp of the last login of the user.
          format: date-time
          type: string
      required:
      - canManageSaml
      - email
      - firstName
      - isActive
      - lastLogin
      - lastName
      - userId
      type: object
    CidrList:
      description: A list of CIDR notations and/or IP addresses.
      example:
        data:
        - description: Accountant
          cidr: 192.35.24.1
        - description: Accountant
          cidr: 192.35.24.1
        - description: Accountant
          cidr: 192.35.24.1
        - description: Accountant
          cidr: 192.35.24.1
        - description: Accountant
          cidr: 192.35.24.1
      properties:
        data:
          description: An array of CIDR notations and/or IP addresses.
          items:
            $ref: '#/components/schemas/Cidr'
          maxItems: 50
          type: array
      required:
      - data
      type: object
    Cidr:
      description: A CIDR notation or IP address along with its description.
      example:
        description: Accountant
        cidr: 192.35.24.1
      properties:
        cidr:
          description: The string representation of the CIDR notation or IP address.
          example: 192.35.24.1
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))?$
          type: string
          x-pattern-message: Invalid CIDR/IP
        description:
          description: Description of the CIDR notation or IP address.
          example: Accountant
          type: string
      required:
      - cidr
      type: object
    AllowlistingStatus:
      description: The status of service allowlisting for Content and Login.
      example:
        contentEnabled: true
        loginEnabled: true
      properties:
        contentEnabled:
          description: Whether service allowlisting is enabled for Content.
          type: boolean
        loginEnabled:
          description: Whether service allowlisting is enabled for Login.
          type: boolean
      required:
      - contentEnabled
      - loginEnabled
      type: object
    AuditPolicy:
      description: Audit policy.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether the Audit policy is enabled.
          example: true
          type: boolean
      required:
      - enabled
      type: object
    SearchAuditPolicy:
      description: Search Audit policy.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether the Search Audit policy is enabled.
          example: true
          type: boolean
      required:
      - enabled
      type: object
    ShareDashboardsOutsideOrganizationPolicy:
      description: Share Dashboards Outside Organization policy.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether the Share Dashboards Outside Organization policy is
            enabled.
          example: true
          type: boolean
      required:
      - enabled
      type: object
    DataAccessLevelPolicy:
      description: Data Access Level policy.
      example:
        enabled: true
      properties:
        enabled:
          description: Whether the Data Access Level policy is enabled.
          example: true
          type: boolean
      required:
      - enabled
      type: object
    UserConcurrentSessionsLimitPolicy:
      description: User Concurrent Sessions Limit policy.
      example:
        maxConcurrentSessions: 50
        enabled: true
      properties:
        enabled:
          description: Whether the User Concurrent Sessions Limit policy is enabled.
          example: true
          type: boolean
        maxConcurrentSessions:
          default: 100
          description: Maximum number of concurrent sessions a user may have.
          example: 50
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - enabled
      type: object
    MaxUserSessionTimeoutPolicy:
      description: Max User Session Timeout policy.
      example:
        maxUserSessionTimeout: 1d
      properties:
        maxUserSessionTimeout:
          description: 'Maximum web session timeout users are able to configure within
            their user preferences. Valid values are: `5m`, `15m`, `30m`, `1h`, `2h`,
            `6h`, `12h`, `1d`, `2d`, `3d`, `5d`, or `7d`'
          example: 1d
          pattern: ^(5m|15m|30m|1h|2h|6h|12h|1d|2d|3d|5d|7d)$
          type: string
          x-pattern-message: 'must be one of the following: `5m`, `15m`, `30m`, `1h`,
            `2h`, `6h`, `12h`, `1d`, `2d`, `3d`, `5d`, or `7d`'
      required:
      - maxUserSessionTimeout
      type: object
    ListHealthEventResponse:
      example:
        next: next
        data:
        - eventId: e801dc7d-f483-46e9-bcc9-410f08f96497
          severityLevel: severityLevel
          resourceIdentity:
            name: S3 Source, Scheduled View name.
            id: C03E086C137F38B4
            type: Collector
          eventTime: 2000-01-23T04:56:07.000+00:00
          eventName: InstalledCollectorOffline
          subsystem: subsystem
          details:
            trackerId: trackerId
            description: S3 collection is not working as expected because of access
              issues.
            error: Access denied to Amazon S3 bucket
        - eventId: e801dc7d-f483-46e9-bcc9-410f08f96497
          severityLevel: severityLevel
          resourceIdentity:
            name: S3 Source, Scheduled View name.
            id: C03E086C137F38B4
            type: Collector
          eventTime: 2000-01-23T04:56:07.000+00:00
          eventName: InstalledCollectorOffline
          subsystem: subsystem
          details:
            trackerId: trackerId
            description: S3 collection is not working as expected because of access
              issues.
            error: Access denied to Amazon S3 bucket
      properties:
        data:
          description: List of health events.
          items:
            $ref: '#/components/schemas/HealthEvent'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    HealthEvent:
      example:
        eventId: e801dc7d-f483-46e9-bcc9-410f08f96497
        severityLevel: severityLevel
        resourceIdentity:
          name: S3 Source, Scheduled View name.
          id: C03E086C137F38B4
          type: Collector
        eventTime: 2000-01-23T04:56:07.000+00:00
        eventName: InstalledCollectorOffline
        subsystem: subsystem
        details:
          trackerId: trackerId
          description: S3 collection is not working as expected because of access
            issues.
          error: Access denied to Amazon S3 bucket
      properties:
        eventId:
          description: The unique identifier of the event.
          example: e801dc7d-f483-46e9-bcc9-410f08f96497
          type: string
        eventName:
          description: The name of the event.
          example: InstalledCollectorOffline
          type: string
        details:
          $ref: '#/components/schemas/TrackerIdentity'
        resourceIdentity:
          $ref: '#/components/schemas/ResourceIdentity'
        eventTime:
          description: Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: date-time
          type: string
        subsystem:
          description: The product area of the event.
          type: string
        severityLevel:
          description: The criticality of the event. It is either `Error` or `Warning`
          type: string
      required:
      - details
      - eventId
      - eventName
      - eventTime
      - resourceIdentity
      - severityLevel
      - subsystem
      type: object
    ResourceIdentities:
      example:
        data:
        - name: S3 Source, Scheduled View name.
          id: C03E086C137F38B4
          type: Collector
        - name: S3 Source, Scheduled View name.
          id: C03E086C137F38B4
          type: Collector
      properties:
        data:
          description: A list of the resources.
          items:
            $ref: '#/components/schemas/ResourceIdentity'
          type: array
      required:
      - data
      type: object
    ListArchiveJobsResponse:
      example:
        next: next
        data:
        - null
        - null
      properties:
        data:
          description: List of Archive Jobs.
          items:
            $ref: '#/components/schemas/ArchiveJob'
          type: array
        next:
          description: Next continuation token.
          type: string
      required:
      - data
      type: object
    ArchiveJob:
      allOf:
      - $ref: '#/components/schemas/CreateArchiveJobRequest'
      - $ref: '#/components/schemas/ArchiveJob_allOf'
      type: object
    CreateArchiveJobRequest:
      example:
        name: name
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: The name of the ingestion job.
          maxLength: 128
          minLength: 1
          type: string
        startTime:
          description: The starting timestamp of the ingestion job.
          format: date-time
          type: string
        endTime:
          description: The ending timestamp of the ingestion job.
          format: date-time
          type: string
      required:
      - endTime
      - name
      - startTime
      type: object
    ListArchiveJobsCount:
      example:
        data:
        - sourceId: 000000000606C009
          scanning: 1
          ingesting: 2
          pending: 4
          failed: 5
          succeeded: 20
        - sourceId: 000000000606C009
          scanning: 1
          ingesting: 2
          pending: 4
          failed: 5
          succeeded: 20
      properties:
        data:
          description: List of archive sources with count of jobs having various statuses.
          items:
            $ref: '#/components/schemas/ArchiveJobsCount'
          type: array
      required:
      - data
      type: object
    ArchiveJobsCount:
      example:
        sourceId: 000000000606C009
        scanning: 1
        ingesting: 2
        pending: 4
        failed: 5
        succeeded: 20
      properties:
        sourceId:
          description: Identifier for the archive source.
          example: 000000000606C009
          type: string
        pending:
          description: The total number of archive jobs with pending status for the
            archive source.
          example: 4
          format: int64
          type: integer
        scanning:
          description: The total number of archive jobs with scanning status for the
            archive source.
          example: 1
          format: int64
          type: integer
        ingesting:
          description: The total number of archive jobs with ingesting status for
            the archive source.
          example: 2
          format: int64
          type: integer
        failed:
          description: The total number of archive jobs with failed status for the
            archive source.
          example: 5
          format: int64
          type: integer
        succeeded:
          description: The total number of archive jobs with succeeded status for
            the archive source.
          example: 20
          format: int64
          type: integer
      required:
      - failed
      - ingesting
      - pending
      - scanning
      - sourceId
      - succeeded
      type: object
    LogSearchEstimatedUsageRequest:
      allOf:
      - $ref: '#/components/schemas/LogSearchQueryTimeRangeBase'
      - $ref: '#/components/schemas/LogSearchEstimatedUsageRequest_allOf'
    LogSearchEstimatedUsageDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchEstimatedUsageRequest'
      - $ref: '#/components/schemas/LogSearchEstimatedUsageDefinition_allOf'
    EstimatedUsageDetails:
      properties:
        dataScannedInBytes:
          description: Amount of data scanned in bytes, to run the query.
          example: 114086541
          format: int64
          type: integer
      type: object
    LogSearchEstimatedUsageRequestV2:
      allOf:
      - $ref: '#/components/schemas/LogSearchQueryTimeRangeBaseExceptParsingMode'
      - $ref: '#/components/schemas/LogSearchEstimatedUsageRequest_allOf'
    LogSearchEstimatedUsageByTierDefinition:
      allOf:
      - $ref: '#/components/schemas/LogSearchEstimatedUsageRequestV2'
      - $ref: '#/components/schemas/LogSearchEstimatedUsageByTierDefinition_allOf'
    EstimatedUsageDetailsWithTier:
      properties:
        tier:
          description: Name of the data tier. Supported Values are Continuous, Frequent,
            Infrequent
          example: Continuous
          type: string
        dataScannedInBytes:
          description: Amount of data scanned in bytes, to run the query.
          example: 114086541
          format: int64
          type: integer
      type: object
    DashboardRequest:
      example:
        layout:
          layoutStructures:
          - key: panelPANE-3DC454FD977E2A46
            structure: '{\"height\":5,\"width\":9,\"x\":0,\"y\":0}'
          - key: panelPANE-3DC454FD977E2A46
            structure: '{\"height\":5,\"width\":9,\"x\":0,\"y\":0}'
          layoutType: Grid
        topologyLabelMap:
          service:
          - kube-scheduler
          - kube-dns
        variables:
        - hideFromUI: false
          allowMultiSelect: false
          displayName: Source Host
          defaultValue: default_value
          sourceDefinition:
            variableSourceType: MetadataVariableSourceDefinition
          valueType: Any
          name: _sourceHost
          includeAllOption: true
          id: id
        - hideFromUI: false
          allowMultiSelect: false
          displayName: Source Host
          defaultValue: default_value
          sourceDefinition:
            variableSourceType: MetadataVariableSourceDefinition
          valueType: Any
          name: _sourceHost
          includeAllOption: true
          id: id
        hierarchies:
        - Kubernetes Node View
        refreshInterval: 30
        panels:
        - keepVisualSettingsConsistentWithParent: true
          visualSettings: '{\"general\":{\"type\":\"column\"}'
          id: 2F7D449E3D511066
          title: This panel shows memory usage for your kubernetes pod.
          panelType: SumoSearchPanel
          key: panelca6280e4a75fca45
        - keepVisualSettingsConsistentWithParent: true
          visualSettings: '{\"general\":{\"type\":\"column\"}'
          id: 2F7D449E3D511066
          title: This panel shows memory usage for your kubernetes pod.
          panelType: SumoSearchPanel
          key: panelca6280e4a75fca45
        domain: aws
        description: A view of pods, namespaces and nodes of your cluster.
        theme: light
        title: Kubernetes Dashboard
        folderId: 000000000C1C17C6
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      properties:
        title:
          description: Title of the dashboard.
          example: Kubernetes Dashboard
          maxLength: 255
          minLength: 1
          type: string
        description:
          description: Description of the dashboard.
          example: A view of pods, namespaces and nodes of your cluster.
          type: string
        folderId:
          description: |
            The identifier of the folder to save the dashboard in. By default it is saved in your personal folder.
          example: 000000000C1C17C6
          type: string
        topologyLabelMap:
          $ref: '#/components/schemas/TopologyLabelMap'
        domain:
          default: ""
          description: If set denotes that the dashboard concerns a given domain (e.g.
            `aws`, `k8s`, `app`).
          example: aws
          type: string
        hierarchies:
          default: []
          description: If set to non-empty array denotes that the dashboard concerns
            given hierarchies.
          example:
          - Kubernetes Node View
          items:
            type: string
          maxItems: 20
          type: array
        refreshInterval:
          description: |
            Interval of time (in seconds) to automatically refresh the dashboard. A value of 0 means we never automatically refresh the dashboard. Allowed values are `0`, `30`, `60`, 120`, `300`, `900`, `3600`, `86400`.
          example: 30
          format: int32
          type: integer
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        panels:
          description: Panels in the dashboard.
          items:
            $ref: '#/components/schemas/Panel'
          type: array
        layout:
          $ref: '#/components/schemas/Layout'
        variables:
          description: Variables to apply to the panels.
          items:
            $ref: '#/components/schemas/Variable'
          type: array
        theme:
          default: Light
          description: Theme for the dashboard. Either `Light` or `Dark`.
          example: light
          pattern: ^(light|dark|Light|Dark)$
          type: string
          x-pattern-message: Must be `Light`, or `Dark`
      required:
      - timeRange
      - title
      type: object
    Dashboard:
      allOf:
      - $ref: '#/components/schemas/DashboardRequest'
      - $ref: '#/components/schemas/Dashboard_allOf'
    MonitorUsageInfo:
      description: The usage info of logs and metrics monitors.
      items:
        $ref: '#/components/schemas/MonitorUsage'
      type: array
    MonitorUsage:
      description: The usage info of monitors.
      properties:
        monitorType:
          description: The type of monitor usage info (Logs or Metrics).
          enum:
          - Logs
          - Metrics
          example: Logs
          type: string
        usage:
          description: Current number of active Logs/Metrics monitors.
          example: 100
          type: integer
        limit:
          description: The limit of active Logs/Metrics monitors.
          example: 100
          type: integer
        total:
          description: The total number of monitors created. (Including both active
            and disabled Logs/Metrics monitors)
          example: 100
          type: integer
    MonitorQueries:
      description: Queries to be validated.
      properties:
        monitorType:
          description: |-
            The type of monitor. Valid values:
              1. `Logs`: A logs query monitor.
              2. `Metrics`: A metrics query monitor.
          example: Logs
          pattern: ^(Logs|Metrics)$
          type: string
          x-pattern-message: should be either 'Logs' or 'Metrics'
        timeRange:
          description: The relative time range of the monitor.
          example: 15m
          type: string
        queries:
          description: Queries to be validated.
          items:
            $ref: '#/components/schemas/UnvalidatedMonitorQuery'
          type: array
      required:
      - monitorType
      - queries
      - timeRange
      type: object
    UnvalidatedMonitorQuery:
      description: A search query.
      properties:
        rowId:
          description: The unique identifier of the row. Defaults to sequential capital
            letters, `A`, `B`, `C`, etc.
          example: A
          type: string
        query:
          description: The logs or metrics query that defines the stream of data the
            monitor runs on.
          example: _sourceCategory=search error | timeslice 1m | count by _timeslice
            | outlier _count window=5,threshold=3,consecutive=2,direction=+
          type: string
      required:
      - query
      - rowId
      type: object
    MonitorQueriesValidationResult:
      description: Validation result for the monitor queries.
      properties:
        isValid:
          description: Whether or not if queries are valid.
          example: false
          type: boolean
        message:
          default: ""
          description: Message from validation.
          example: Field fieldName not found, please check the spelling and try again.
          type: string
      type: object
    QueriesParametersResult:
      description: Queries validation and extracted parameters result.
      properties:
        isValid:
          description: Whether or not if queries are valid.
          example: false
          type: boolean
        errors:
          default: []
          description: Error messages from validation.
          example:
          - Field fieldName not found, please check the spelling and try again.
          items:
            type: string
          type: array
        logsOutlier:
          $ref: '#/components/schemas/LogsOutlier'
        metricsOutlier:
          $ref: '#/components/schemas/MetricsOutlier'
      type: object
    LogsOutlier:
      description: The parameters extracted from the logs outlier query.
      properties:
        trimmedQuery:
          description: The query string after trimming out the outlier clause.
          example: _sourceCategory=search error | timeslice 1m | count by _timeslice
          type: string
        window:
          default: 10
          description: Sets the trailing number of data points to calculate mean and
            sigma.
          example: 15
          format: int64
          type: integer
        consecutive:
          default: 1
          description: Sets the required number of consecutive indicator data points
            (outliers) to trigger a violation.
          example: 3
          format: int64
          type: integer
        direction:
          description: |-
            Specifies which direction should trigger violations. Valid values:
              1. `Both`: Both positive and negative deviations
              2. `Up`: Positive deviations only
              3. `Down`: Negative deviations only
            example: "Up" pattern: "^(Both|Up|Down)$" default: "Both" x-pattern-message: "should be one of the following: 'Both', 'Up', 'Down'"
          type: string
        threshold:
          default: 3.0
          description: Sets the number of standard deviations for calculating violations.
          example: 10.0
          format: double
          type: number
        field:
          description: The name of the field that the trigger condition will alert
            on.
          example: _count
          type: string
      type: object
    OutlierDirection:
      description: |-
        Specifies which direction should trigger violations. Valid values:
          1. `Both`: Both positive and negative deviations
          2. `Up`: Positive deviations only
          3. `Down`: Negative deviations only
        example: "Up" pattern: "^(Both|Up|Down)$" default: "Both" x-pattern-message: "should be one of the following: 'Both', 'Up', 'Down'"
      type: string
    MetricsOutlier:
      description: The parameters extracted from the metrics outlier query.
      properties:
        trimmedQuery:
          description: The query string after trimming out the outlier clause.
          example: _sourceHost=prod-search-1 metric=CPU_User
          type: string
        baselineWindow:
          default: 5m
          description: The time range used to compute the baseline.
          example: 10m
          type: string
        baselineTimeRangeWindow:
          $ref: '#/components/schemas/ResolvableTimeRange'
        direction:
          description: |-
            Specifies which direction should trigger violations. Valid values:
              1. `Both`: Both positive and negative deviations
              2. `Up`: Positive deviations only
              3. `Down`: Negative deviations only
            example: "Up" pattern: "^(Both|Up|Down)$" default: "Both" x-pattern-message: "should be one of the following: 'Both', 'Up', 'Down'"
          type: string
        threshold:
          default: 3.0
          description: How much should the indicator be different from the baseline
            for each datapoint.
          example: 10.0
          format: double
          type: number
      type: object
    MonitorQuery:
      description: A search query.
      properties:
        rowId:
          description: The unique identifier of the row. Defaults to sequential capital
            letters, `A`, `B`, `C`, etc.
          example: A
          type: string
        query:
          description: The logs or metrics query that defines the stream of data the
            monitor runs on.
          example: _sourceCategory=search error
          type: string
      required:
      - query
      - rowId
      type: object
    SeriesData:
      description: The data for visualizing monitor chart.
      properties:
        name:
          description: Name of the series.
          example: monitor-manager-cpu-1
          type: string
        dataPoints:
          description: Data points of the series.
          items:
            $ref: '#/components/schemas/DataPoint'
          type: array
        seriesAxisRange:
          $ref: '#/components/schemas/SeriesAxisRange'
        aggregateInfo:
          $ref: '#/components/schemas/VisualAggregateData'
        seriesMetadata:
          $ref: '#/components/schemas/SeriesMetadata'
      required:
      - dataPoints
      - name
      - seriesAxisRange
      type: object
    DataPoint:
      description: Data for visualizing monitor chart.
      discriminator:
        propertyName: dataPointType
      properties:
        dataPointType:
          description: Type of the data point.
          example: OutlierSeriesData
          pattern: ^(OutlierSeriesData|StaticSeriesData)$
          type: string
      type: object
    SeriesAxisRange:
      description: The axis limitation for chart data.
      properties:
        x:
          $ref: '#/components/schemas/AxisRange'
        y:
          $ref: '#/components/schemas/AxisRange'
      type: object
    AxisRange:
      description: The min and max of the x,y axis of the monitor chart.
      properties:
        min:
          description: minimum limit of x or y axis.
          example: 50
          format: int64
          type: integer
        max:
          description: maximum limit of x or y axis.
          example: 100
          format: int64
          type: integer
      type: object
    SeriesMetadata:
      description: The metadata of time series for chart.
      properties:
        rowId:
          description: Row ID of the query this time series belongs to.
          example: A
          type: string
        dimensions:
          description: Dimensions for the time series.
          items:
            $ref: '#/components/schemas/DimensionKeyValue'
          type: array
      type: object
    DimensionKeyValue:
      description: The key and value pair for each metric dimension.
      properties:
        key:
          description: The key of the metric dimension.
          example: region
          type: string
        value:
          description: The value of the metric dimension.
          example: us-east-1
          type: string
      type: object
    LogSearchQuery:
      description: Query for which to get log fields.
      properties:
        queryString:
          description: Query string for which to get log fields.
          example: _sourceCategory=service
          type: string
      required:
      - queryString
      type: object
    GroupFieldsRequest:
      description: Monitor type and queries
      properties:
        queries:
          description: All queries from the monitor.
          items:
            $ref: '#/components/schemas/MonitorQuery'
          type: array
          uniqueItems: true
        monitorType:
          description: |-
            The type of monitor. Valid values:
              1. `Logs`: A logs query monitor.
              2. `Metrics`: A metrics query monitor.
          example: Logs
          pattern: ^(Logs|Metrics)$
          type: string
      required:
      - monitorType
      - queries
      type: object
    GroupFieldsResponse:
      description: Group fields for the monitor
      properties:
        groupFields:
          description: List of group fields
          items:
            type: string
          type: array
      required:
      - groupFields
      type: object
    DisableMonitorResponse:
      description: Response for disabling monitors.
      example:
        warnings:
        - code: content:not_found
          message: Monitor id=0000000000000001 not found.
        - code: content:not_found
          message: Monitor id=0000000000000001 not found.
        monitors: {}
      properties:
        monitors:
          additionalProperties:
            $ref: '#/components/schemas/MonitorsLibraryMonitorResponse'
          description: A map between an identifier and its monitor.
          type: object
        warnings:
          description: Warnings from the operation.
          items:
            $ref: '#/components/schemas/DisableMonitorWarning'
          type: array
      type: object
    DisableMonitorWarning:
      description: Warning object from the operation providing details such as when
        a given monitor to disable does not exist.
      example:
        code: content:not_found
        message: Monitor id=0000000000000001 not found.
      properties:
        code:
          description: A code for the warning message.
          example: content:not_found
          type: string
        message:
          description: A short message with details about the warning.
          example: Monitor id=0000000000000001 not found.
          type: string
      type: object
    ListAlertsLibraryAlertResponse:
      description: List of Alerts.
      items:
        $ref: '#/components/schemas/AlertsLibraryAlertResponse'
      type: array
    RelatedAlertsLibraryAlertResponse:
      description: List of related Alerts.
      properties:
        data:
          items:
            $ref: '#/components/schemas/RelatedAlert'
          type: array
      type: object
    RelatedAlert:
      description: An alert and how it is related to the given alert
      properties:
        alert:
          $ref: '#/components/schemas/AlertsLibraryAlertResponse'
        relations:
          description: Tags describing the relationship between the two alerts.
          items:
            $ref: '#/components/schemas/RelationTypeTag'
          type: array
      type: object
    RelationTypeTag:
      description: |-
        The nature of the relationship between alerts. Valid values:
          1. `Time`: Alerts are related by their time of creation.
          2. `Entity`: Alerts are related by the entities linked to their queries.
      example: Time
      pattern: ^(Time|Entity)$
      type: string
      x-pattern-message: should be either 'Time' or 'Entity'
    AlertsListPageResponse:
      description: List of Alert list page objects.
      properties:
        data:
          items:
            $ref: '#/components/schemas/AlertsListPageObject'
          type: array
      type: object
    AlertsListPageObject:
      description: Alert list page object.
      properties:
        id:
          description: Identifier of the alert.
          example: 000000000000000A
          type: string
        name:
          description: Name of the alert.
          example: CPU Total above 90
          type: string
        severity:
          description: |-
            The severity of the Alert. Valid values:
              1. `Critical`
              2. `Warning`
              3. `MissingData`
          example: Warning
          pattern: ^(Critical|Warning|MissingData)$
          type: string
          x-pattern-message: should be either 'Critical', 'Warning' or 'MissingData'
        status:
          description: |-
            The status of the Alert. Valid values:
              1. `Active`
              2. `Resolved`
          example: Active
          pattern: ^(Active|Resolved)$
          type: string
          x-pattern-message: should be either 'Active' or 'Resolved'
        entitiesInfo:
          items:
            $ref: '#/components/schemas/AlertEntityInfo'
          type: array
        violationCount:
          description: The number of unique result groups that have met the alert
            condition.
          example: "2"
          type: string
        lastViolation:
          description: The condition from the last alert violation.
          example: greater than 90.0 for all of the last 5 minutes
          type: string
        duration:
          description: The current duration of the alert.
          example: 2 hours
          type: string
        createdAt:
          description: The creation time of the alert.
          example: 11:11 AM August 25, 2021
          type: string
        lastUpdated:
          description: The time when this alert was updated with the most recent violation.
          example: 1:11 PM August 25, 2021
          type: string
      type: object
    AlertEntityInfo:
      description: An entity's name and Id.
      properties:
        entityId:
          description: Identifier of the entity.
          example: f11046564fc9fd093f92fdca24e2823f
          type: string
        entityName:
          description: Name of the entity.
          example: _sourceCategory=worker _sourceHost=node-1
          type: string
      type: object
    AlertChartDataResult:
      description: Response for alert response chart data visualization.
      properties:
        series:
          description: List of time series of the alert chart data.
          items:
            $ref: '#/components/schemas/SeriesData'
          type: array
        metadata:
          $ref: '#/components/schemas/AlertChartMetadata'
      required:
      - metadata
      - series
      type: object
    AlertChartMetadata:
      description: The metadata timestamps of alert chart data
      properties:
        abnormalityStartTime:
          description: The time stamp at which abnomarlity started.
          example: 1630017549842
          format: int64
          type: integer
        abnormalityEndTime:
          description: The time stamp at which abnomarlity ended.
          example: 1630017549842
          format: int64
          type: integer
        evaluationDelay:
          description: The delay duration for evaluating the monitor (relative to
            current time). The timerange of monitor will be shifted in the past by
            this delay time.
          example: 1630017549842
          format: int64
          type: integer
        alertCreatedAt:
          description: The time stamp at which the alert response page is created.
          example: 1630017549842
          format: int64
          type: integer
        alertResolvedAt:
          description: The time stamp at which the alert response page is resolved.
          example: 1630017549842
          format: int64
          type: integer
      type: object
    ActiveCount:
      description: The number of currently active alerts.
      example: 205
      format: int32
      type: integer
    PasswordPolicy:
      description: Password Policy
      example:
        accountLockoutDurationInMins: 30
        minLength: 8
        accountLockoutThreshold: 6
        rememberMfa: true
        mustContainLowercase: true
        minUniquePasswords: 10
        mustContainUppercase: true
        failedLoginResetDurationInMins: 10
        mustContainDigits: true
        mustContainSpecialChars: true
        maxPasswordAgeInDays: 365
        requireMfa: false
        maxLength: 128
      properties:
        minLength:
          default: 8
          description: The minimum length of the password.
          example: 8
          format: int32
          maximum: 128
          minimum: 8
          type: integer
        maxLength:
          default: 128
          description: The maximum length of the password. (Setting this to any value
            other than 128 is no longer supported; this field may be deprecated in
            the future.)
          example: 128
          format: int32
          maximum: 128
          minimum: 128
          type: integer
        mustContainLowercase:
          default: true
          description: If the password must contain lower case characters.
          example: true
          type: boolean
        mustContainUppercase:
          default: true
          description: If the password must contain upper case characters.
          example: true
          type: boolean
        mustContainDigits:
          default: true
          description: If the password must contain digits.
          example: true
          type: boolean
        mustContainSpecialChars:
          default: true
          description: If the password must contain special characters.
          example: true
          type: boolean
        maxPasswordAgeInDays:
          default: 365
          description: Maximum number of days that a password can be used before user
            is required to change it. Put -1 if the user should not have to change
            their password.
          example: 365
          format: int32
          maximum: 365
          minimum: -1
          type: integer
        minUniquePasswords:
          default: 10
          description: The minimum number of unique new passwords that a user must
            use before an old password can be reused.
          example: 10
          format: int32
          maximum: 10
          minimum: 4
          type: integer
        accountLockoutThreshold:
          default: 6
          description: Number of failed login attempts allowed before account is locked-out.
          example: 6
          format: int32
          maximum: 10
          minimum: 3
          type: integer
        failedLoginResetDurationInMins:
          default: 10
          description: The duration of time in minutes that must elapse from the first
            failed login attempt after which failed login count is reset to 0.
          example: 10
          format: int32
          maximum: 10
          minimum: 1
          type: integer
        accountLockoutDurationInMins:
          default: 30
          description: The duration of time in minutes that a locked-out account remained
            locked before getting unlocked automatically.
          example: 30
          format: int32
          maximum: 120
          minimum: 30
          type: integer
        requireMfa:
          default: false
          description: If MFA should be required to log in. By default, this field
            is set to `false`.
          example: false
          type: boolean
        rememberMfa:
          default: true
          description: If MFA should be remembered on the browser.
          example: true
          type: boolean
      type: object
    CseInsightConfidenceRequest:
      description: CSE insight JSON object.
      properties:
        cseInsight:
          description: List of CSE Insight Created logs for which the confidence score
            should be calculated.
          example: '"[{\"timestamp\":\"1605562085024\",\"type\":\"event\",\"name\":\"insight_closed\",\"tenant_hash\":\"d130a603dea563686c911aa5d3f196881b1e6e7a\",\"created\":1605550459107,\"id\":\"ef444d0e-b1f0-351e-aae6-b608d2a4769c\",\"insight_threshold\":12,\"insight_lookback_days\":14,\"resolution\":\"Resolved\",\"source\":\"RULE\",\"entity_id\":\"2254232b-d7b4-567b-b4ce-61466b79e491\",\"entity_type\":\"username\",\"rule_ids\":[\"MATCH-U00018\"],\"mitre_tactics\":[\"Initial
            Access\"],\"signals\":[{\"rule_id\":\"MATCH-U00018\",\"mitre_tactic\":\"Initial
            Access\",\"timestamp\":\"1605549391000\",\"name_hash\":\"091d66fc35b6ad361d7525238d37319b06ff0bd5\",\"severity\":5,\"vendors\":[\"Proofpoint\"],\"products\":[\"Targeted
            Attack Protection\"],\"vendor_products\":[\"Proofpoint Targeted Attack
            Protection\"],\"object_types\":[\"Email\"]}]}]"'
          type: string
      required:
      - cseInsight
      type: object
    ConfidenceScoreResponse:
      description: CSE insight confidence score.
      properties:
        confidenceScore:
          description: List of confidence scores to the CSE Insights.
          type: string
      required:
      - confidenceScore
      type: object
    SignalsRequest:
      description: Signal Request object.
      properties:
        signalTypes:
          description: |
            A list of signal types to compute. Can be `LogFluctuation`, `DimensionalityExplanation`, `GisBenchmark` or `Anomalies`
          items:
            pattern: ^(LogFluctuation|DimensionalityExplanation|GisBenchmark|Anomalies)$|^$
            type: string
            x-pattern-message: Must be `LogFluctuation`, `DimensionalityExplanation`,
              `GisBenchmark` or `Anomalies`
          maxItems: 1
          minItems: 1
          type: array
        signalContext:
          $ref: '#/components/schemas/SignalContext'
      required:
      - signalContext
      - signalTypes
      type: object
    SignalContext:
      discriminator:
        mapping:
          Alert: '#/components/schemas/AlertSignalContext'
        propertyName: contextType
      properties:
        contextType:
          description: Type of context of the request object.
          pattern: ^(Alert)$|^$
          type: string
          x-pattern-message: Must be `Alert`
      required:
      - contextType
      type: object
    SignalsJobResult:
      description: The job result containing the job status, computed signals and
        any warnings.
      properties:
        isComplete:
          description: Whether the signal computing job finished.
          example: true
          type: boolean
        signals:
          description: Sequence of computed signals.
          items:
            $ref: '#/components/schemas/SignalsResponse'
          type: array
        warnings:
          description: List of warnings while computing signals.
          items:
            $ref: '#/components/schemas/WarningDetails'
          type: array
      required:
      - isComplete
      - signals
      - warnings
      type: object
    SignalsResponse:
      description: Signal response object.
      properties:
        signalType:
          description: |
            The type of the signal to compute. Can be `LogFluctuation`, `DimensionalityExplanation`, `GisBenchmark` or `Anomalies`
          pattern: ^(LogFluctuation|DimensionalityExplanation|GisBenchmark|Anomalies)$|^$
          type: string
          x-pattern-message: Must be `LogFluctuation`, `DimensionalityExplanation`,
            `GisBenchmark` or `Anomalies`
        signalId:
          description: The id for the signal result in hex format.
          example: 00000000F5000634
          type: string
        startTime:
          description: Start time of the signal.
          format: date-time
          type: string
        endTime:
          description: End time of the signal.
          format: date-time
          type: string
        summary:
          description: Description of the payload.
          example: Variation in the logs
          type: string
        payload:
          description: Json string for computed signal.
          type: string
        openInQueries:
          description: Raw data queries for the computed signal.
          items:
            $ref: '#/components/schemas/OpenInQuery'
          type: array
      required:
      - endTime
      - openInQueries
      - payload
      - signalId
      - signalType
      - startTime
      - summary
      type: object
    OpenInQuery:
      description: Raw data query for the computed signal.
      properties:
        query:
          $ref: '#/components/schemas/Query'
        startTime:
          description: Start time of the query.
          format: date-time
          type: string
        endTime:
          description: End time of the query.
          format: date-time
          type: string
      required:
      - endTime
      - query
      - startTime
      type: object
    WarningDetails:
      description: Warning while computing signals.
      properties:
        code:
          description: Warning code.
          type: string
        message:
          description: Warning message.
          type: string
        detail:
          description: Details related to warning.
          type: string
      required:
      - code
      - detail
      - message
      type: object
    MetricsQueryRequest:
      description: A list of metrics queries to run along with the time range for
        the query.
      example:
        queries:
        - timeshift: -3600000
          query: metric=CPU_Idle
          rowId: A
          quantization: 60000
          rollup: Avg
        - timeshift: -3600000
          query: metric=CPU_Idle
          rowId: A
          quantization: 60000
          rollup: Avg
        timeRange:
          type: BeginBoundedTimeRange
          from:
            type: RelativeTimeRangeBoundary
            relativeTime: -15m
      properties:
        queries:
          description: A list of metrics queries.
          items:
            $ref: '#/components/schemas/MetricsQueryRow'
          minItems: 1
          type: array
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
      required:
      - queries
      - timeRange
      type: object
    MetricsQueryRow:
      example:
        timeshift: -3600000
        query: metric=CPU_Idle
        rowId: A
        quantization: 60000
        rollup: Avg
      properties:
        rowId:
          description: Row id for the query row, A to Z letter.
          example: A
          pattern: '[A-Z]'
          type: string
          x-pattern-message: Row id must be one character long and must be an upper
            case letter between A and Z
        query:
          description: |-
            A metric query consists of a metric, one or more filters and optionally, one or more [Metrics Operators](https://help.sumologic.com/?cid=10144). Strictly speaking, both filters and operators are optional.

            Most of the [Metrics Operators](https://help.sumologic.com/?cid=10144) are allowed in the query string except `fillmissing`, `outlier`, `quantize` and `timeshift`.

              * `fillmissing`: Not supported in API.
              * `outlier`: Not supported in API.
              * `quantize`: Only supported through `quantization` param.
              * `timeshift`: Only supported through `timeshift` param.


            In practice, your metric queries will almost always contain filters that narrow the scope of your query. For more information about the query language see [Metrics Queries](https://help.sumologic.com/?cid=1079).
          example: metric=CPU_Idle
          maxLength: 1500
          minLength: 3
          type: string
        quantization:
          description: Segregates time series data by time period. This allows you
            to create aggregated results in buckets of fixed intervals (for example,
            5-minute intervals). The value is in milliseconds.
          example: 60000
          format: int64
          type: integer
        rollup:
          description: We use the term rollup to refer to the aggregation function
            Sumo Logic uses when quantizing metrics. Can be `Avg`, `Sum`, `Min`, `Max`,
            `Count` or `None`.
          example: Avg
          pattern: ^(Count|Min|Max|Sum|Avg|None)$|^$
          type: string
          x-pattern-message: Must be `Avg`, `Sum`, `Min`, `Max`, `Count` or `None`
        timeshift:
          description: Shifts the time series from your metrics query by the specified
            amount of time. This can help when comparing a time series across multiple
            time periods. Specified as a signed duration in milliseconds.
          example: -3600000
          format: int64
          type: integer
      required:
      - query
      - rowId
      type: object
    MetricsQueryResponse:
      example:
        queryResult:
        - timeSeriesList:
            timeSeries:
            - metricDefinition:
                metric: CPU_Total
                dimensions:
                  _sourceHost: us2-alert-1
                  _sourceCategory: alert
              points:
                timestamps:
                - 1623258710000
                - 1623258710000
                values:
                - 1.5
                - 1.5
            - metricDefinition:
                metric: CPU_Total
                dimensions:
                  _sourceHost: us2-alert-1
                  _sourceCategory: alert
              points:
                timestamps:
                - 1623258710000
                - 1623258710000
                values:
                - 1.5
                - 1.5
            unit: 1/second
            timeShiftLabel: -1h
          rowId: A
        - timeSeriesList:
            timeSeries:
            - metricDefinition:
                metric: CPU_Total
                dimensions:
                  _sourceHost: us2-alert-1
                  _sourceCategory: alert
              points:
                timestamps:
                - 1623258710000
                - 1623258710000
                values:
                - 1.5
                - 1.5
            - metricDefinition:
                metric: CPU_Total
                dimensions:
                  _sourceHost: us2-alert-1
                  _sourceCategory: alert
              points:
                timestamps:
                - 1623258710000
                - 1623258710000
                values:
                - 1.5
                - 1.5
            unit: 1/second
            timeShiftLabel: -1h
          rowId: A
        errors:
          id: IUUQI-DGH5I-TJ045
          errors:
          - code: auth:password_too_short
            message: Your password was too short.
          - code: auth:password_character_classes
            message: Your password did not contain any non-alphanumeric characters
      properties:
        queryResult:
          description: A list of the time series returned by metric query.
          items:
            $ref: '#/components/schemas/TimeSeriesRow'
          type: array
        errors:
          $ref: '#/components/schemas/ErrorResponse'
      required:
      - errors
      - queryResults
      type: object
    TimeSeriesRow:
      example:
        timeSeriesList:
          timeSeries:
          - metricDefinition:
              metric: CPU_Total
              dimensions:
                _sourceHost: us2-alert-1
                _sourceCategory: alert
            points:
              timestamps:
              - 1623258710000
              - 1623258710000
              values:
              - 1.5
              - 1.5
          - metricDefinition:
              metric: CPU_Total
              dimensions:
                _sourceHost: us2-alert-1
                _sourceCategory: alert
            points:
              timestamps:
              - 1623258710000
              - 1623258710000
              values:
              - 1.5
              - 1.5
          unit: 1/second
          timeShiftLabel: -1h
        rowId: A
      properties:
        rowId:
          description: Row id for the query row as specified in the request.
          example: A
          type: string
        timeSeriesList:
          $ref: '#/components/schemas/TimeSeriesList'
      required:
      - rowId
      - timeSeriesList
      type: object
    TimeSeriesList:
      example:
        timeSeries:
        - metricDefinition:
            metric: CPU_Total
            dimensions:
              _sourceHost: us2-alert-1
              _sourceCategory: alert
          points:
            timestamps:
            - 1623258710000
            - 1623258710000
            values:
            - 1.5
            - 1.5
        - metricDefinition:
            metric: CPU_Total
            dimensions:
              _sourceHost: us2-alert-1
              _sourceCategory: alert
          points:
            timestamps:
            - 1623258710000
            - 1623258710000
            values:
            - 1.5
            - 1.5
        unit: 1/second
        timeShiftLabel: -1h
      properties:
        timeSeries:
          description: A list of timeseries returned by corresponding query.
          items:
            $ref: '#/components/schemas/TimeSeries'
          type: array
        unit:
          description: Unit of the query.
          example: 1/second
          type: string
        timeShiftLabel:
          description: Time shift value if specified in request in human readable
            format.
          example: -1h
          type: string
      required:
      - timeSeries
      type: object
    TimeSeries:
      example:
        metricDefinition:
          metric: CPU_Total
          dimensions:
            _sourceHost: us2-alert-1
            _sourceCategory: alert
        points:
          timestamps:
          - 1623258710000
          - 1623258710000
          values:
          - 1.5
          - 1.5
      properties:
        metricDefinition:
          $ref: '#/components/schemas/MetricDefinition'
        points:
          $ref: '#/components/schemas/Points'
      required:
      - metricDefinition
      - points
      type: object
    MetricDefinition:
      example:
        metric: CPU_Total
        dimensions:
          _sourceHost: us2-alert-1
          _sourceCategory: alert
      properties:
        metric:
          description: Name of the metric returning the timeseries.
          example: CPU_Total
          type: string
        dimensions:
          additionalProperties:
            type: string
          description: Metric dimensions / metadata related to each timeseries.
          example:
            _sourceHost: us2-alert-1
            _sourceCategory: alert
          type: object
      type: object
    Points:
      description: The `values` and `timestamps` are of the same length, and points
        are sorted by time ascending.
      example:
        timestamps:
        - 1623258710000
        - 1623258710000
        values:
        - 1.5
        - 1.5
      properties:
        timestamps:
          description: Array of timestamps of datapoints in milliseconds.
          items:
            example: 1623258710000
            format: int64
            type: integer
          type: array
        values:
          description: Array of values of datapoints corresponding to timestamp array.
          items:
            example: 1.5
            format: double
            type: number
          type: array
      required:
      - timestamps
      - values
      type: object
    IdToMonitorsLibraryBaseResponseMap:
      additionalProperties:
        $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
      type: object
    ListMonitorsLibraryItemWithPath:
      description: Multi-type list of types monitor or folder.
      items:
        $ref: '#/components/schemas/MonitorsLibraryItemWithPath'
      type: array
    MonitorsLibraryItemWithPath:
      properties:
        item:
          $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
        path:
          description: Path of the monitor or folder.
          example: /Monitors/SampleFolder/TestMonitor
          type: string
      required:
      - item
      - path
      type: object
    Path:
      example:
        path: path
        pathItems:
        - name: name
          id: id
        - name: name
          id: id
      properties:
        pathItems:
          description: Elements of the path.
          items:
            $ref: '#/components/schemas/PathItem'
          type: array
        path:
          description: String representation of the path.
          type: string
      required:
      - path
      - pathItems
      type: object
    PathItem:
      example:
        name: name
        id: id
      properties:
        id:
          description: Identifier of the path element.
          type: string
        name:
          description: Name of the path element.
          type: string
      required:
      - id
      - name
      type: object
    ContentCopyParams:
      example:
        name: name
        description: description
        parentId: parentId
      properties:
        parentId:
          description: Identifier of the parent folder to copy to.
          type: string
        name:
          description: Optionally provide a new name.
          type: string
        description:
          description: Optionally provide a new description.
          type: string
      required:
      - parentId
      type: object
    IdToAlertsLibraryBaseResponseMap:
      additionalProperties:
        $ref: '#/components/schemas/AlertsLibraryBaseResponse'
      type: object
    ListAlertsLibraryItemWithPath:
      description: Multi-type list of types alert or folder.
      items:
        $ref: '#/components/schemas/AlertsLibraryItemWithPath'
      type: array
    AlertsLibraryItemWithPath:
      properties:
        item:
          $ref: '#/components/schemas/AlertsLibraryBaseResponse'
        path:
          description: Path of the alert or folder.
          example: /Alerts/SampleFolder/TestAlert
          type: string
      required:
      - item
      - path
      type: object
    ConnectionType:
      description: Type of webhook connection. Valid values are `AWSLambda`, `Azure`,
        `Datadog`, `HipChat`, `NewRelic`, `Opsgenie`, `PagerDuty`, `Slack`, `MicrosoftTeams`,
        `ServiceNow`, `SumoCloudSOAR` and `Webhook`.
      pattern: ^(AWSLambda|Azure|Datadog|HipChat|PagerDuty|Slack|Webhook|NewRelic|Jira|Opsgenie|MicrosoftTeams|ServiceNow|SumoCloudSOAR)$
      type: string
      x-pattern-message: must be `AWSLambda`, `Azure`, `Datadog`, `HipChat`, `PagerDuty`,
        `Slack`, `Webhook`, `NewRelic`, `Jira`, `Opsgenie`, `MicrosoftTeams`, `ServiceNow`
        or `SumoCloudSOAR`
    OperatorData:
      description: The operator data for metrics query.
      example:
        operatorName: avg
        parameters:
        - key: aggregator
          value: max
        - key: operation
          value: ""
        - key: value
          value: 50
      properties:
        operatorName:
          description: The name of the metrics operator.
          example: avg
          type: string
        parameters:
          description: A list of operator parameters for the operator data.
          items:
            $ref: '#/components/schemas/OperatorParameter'
          type: array
      required:
      - operatorName
      - parameters
      type: object
    OperatorParameter:
      description: The operator parameter for operator data.
      example:
        key: aggregator
        value: max
      properties:
        key:
          description: The key of the operator parameter.
          example: operation
          type: string
        value:
          description: The value of the operator parameter.
          example: '>'
          type: string
      required:
      - key
      - value
      type: object
    TracesQueryData:
      description: The data format describing a basic traces query.
      properties:
        filters:
          description: A list of filters for the traces query.
          items:
            $ref: '#/components/schemas/TracesFilter'
          type: array
      required:
      - filters
      type: object
    TracesFilter:
      description: The filter for traces query.
      discriminator:
        propertyName: type
      properties:
        type:
          description: The type of the filter.
          example: FieldDescriptor
          pattern: ^(FieldDescriptor|DurationMetricDescriptor|NumericMetricDescriptor|CPCOfFilterDescriptor|MaxCPCOfFilterDescriptor|MaxCPCFilterDescriptor)$|^$
          type: string
          x-pattern-message: Must be `FieldDescriptor`, `DurationMetricDescriptor`,
            `NumericMetricDescriptor`, `CPCOfFilterDescriptor`, `MaxCPCOfFilterDescriptor`
            or `MaxCPCFilterDescriptor`
      required:
      - type
      type: object
    LinkedDashboard:
      properties:
        id:
          description: Identifier of the linked dashboard.
          example: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
          type: string
        relativePath:
          description: Relative path of the linked dashboard to the dashboard of the
            linking panel.
          example: ./subdirectory/LinkedDashboard
          type: string
        includeTimeRange:
          default: true
          description: Include time range from the current dashboard to the linked
            dashboard.
          example: true
          type: boolean
        includeVariables:
          default: true
          description: Include variables from the current dashboard to the linked
            dashboard.
          example: true
          type: boolean
      required:
      - id
      type: object
    VariableValuesData:
      description: Variable values, status, type and errors for the variable values
        search.
      properties:
        variableValues:
          description: Values for the variable.
          example:
          - myCluster
          items:
            type: string
          type: array
        status:
          $ref: '#/components/schemas/DashboardSearchStatus'
        variableType:
          description: The type of the variable.
          example: LogQueryVariableSourceDefinition
          pattern: ^(LogQueryVariableSourceDefinition|MetadataVariableSourceDefinition|CsvVariableSourceDefinition)$
          type: string
          x-pattern-message: Must be `LogQueryVariableSourceDefinition`, `MetadataVariableSourceDefinition`
            or `CsvVariableSourceDefinition`.
        valueType:
          default: Any
          description: The type of value of the variable. Allowed values are `String`
            and Any`. `String` considers as a single phrase and will wrap in double-quotes,
            `Any` is all characters.
          example: Any
          pattern: ^(String|Any)$
          type: string
          x-pattern-message: Only `String` and `Any` are allowed.
        errors:
          description: Generic errors returned by backend from downstream assemblies.
            More specific errors will be thrown in the future.
          items:
            $ref: '#/components/schemas/ErrorDescription'
          type: array
      required:
      - variableValues
      type: object
    ParameterAutoCompleteSyncDefinition:
      properties:
        autoCompleteType:
          description: |-
            The autocomplete parameter type. Supported values are:
              1. `SKIP_AUTOCOMPLETE`
              2. `CSV_AUTOCOMPLETE`
              3. `AUTOCOMPLETE_KEY`
              4. `VALUE_ONLY_AUTOCOMPLETE`
              5. `VALUE_ONLY_LOOKUP_AUTOCOMPLETE`
              6. `LABEL_VALUE_LOOKUP_AUTOCOMPLETE`
          type: string
        autoCompleteKey:
          description: The autocomplete key to be used to fetch autocomplete values.
          example: Ephemeral-3644138589235809747-1583470806220-parameter
          type: string
        autoCompleteValues:
          description: The array of values of the corresponding autocomplete parameter.
          items:
            $ref: '#/components/schemas/AutoCompleteValueSyncDefinition'
          type: array
        lookupFileName:
          description: The lookup file to use as a source for autocomplete values.
          type: string
        lookupLabelColumn:
          description: The column from the lookup file to use for autocomplete labels.
          type: string
        lookupValueColumn:
          description: The column from the lookup file to fill the actual value when
            a particular label is selected.
          type: string
      required:
      - autoCompleteType
      type: object
    AutoCompleteValueSyncDefinition:
      properties:
        label:
          description: The label of the autocomplete value.
          type: string
        value:
          description: The value of the autocomplete value.
          type: string
      required:
      - label
      - value
      type: object
    MetricsQuerySyncDefinition:
      properties:
        query:
          description: The text of a metrics query.
          type: string
        rowId:
          description: A label referring to the query; used if other metrics queries
            reference this one.
          type: string
      required:
      - query
      - rowId
      type: object
    ReportAutoParsingInfo:
      description: Auto-parsing information for the panel. This information tells
        us whether automatic field extraction from JSON log messages is enabled or
        not
      properties:
        mode:
          default: performance
          description: Can be `intelligent` or `performance`
          example: performance
          pattern: ^(intelligent|performance)$|^$
          type: string
      type: object
    MetricsSavedSearchQuerySyncDefinition:
      description: Definition of a metrics query.
      properties:
        rowId:
          description: Row id. All rows ids are represented by subsequent upper case
            letters starting with `A`.
          example: A
          type: string
        query:
          description: Metrics query.
          example: my_metric | avg
          type: string
      required:
      - query
      - rowId
      type: object
    ResourceIdentity:
      discriminator:
        mapping:
          Collector: '#/components/schemas/CollectorResourceIdentity'
          Source: '#/components/schemas/SourceResourceIdentity'
          IngestBudget: '#/components/schemas/IngestBudgetResourceIdentity'
          Organisation: '#/components/schemas/OrgIdentity'
          LogsToMetricsRule: '#/components/schemas/LogsToMetricsRuleIdentity'
        propertyName: type
      example:
        name: S3 Source, Scheduled View name.
        id: C03E086C137F38B4
        type: Collector
      properties:
        id:
          description: The unique identifier of the resource.
          example: C03E086C137F38B4
          type: string
        name:
          default: Unknown
          description: The name of the resource.
          example: S3 Source, Scheduled View name.
          type: string
        type:
          description: -> Resource type. Supported types are - `Collector`, `Source`,
            `IngestBudget` and `Organisation`.
          example: Collector
          type: string
      required:
      - id
      - type
      type: object
    TrackerIdentity:
      discriminator:
        propertyName: description
      example:
        trackerId: trackerId
        description: S3 collection is not working as expected because of access issues.
        error: Access denied to Amazon S3 bucket
      properties:
        trackerId:
          description: Name that uniquely identifies the health event. It focuses
            on what happened rather than why.
          type: string
        error:
          description: Description of the underlying reason for the event change.
          example: Access denied to Amazon S3 bucket
          type: string
        description:
          description: A more elaborate description of why the event occurred.
          example: S3 collection is not working as expected because of access issues.
          type: string
      required:
      - description
      - error
      - trackerId
      type: object
    DataIngestAffectedTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    S3CollectionErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    FileCollectionErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    AwsCloudWatchCollectionErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    AwsInventoryCollectionErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    CSEWindowsErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    CSEWindowsAccessErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    CSEWindowsSensorOutOfStorageTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    CSEWindowsParsingErrorTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    CSEWindowsExcessiveBacklogTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    MetricsMetadataKeyLengthLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataLimitsExceededTracker:
      discriminator:
        propertyName: eventType
      properties:
        eventType:
          description: Event type.
          type: string
      type: object
    MetricsMetadataValueLengthLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataKeyValuePairsLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    MetricsMetadataTotalMetadataSizeLimitExceededTracker:
      allOf:
      - $ref: '#/components/schemas/TrackerIdentity'
      - $ref: '#/components/schemas/MetricsMetadataLimitsExceededTracker'
    Action:
      description: The base class of all connection types.
      discriminator:
        propertyName: connectionType
      properties:
        connectionType:
          description: |-
            Connection type of the connection. Valid values:
              1.  `Email`
              2.  `AWSLambda`
              3.  `AzureFunctions`
              4.  `Datadog`
              5.  `HipChat`
              6.  `Jira`
              7.  `NewRelic`
              8.  `Opsgenie`
              9.  `PagerDuty`
              10. `Slack`
              11. `MicrosoftTeams`
              12. `ServiceNow`
              13. `SumoCloudSOAR`
              14. `Webhook`
          pattern: ^(Email|AWSLambda|AzureFunctions|Datadog|HipChat|Jira|NewRelic|Opsgenie|PagerDuty|Slack|MicrosoftTeams|ServiceNow|SumoCloudSOAR|Webhook)$
          type: string
          x-pattern-message: 'should be one of the following: ''Email'', ''AWSLambda'',
            ''AzureFunctions'', ''Datadog'', ''HipChat'', ''Jira'', ''NewRelic'',
            ''Opsgenie'', ''PagerDuty'', ''Slack'', ''MicrosoftTeams'', ''ServiceNow'',
            ''SumoCloudSOAR'' and ''Webhook'''
      required:
      - connectionType
      type: object
    OutlierDataValue:
      description: Data value and bounds of outlier data point.
      properties:
        baseline:
          $ref: '#/components/schemas/OutlierBound'
        critical:
          $ref: '#/components/schemas/OutlierBound'
        warning:
          $ref: '#/components/schemas/OutlierBound'
        value:
          description: The value of outlier data point.
          example: 70.0
          format: double
          type: number
        violation:
          description: The type of violation.
          example: CriticalUpperViolation
          pattern: ^(CriticalUpperViolation|CriticalLowerViolation|WarningUpperViolation|WarningLowerViolation|NoViolation)$
          type: string
          x-pattern-message: 'should be one of the following: ''CriticalUpperViolation'',
            ''CriticalLowerViolation'', ''WarningUpperViolation'', ''WarningLowerViolation'',
            ''NoViolation'''
      type: object
    OutlierBound:
      description: The upper and lower bound of outlier/baseline.
      properties:
        lower:
          description: Lower bond value.
          example: 50.0
          format: double
          type: number
        upper:
          description: Upper bond value.
          example: 100.0
          format: double
          type: number
      type: object
    StaticThreshold:
      default: 0.0
      description: The data value for the condition. This defines the threshold for
        when to trigger. Threshold value is not applicable for `MissingData` and `ResolvedMissingData`
        triggerTypes and will be ignored if specified.
      example: 50.0
      format: double
      type: number
    StaticThresholdType:
      default: GreaterThanOrEqual
      description: |-
        The comparison type for the `threshold` evaluation. This defines how you want the data value compared. Valid values:
          1. `LessThan`: Less than than the configured threshold.
          2. `GreaterThan`: Greater than the configured threshold.
          3. `LessThanOrEqual`: Less than or equal to the configured threshold.
          4. `GreaterThanOrEqual`: Greater than or equal to the configured threshold.
        ThresholdType value is not applicable for `MissingData` and `ResolvedMissingData` triggerTypes and will be ignored if specified.
      example: GreaterThanOrEqual
      pattern: ^(LessThan|GreaterThan|LessThanOrEqual|GreaterThanOrEqual)$
      type: string
      x-pattern-message: 'should be one of the following: ''LessThan'', ''GreaterThan'',
        ''LessThanOrEqual'', or ''GreaterThanOrEqual'''
    OccurrenceType:
      description: |-
        The criteria to evaluate the threshold and thresholdType in the given time range. Valid values:
          1. `AtLeastOnce`: Trigger if the threshold is met at least once. (NOTE: This is the only valid value if monitorType is `Metrics`.)
          2. `Always`: Trigger if the threshold is met continuously. (NOTE: This is the only valid value if monitorType is `Metrics`.)
          3. `ResultCount`: Trigger if the threshold is met against the count of results. (NOTE: This is the only valid value if monitorType is `Logs`.)
          4. `MissingData`: Trigger if the data is missing. (NOTE: This is valid for both `Logs` and `Metrics` monitorTypes)
      example: ResultCount
      pattern: ^(AtLeastOnce|Always|ResultCount|MissingData)$
      type: string
      x-pattern-message: 'should be one of the following: ''AtLeastOnce'', ''Always'',
        ''ResultCount'' or ''MissingData'''
    TriggerSource:
      description: |-
        Determines which time series from queries to use for Metrics MissingData and ResolvedMissingData triggers Valid values:
          1. `AllTimeSeries`: Evaluate the condition against all time series. (NOTE: This option is only valid if monitorType is `Metrics`)
          2. `AnyTimeSeries`: Evaluate the condition against any time series. (NOTE: This option is only valid if monitorType is `Metrics`)
          3. `AllResults`: Evaluate the condition against results from all queries. (NOTE: This option is only valid if monitorType is `Logs`)
      example: AllResults
      pattern: ^(AllTimeSeries|AnyTimeSeries|AllResults)$
      type: string
      x-pattern-message: 'should be one of the following: ''AllTimeSeries'', ''AnyTimeSeries'',
        or ''AllResults'''
    OutlierDirection_2:
      default: Both
      description: Specifies which direction should trigger violations.
      example: Up
      pattern: ^(Both|Up|Down)$
      type: string
      x-pattern-message: 'should be one of the following: ''Both'', ''Up'', ''Down'''
    Metadata:
      properties:
        createdAt:
          description: Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: dateTime
          type: string
        createdBy:
          description: Identifier of the user who created the resource.
          type: string
        modifiedAt:
          description: Last modification timestamp in UTC.
          format: dateTime
          type: string
        modifiedBy:
          description: Identifier of the user who last modified the resource.
          type: string
      required:
      - createdAt
      - createdBy
      - modifiedAt
      - modifiedBy
      type: object
    MetadataWithUserInfo:
      properties:
        createdAt:
          description: Creation timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: date-time
          nullable: true
          type: string
        createdByUser:
          $ref: '#/components/schemas/UserInfo'
        modifiedAt:
          description: Last modification timestamp in UTC in [RFC3339](https://tools.ietf.org/html/rfc3339)
            format.
          format: date-time
          nullable: true
          type: string
        modifiedByUser:
          $ref: '#/components/schemas/UserInfo'
      required:
      - createdAt
      - createdByUser
      - modifiedAt
      - modifiedByUser
      type: object
    UserInfo:
      properties:
        id:
          description: User's identifier.
          example: 0000000006743FDD
          type: string
        email:
          description: User's email.
          example: johndoe@acme.com
          type: string
        firstName:
          description: User's first name.
          example: John
          type: string
        lastName:
          description: User's last name.
          example: Doe
          type: string
      required:
      - email
      - firstName
      - id
      - lastName
      type: object
    LogSearchQueryTimeRangeBase:
      allOf:
      - $ref: '#/components/schemas/LogSearchQueryTimeRangeBaseExceptParsingMode'
      - $ref: '#/components/schemas/LogSearchQueryTimeRangeBase_allOf'
      description: Definition of a log search with query and timerange.
    LogSearchQueryTimeRangeBaseExceptParsingMode:
      description: Definition of a log search with query and timerange.
      properties:
        queryString:
          description: Query to perform.
          example: error | count by _sourceCategory
          type: string
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        runByReceiptTime:
          default: false
          description: This has the value `true` if the search is to be run by receipt
            time and `false` if it is to be run by message time.
          example: false
          type: boolean
        queryParameters:
          description: Definition of the query parameters.
          items:
            $ref: '#/components/schemas/QueryParameterSyncDefinition'
          type: array
      required:
      - queryString
      - timeRange
      type: object
    TopologyLabelMap:
      description: |
        Map of the topology labels. Each label has a key and a list of values. If a value is `*`, it means the label will match content for all values of its key.
      example:
        service:
        - kube-scheduler
        - kube-dns
      properties:
        data:
          additionalProperties:
            $ref: '#/components/schemas/TopologyLabelValuesList'
          description: Map from topology labels to `TopologyLabelValuesList`.
          type: object
      required:
      - data
      type: object
    TopologyLabelValuesList:
      default: []
      description: List of values corresponding to a key of a label.
      example: kube-scheduler
      items:
        description: Value of the label.
        type: string
      type: array
    VisualAggregateData:
      properties:
        max:
          description: The maximum value in the series.
          example: 10.0
          format: double
          type: number
        min:
          description: The minimum value in the series.
          example: 1.2
          format: double
          type: number
        avg:
          description: The average value in the series.
          example: 5.6
          format: double
          type: number
        sum:
          description: The sum of all the values in the series.
          example: 123.4
          format: double
          type: number
        latest:
          description: The last value in the series.
          example: 23.4
          format: double
          type: number
        count:
          description: The number of values in the series.
          example: 600
          format: double
          type: number
      required:
      - avg
      - latest
      - max
      - min
      - sum
      type: object
    DashboardSearchStatus:
      properties:
        state:
          description: Current state of the search.
          type: string
        percentCompleted:
          description: Percentage of search completed.
          format: int32
          maximum: 100
          minimum: 0
          type: integer
      required:
      - state
      type: object
    inline_object:
      properties:
        file:
          description: |-
            The CSV file to upload.
              - The size limit for the CSV file is 100MB.
              - Use Unix format, with newlines ("\n") separating rows.
              - The first row should contain headers that match the lookup table schema. Matching is
                case-insensitive.
          format: binary
          type: string
      required:
      - file
      type: object
    AddOrReplaceTransformation_allOf:
      properties:
        dimensionToReplace:
          description: The dimension that needs to be modified or added.
          example: metric
          type: string
        value:
          description: The value for the dimension.
          example: '{{metric}}_aggregated'
          type: string
      required:
      - dimensionToReplace
      - value
      type: object
    AggregateOnTransformation_allOf:
      properties:
        aggregateOn:
          default: []
          description: A list of dimensions that should be aggregated on.
          example:
          - metric
          - cluster
          items:
            type: string
          type: array
      required:
      - aggregateOn
      type: object
    BeginBoundedTimeRange_allOf:
      properties:
        from:
          $ref: '#/components/schemas/TimeRangeBoundary'
        to:
          $ref: '#/components/schemas/TimeRangeBoundary'
      required:
      - from
      type: object
    CompleteLiteralTimeRange_allOf:
      properties:
        rangeName:
          description: 'Name of the complete time range. Possible values are: - `today`,
            - `yesterday`, - `previous_week`, - `previous_month`.'
          example: previous_month
          pattern: ^(today|yesterday|previous_week|previous_month)$
          type: string
          x-pattern-message: 'must be one of the following: `today`, `yesterday`,
            `previous_week`, `previous_month`'
      required:
      - rangeName
      type: object
    EpochTimeRangeBoundary_allOf:
      properties:
        epochMillis:
          description: Starting point in time as a number of milliseconds since the
            epoch. For example `1538392220000`
          example: 1538392220000
          format: int64
          type: integer
      required:
      - epochMillis
      type: object
    Iso8601TimeRangeBoundary_allOf:
      properties:
        iso8601Time:
          description: Starting point in time as a string in ISO 8601 format. For
            example `2018-10-01T11:10:20.52+01:00`
          format: date-time
          type: string
      required:
      - iso8601Time
      type: object
    LiteralTimeRangeBoundary_allOf:
      properties:
        rangeName:
          description: |-
            Name of the time range. Possible values are:
              - `now`,
              - `second`,
              - `minute`,
              - `hour`,
              - `day`,
              - `today`,
              - `week`,
              - `month`,
              - `year`
          example: week
          type: string
      required:
      - rangeName
      type: object
    RelativeTimeRangeBoundary_allOf:
      properties:
        relativeTime:
          description: |-
            Relative time as a string consisting of following elements: - `-` (optional): minus sign indicates time in the past, - `<number>`: number of time units, - `<time_unit>`: time unit; possible values are: `w` (week), `d` (day), `h` (hour), `m` (minute), `s` (second).
            Multiple pairs of `<number><time_unit>` may be provided, and they may be in any order. For example, `-2w5d3h` points to the moment in time 2 weeks, 5 days and 3 hours ago.
          example: -2w5d3h
          type: string
      required:
      - relativeTime
      type: object
    ServiceNowConnection_allOf:
      properties:
        url:
          description: URL for the ServiceNow connection.
          type: string
        username:
          description: User name for the ServiceNow connection.
          type: string
      required:
      - url
      - username
      type: object
    ServiceNowDefinition_allOf:
      properties:
        url:
          description: URL for the ServiceNow connection.
          example: https://www.google.com
          type: string
        username:
          description: User name for the ServiceNow connection.
          type: string
        password:
          description: User password for the ServiceNow connection.
          type: string
      required:
      - password
      - url
      - username
      type: object
    WebhookConnection_allOf:
      properties:
        url:
          description: URL for the webhook connection.
          type: string
        headers:
          description: List of access authorization headers.
          items:
            $ref: '#/components/schemas/Header'
          type: array
        customHeaders:
          description: List of custom webhook headers.
          items:
            $ref: '#/components/schemas/Header'
          type: array
        defaultPayload:
          description: Default payload of the webhook.
          type: string
        webhookType:
          description: Type of webhook connection. Valid values are `AWSLambda`, `Azure`,
            `Datadog`, `HipChat`, `NewRelic`, `Opsgenie`, `PagerDuty`, `Slack`, `MicrosoftTeams`,
            `ServiceNow`, `SumoCloudSOAR` and `Webhook`.
          pattern: ^(AWSLambda|Azure|Datadog|HipChat|PagerDuty|Slack|Webhook|NewRelic|Jira|Opsgenie|MicrosoftTeams|ServiceNow|SumoCloudSOAR)$
          type: string
          x-pattern-message: must be `AWSLambda`, `Azure`, `Datadog`, `HipChat`, `PagerDuty`,
            `Slack`, `Webhook`, `NewRelic`, `Jira`, `Opsgenie`, `MicrosoftTeams`,
            `ServiceNow` or `SumoCloudSOAR`
        connectionSubtype:
          description: The subtype of the connection. Valid values are `Event` or
            `Incident`.
          pattern: ^(Event|Incident)$
          type: string
          x-pattern-message: must be `Event` or `Incident`
        warnings:
          description: Webhook endpoint warning for incorrect variable names and syntax.
          example: 'The following variables are not supported: NotSupportedVariable'
          items:
            type: string
          type: array
      required:
      - customHeaders
      - defaultPayload
      - headers
      - url
      - webhookType
      type: object
    WebhookDefinition_allOf:
      properties:
        url:
          description: URL for the webhook connection.
          example: https://www.google.com
          type: string
        headers:
          default: []
          description: List of access authorization headers.
          items:
            $ref: '#/components/schemas/Header'
          maxItems: 7995
          type: array
        customHeaders:
          default: []
          description: List of custom webhook headers.
          items:
            $ref: '#/components/schemas/Header'
          maxItems: 5
          type: array
        defaultPayload:
          description: Default payload of the webhook.
          minLength: 1
          type: string
        webhookType:
          description: Type of webhook connection. Valid values are `AWSLambda`, `Azure`,
            `Datadog`, `HipChat`, `NewRelic`, `Opsgenie`, `PagerDuty`, `Slack`, `MicrosoftTeams`,
            `ServiceNow`, `SumoCloudSOAR` and `Webhook`.
          pattern: ^(AWSLambda|Azure|Datadog|HipChat|PagerDuty|Slack|Webhook|NewRelic|Jira|Opsgenie|MicrosoftTeams|ServiceNow|SumoCloudSOAR)$
          type: string
          x-pattern-message: must be `AWSLambda`, `Azure`, `Datadog`, `HipChat`, `PagerDuty`,
            `Slack`, `Webhook`, `NewRelic`, `Jira`, `Opsgenie`, `MicrosoftTeams`,
            `ServiceNow` or `SumoCloudSOAR`
        connectionSubtype:
          description: The subtype of the connection. Valid values are `Event` or
            `Incident`.
          pattern: ^(Event|Incident)$
          type: string
          x-pattern-message: must be `Event` or `Incident`
      required:
      - defaultPayload
      - url
      type: object
    ContainerPanel_allOf:
      description: A panel that contains a list of other panels.
      properties:
        layout:
          $ref: '#/components/schemas/Layout'
        panels:
          description: Children panels that the container panel contains.
          items:
            $ref: '#/components/schemas/Panel'
          type: array
        variables:
          description: Variables to apply to the panel children.
          items:
            $ref: '#/components/schemas/Variable'
          type: array
        coloringRules:
          description: Rules to set the color of data.
          items:
            $ref: '#/components/schemas/ColoringRule'
          type: array
      required:
      - layout
      - panels
      type: object
    SumoSearchPanel_allOf:
      description: A panel that has logs and metrics search queries.
      properties:
        queries:
          description: Metrics and log queries of the panel.
          items:
            $ref: '#/components/schemas/Query'
          maxItems: 6
          type: array
        description:
          description: Description of the panel.
          example: This panel gives an overview of CPU metrics for a pod
          type: string
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        coloringRules:
          description: Rules to set the color of data.
          items:
            $ref: '#/components/schemas/ColoringRule'
          type: array
        linkedDashboards:
          description: List of linked dashboards.
          items:
            $ref: '#/components/schemas/LinkedDashboard'
          type: array
      required:
      - queries
      type: object
    TextPanel_allOf:
      description: A panel that has text.
      properties:
        text:
          description: Text to display in the panel.
          example: Kubernetes pods
          type: string
      required:
      - text
      type: object
    TracesListPanel_allOf:
      description: A panel for traces list
      properties:
        queries:
          description: Traces queries of the panel.
          example:
            traceQueryExample:
              value:
                queryKey: A
                queryString: ""
                queryType: Traces
                tracesQueryData:
                  filters:
                    type: FieldDescriptor
          items:
            $ref: '#/components/schemas/Query'
          maxItems: 6
          type: array
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
      type: object
    ServiceMapPanel_allOf:
      description: A panel for service map.
      properties:
        application:
          description: Filter services by the application custom tag.
          example: sumologic
          type: string
        service:
          description: Show only the specific service and its connections to other
            services.
          example: prada
          type: string
        showRemoteServices:
          description: Show remote services, like databases or external calls, automatically
            detected in client traffic.
          example: true
          type: boolean
      type: object
    DashboardTemplate_allOf:
      description: Generate the report from a dashboard template.
      properties:
        id:
          description: Id of the dashboard.
          example: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
          type: string
        panelToSessionIdMap:
          additionalProperties:
            type: string
          description: |
            A map of panel to session id. The session id will be used to fetch data of the panel for the report. If not specified, a new session id will be created for the panel.
          example:
            "1": 64
            "2": 128
            "3": 192
          type: object
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        variableValues:
          $ref: '#/components/schemas/VariablesValuesData'
      required:
      - id
      type: object
    MetadataVariableSourceDefinition_allOf:
      description: Variable with values that are powered by a metadata search.
      properties:
        filter:
          description: Filter to search the catalog.
          example: _sourceHost=prod-* metric=CPU_Idle
          maxLength: 65536
          type: string
        key:
          description: Return the values for this given key.
          example: _sourceCategory
          type: string
      required:
      - filter
      - key
      type: object
    CsvVariableSourceDefinition_allOf:
      description: Variable with values that are powered by a csv file.
      properties:
        values:
          description: Comma separated values for the variable.
          example: host1, host2
          maxLength: 65536
          type: string
      required:
      - values
      type: object
    LogQueryVariableSourceDefinition_allOf:
      description: Variable with values that are powered by a log query.
      properties:
        query:
          description: A log query.
          example: _sourceCategory=forge error | parse "[pod=*]" podid | count by
            podid
          maxLength: 65536
          type: string
        field:
          description: A field in log query to populate the variable values.
          example: podid
          maxLength: 65536
          type: string
      required:
      - field
      - query
      type: object
    AlertSearchNotificationSyncDefinition_allOf:
      properties:
        sourceId:
          description: A String value to uniquely identify a Collector's Source.
          type: string
      required:
      - sourceId
      type: object
    EmailSearchNotificationSyncDefinition_allOf:
      properties:
        toList:
          description: A list of email recipients.
          items:
            type: string
          type: array
        subjectTemplate:
          description: 'If the notification is scheduled with a threshold, the default
            subject template will be "Search Alert: {{AlertCondition}} results found
            for {{SearchName}}". For email notifications without a threshold, the
            default subject template is "Search Results: {{SearchName}}".'
          type: string
        includeQuery:
          default: true
          description: A boolean value to indicate if the search query should be included
            in the notification email.
          type: boolean
        includeResultSet:
          default: true
          description: A boolean value to indicate if the search result set should
            be included in the notification email.
          type: boolean
        includeHistogram:
          default: true
          description: A boolean value to indicate if the search result histogram
            should be included in the notification email.
          type: boolean
        includeCsvAttachment:
          default: false
          description: A boolean value to indicate if the search results should be
            included in the notification email as a CSV attachment.
          type: boolean
      required:
      - toList
      type: object
    FolderSyncDefinition_allOf:
      properties:
        description:
          description: An optional description for the folder.
          type: string
        children:
          description: The items in the folder, a list of Dashboard and/or Folder
            items.
          items:
            $ref: '#/components/schemas/ContentSyncDefinition'
          type: array
      required:
      - children
      type: object
    DashboardSyncDefinition_allOf:
      properties:
        description:
          description: A description of the dashboard.
          type: string
        detailLevel:
          description: |-
            Supported values are:
              - `1` for small
              - `2` for medium
              - `3` for large
          type: integer
        properties:
          description: Visual settings for the panel.
          type: string
        panels:
          description: The panels of the dashboard. _Dashboard links are not supported._
          items:
            $ref: '#/components/schemas/ReportPanelSyncDefinition'
          type: array
        filters:
          description: The filters for the dashboard. Filters allow you to control
            the amount of information displayed in your dashboards.
          items:
            $ref: '#/components/schemas/ReportFilterSyncDefinition'
          type: array
      required:
      - description
      - detailLevel
      - filters
      - panels
      - properties
      type: object
    MewboardSyncDefinition_allOf:
      properties:
        description:
          description: A description of the dashboard.
          example: A view of pods, namespaces and nodes of your cluster.
          maxLength: 65546
          type: string
        title:
          description: The title of the dashboard.
          example: Kubernetes Dashboard
          maxLength: 255
          minLength: 1
          type: string
        rootPanel:
          $ref: '#/components/schemas/ContainerPanel'
        theme:
          default: light
          description: Theme for the dashboard. Must be `light` or `dark`.
          example: light
          pattern: ^(light|dark|Light|Dark)$
          type: string
          x-pattern-message: Must be `Light`, or `Dark`
        topologyLabelMap:
          $ref: '#/components/schemas/TopologyLabelMap'
        refreshInterval:
          description: Interval of time (in seconds) to automatically refresh the
            dashboard. A value of 0 means we never automatically refresh the dashboard.
          example: 5
          format: int32
          type: integer
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        layout:
          $ref: '#/components/schemas/Layout'
        panels:
          description: Children panels that the container panel contains.
          items:
            $ref: '#/components/schemas/Panel'
          type: array
        variables:
          description: Variables that could be applied to the panel's children.
          items:
            $ref: '#/components/schemas/Variable'
          type: array
        coloringRules:
          description: Coloring rules to color the panel/data with.
          items:
            $ref: '#/components/schemas/ColoringRule'
          type: array
      required:
      - title
      type: object
    SavedSearchWithScheduleSyncDefinition_allOf:
      properties:
        search:
          $ref: '#/components/schemas/SavedSearchSyncDefinition'
        searchSchedule:
          $ref: '#/components/schemas/SearchScheduleSyncDefinition'
        description:
          description: Description of the saved search.
          type: string
      required:
      - description
      - search
      type: object
    SaveToViewNotificationSyncDefinition_allOf:
      properties:
        viewName:
          description: Name of the View to save the notification to.
          type: string
      required:
      - viewName
      type: object
    SaveToLookupNotificationSyncDefinition_allOf:
      properties:
        lookupFilePath:
          description: The path of the lookup table that will store the results of
            the scheduled search.
          example: /personal/folder/testLookupTable
          type: string
        isLookupMergeOperation:
          description: This indicates whether the file contents will be merged with
            existing data in the lookup table or not. If this is true then data with
            the same primary keys will be updated while the rest of the rows will
            be appended.
          example: false
          type: boolean
      required:
      - isLookupMergeOperation
      - lookupFilePath
      type: object
    ServiceNowSearchNotificationSyncDefinition_allOf:
      properties:
        externalId:
          description: ServiceNow identifier.
          type: string
        fields:
          $ref: '#/components/schemas/ServiceNowFieldsSyncDefinition'
      required:
      - externalId
      type: object
    WebhookSearchNotificationSyncDefinition_allOf:
      properties:
        webhookId:
          description: Identifier of the webhook connection.
          type: string
        payload:
          description: A JSON object in the format required by the target WebHook
            URL. For details on variables that can be used as parameters within your
            JSON object, please refer to Sumo Logic Doc Hub.
          type: string
        itemizeAlerts:
          default: false
          description: If this field is set to true, one webhook per result will be
            sent when the trigger conditions are met
          example: true
          type: boolean
        maxItemizedAlerts:
          description: The maximum number of results for which we send separate alerts.
            This value should be between 1 and 100.
          example: 10
          format: int32
          minimum: 0
          type: integer
      required:
      - webhookId
      type: object
    CseSignalNotificationSyncDefinition_allOf:
      properties:
        recordType:
          description: Name of the Cloud SIEM Enterprise Record to be created.
          type: string
      required:
      - recordType
      type: object
    MetricsSavedSearchSyncDefinition_allOf:
      properties:
        description:
          description: Item description in the content library.
          example: Long and detailed description
          maxLength: 8192
          type: string
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        logQuery:
          description: Query used to add an overlay to the chart.
          example: my_metric | timeslice 1m | count by _timeslice
          maxLength: 10240
          type: string
        metricsQueries:
          description: Metrics queries.
          items:
            $ref: '#/components/schemas/MetricsSavedSearchQuerySyncDefinition'
          type: array
        desiredQuantizationInSecs:
          description: Desired quantization in seconds.
          example: 60
          format: int32
          minimum: 0
          type: integer
        properties:
          description: Chart properties. This field is optional.
          example: '{ \"key\": \"value\" }'
          type: string
      required:
      - desiredQuantizationInSecs
      - metricsQueries
      - timeRange
      type: object
    MetricsSearchSyncDefinition_allOf:
      properties:
        timeRange:
          $ref: '#/components/schemas/ResolvableTimeRange'
        description:
          description: Description of the metrics search page.
          example: CPU and memory utilization for RDS cluster
          type: string
        queries:
          description: Queries of the metrics search page.
          example:
          - queryString: CPU_Idle Namespace=RDS
            queryType: Metrics
            queryKey: A
          - queryString: Mem_Used Namespace=RDS
            queryType: Metrics
            queryKey: B
          items:
            $ref: '#/components/schemas/Query'
          type: array
        visualSettings:
          description: |
            Visual settings of the metrics search page. Must be a string representing a valid JSON object.
          example: '{"title": {"fontsize": 9}}'
          type: string
      required:
      - queries
      - timeRange
      type: object
    CollectorRegistrationTokenResponse_allOf:
      properties:
        encodedTokenAndUrl:
          description: The token and URL used to register the Collector as an encoded
            string.
          type: string
      required:
      - encodedTokenAndUrl
      type: object
    SourceResourceIdentity_allOf:
      properties:
        collectorId:
          default: Unknown
          description: The unique identifier of the Collector this Source belongs
            to.
          type: string
        collectorName:
          default: Unknown
          description: The name of the Collector this Source belongs to.
          type: string
      type: object
    IngestBudgetResourceIdentity_allOf:
      properties:
        ingestBudgetFieldValue:
          default: Unknown
          description: The unique field value of the ingest budget v1. This will be
            empty for v2 budgets.
          type: string
        scope:
          default: Unknown
          description: The scope of the ingest budget v2. This will be empty for v1
            budgets.
          type: string
      type: object
    OAuthRefreshFailedTracker_allOf:
      properties:
        exceptionType:
          description: The type of exception received while attempting OAuth.
          type: string
        exceptionMessage:
          description: The error message received with the failed OAuth request.
          type: string
      type: object
    CollectionAffectedDueToIngestBudgetTracker_allOf:
      properties:
        associatedBudgetNames:
          description: The list of budget names.
          type: string
      type: object
    CollectionS3AccessDeniedTracker_allOf:
      properties:
        bucketName:
          description: The bucket name of the associated Source.
          type: string
        accessKey:
          description: The access key used to make the request. In the case of IAM
            roles, this is the temporary key used for authentication.
          type: string
      type: object
    CollectionS3InvalidKeyTracker_allOf:
      properties:
        accessKey:
          description: The access key used to make the request. In the case of IAM
            roles, this is the temporary key used for authentication.
          type: string
      type: object
    CollectionS3ListingFailedTracker_allOf:
      properties:
        bucketName:
          description: The bucket name of the associated Source.
          type: string
      type: object
    CollectionS3SlowListingTracker_allOf:
      properties:
        bucketName:
          description: The bucket name of the associated Source.
          type: string
        flaggedAfterMinutes:
          description: The number of minutes elapsed in scanning after which this
            incident was created.
          type: string
      type: object
    InstalledCollectorOfflineTracker_allOf:
      properties:
        minutesSinceLastHeartbeat:
          description: The number of minutes since the last heartbeat for the collector
            was received.
          type: string
      type: object
    IngestThrottlingTracker_allOf:
      properties:
        dataType:
          description: The type of data for which the rate limit was enabled. The
            possible values are `LogIngest` and `MetricsIngest`.
          type: string
      type: object
    CollectionInvalidFilePathTracker_allOf:
      properties:
        path:
          description: The path to the file.
          type: string
      type: object
    CollectionCloudWatchListMetricsDeniedTracker_allOf:
      properties:
        errorCode:
          description: The error code from AWS for the request made to get metrics.
          type: string
        errorMessage:
          description: The error message from AWS for the request made to get metrics.
          type: string
      type: object
    MetricsHighCardinalityDetectedTracker_allOf:
      properties:
        retention:
          description: The retention of metrics that approached the limit.
          type: string
      type: object
    MetricsCardinalityLimitExceededTracker_allOf:
      properties:
        retention:
          description: The retention of metrics that exceeded the limit.
          type: string
      type: object
    HighCardinalityDimensionDroppedTracker_allOf:
      properties:
        dimension:
          description: The dropped high cardinality dimension.
          type: string
      type: object
    CSEWindowsInvalidConfigurationTracker_allOf:
      properties:
        sensorId:
          description: The sensor ID.
          type: string
        sensorHostname:
          description: The sensor's hostname.
          type: string
        sensorUserName:
          description: The sensor's user name.
          type: string
      type: object
    CSEWindowsInvalidUserPermissionsTracker_allOf:
      properties:
        sensorId:
          description: The sensor ID.
          type: string
        sensorHostname:
          description: The sensor's hostname.
          type: string
        sensorUserName:
          description: The sensor's user name.
          type: string
        folderPath:
          description: The path of the folder.
          type: string
        filePath:
          description: The complete file path.
          type: string
        source:
          description: The HostName + EventLog name for EventLogs and Domain name
            for Directory..
          type: string
      type: object
    CSEWindowsStorageLimitExceededTracker_allOf:
      properties:
        sensorId:
          description: The sensor ID.
          type: string
        sensorHostname:
          description: The sensor's hostname.
          type: string
        folderPath:
          description: The path of the folder.
          type: string
        folderSizeLimit:
          description: The complete file path.
          type: string
        currentFolderSize:
          description: Current size of the folder.
          type: string
        percentageAvailableDiskSpaceLimit:
          description: The percentage available disk space limit.
          type: string
        currentPercentageAvailableDiskSpace:
          description: The current percentage available disk space.
          type: string
        lastError:
          description: The last error.
          type: string
      type: object
    CSEWindowsErrorParsingRecordsTracker_allOf:
      properties:
        sensorId:
          description: The sensor ID.
          type: string
        sensorHostname:
          description: The sensor's hostname.
          type: string
        source:
          description: The HostName + EventLog name for EventLogs and Domain name
            for Directory.
          type: string
        errorCount:
          description: The error count.
          type: string
        lastErrorMessage:
          description: The last error message.
          type: string
      type: object
    CSEWindowsExcessiveFilesPendingUploadTracker_allOf:
      properties:
        sensorId:
          description: The sensor ID.
          type: string
        sensorHostname:
          description: The sensor's hostname.
          type: string
        source:
          description: The HostName + EventLog name for EventLogs and Domain name
            for Directory.
          type: string
        lastErrorMessage:
          description: The last error message.
          type: string
        numberOfFilesPending:
          description: The number of files pending upload.
          type: string
        oldestTimestampInQueue:
          description: The oldest timestamp in the queue.
          type: string
      type: object
    CSEWindowsSensorOfflineTracker_allOf:
      properties:
        minutesWithNoHeartbeatBeforeMarkingOffline:
          description: The number of minutes without heartbeat after which sensor
            is marked offline.
          type: string
      type: object
    PermissionIdentifier_allOf:
      properties:
        targetId:
          description: The identifier that belongs to the resource this permission
            assignment applies to.
          example: 0000000006743FE2
          type: string
      required:
      - targetId
      type: object
    PermissionStatementDefinition_allOf:
      properties:
        subjectType:
          description: 'Type of subject for the permission. Valid values are: `role`.'
          example: role
          pattern: ^(role)$
          type: string
          x-pattern-message: 'must be one of the following: `role`'
        subjectId:
          description: The identifier that belongs to the subject type chosen above.
            For e.g. if the subjectType is set to `role`, subjectId should be the
            identifier of a role.
          example: 0000000006743FDA
          type: string
        targetId:
          description: The identifier that belongs to the resource this permission
            assignment applies to.
          example: 0000000006743FE2
          type: string
      required:
      - subjectId
      - subjectType
      - targetId
      type: object
    PermissionSummaryBySubjects_allOf:
      properties:
        permissionSummaries:
          items:
            $ref: '#/components/schemas/PermissionSummaryMeta'
          type: array
      required:
      - permissionSummaries
      type: object
    Email_allOf:
      properties:
        recipients:
          description: A list of email addresses to send to when the rule fires.
          items:
            example: john@doe.com
            type: string
          type: array
        subject:
          description: The subject line of the email.
          example: Sample Email Subject
          type: string
        messageBody:
          description: The message body of the email to send.
          example: Sample Email Message Body
          type: string
        timeZone:
          description: Time zone for the email content. All dates/times will be displayed
            in this timeZone in the email payload. Follow the format in the [IANA
            Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
          example: America/Los_Angeles
          type: string
      required:
      - recipients
      - subject
      - timeZone
      type: object
    AWSLambda_allOf:
      properties:
        connectionId:
          description: The identifier of the connection.
          example: 000000000BF39283
          type: string
        payloadOverride:
          description: The override of the default JSON payload of the connection.
            Should be in JSON format.
          type: string
      required:
      - connectionId
      type: object
    ServiceNow_allOf:
      properties:
        connectionId:
          description: The identifier of the connection.
          example: 000000000BF39283
          type: string
        connectionSubtype:
          description: The subtype of the connection. Valid values are `Event` or
            `Incident`.
          pattern: ^(Event|Incident)$
          type: string
          x-pattern-message: must be `Event` or `Incident`
        payloadOverride:
          description: The override of the default JSON payload of the connection.
            Should be in JSON format.
          type: string
      required:
      - connectionId
      type: object
    OutlierSeriesDataPoint_allOf:
      description: Data point of outlier series.
      properties:
        x:
          description: Epoch unix time stamp.
          example: 1617146107
          format: int64
          type: integer
        y:
          $ref: '#/components/schemas/OutlierDataValue'
      required:
      - x
      - "y"
      type: object
    StaticSeriesDataPoint_allOf:
      description: Data point of static series.
      properties:
        x:
          description: Epoch unix time stamp.
          example: 1617146107
          format: int64
          type: integer
        y:
          description: The value of the data point.
          example: 70.0
          format: double
          type: number
      required:
      - x
      - "y"
      type: object
    StaticCondition_allOf:
      description: A rule that defines how the monitor should evaluate data and trigger
        notifications.
      properties:
        timeRange:
          description: The relative time range of the monitor.
          example: 15m
          type: string
        threshold:
          default: 0.0
          description: The data value for the condition. This defines the threshold
            for when to trigger. Threshold value is not applicable for `MissingData`
            and `ResolvedMissingData` triggerTypes and will be ignored if specified.
          example: 50.0
          format: double
          type: number
        thresholdType:
          default: GreaterThanOrEqual
          description: |-
            The comparison type for the `threshold` evaluation. This defines how you want the data value compared. Valid values:
              1. `LessThan`: Less than than the configured threshold.
              2. `GreaterThan`: Greater than the configured threshold.
              3. `LessThanOrEqual`: Less than or equal to the configured threshold.
              4. `GreaterThanOrEqual`: Greater than or equal to the configured threshold.
            ThresholdType value is not applicable for `MissingData` and `ResolvedMissingData` triggerTypes and will be ignored if specified.
          example: GreaterThanOrEqual
          pattern: ^(LessThan|GreaterThan|LessThanOrEqual|GreaterThanOrEqual)$
          type: string
          x-pattern-message: 'should be one of the following: ''LessThan'', ''GreaterThan'',
            ''LessThanOrEqual'', or ''GreaterThanOrEqual'''
        field:
          description: The name of the field that the trigger condition will alert
            on. The trigger could compare the value of specified field with the threshold.
            If `field` is not specified, monitor would default to result count instead.
          example: _count
          type: string
        occurrenceType:
          description: |-
            The criteria to evaluate the threshold and thresholdType in the given time range. Valid values:
              1. `AtLeastOnce`: Trigger if the threshold is met at least once. (NOTE: This is the only valid value if monitorType is `Metrics`.)
              2. `Always`: Trigger if the threshold is met continuously. (NOTE: This is the only valid value if monitorType is `Metrics`.)
              3. `ResultCount`: Trigger if the threshold is met against the count of results. (NOTE: This is the only valid value if monitorType is `Logs`.)
              4. `MissingData`: Trigger if the data is missing. (NOTE: This is valid for both `Logs` and `Metrics` monitorTypes)
          example: ResultCount
          pattern: ^(AtLeastOnce|Always|ResultCount|MissingData)$
          type: string
          x-pattern-message: 'should be one of the following: ''AtLeastOnce'', ''Always'',
            ''ResultCount'' or ''MissingData'''
        triggerSource:
          description: |-
            Determines which time series from queries to use for Metrics MissingData and ResolvedMissingData triggers Valid values:
              1. `AllTimeSeries`: Evaluate the condition against all time series. (NOTE: This option is only valid if monitorType is `Metrics`)
              2. `AnyTimeSeries`: Evaluate the condition against any time series. (NOTE: This option is only valid if monitorType is `Metrics`)
              3. `AllResults`: Evaluate the condition against results from all queries. (NOTE: This option is only valid if monitorType is `Logs`)
          example: AllResults
          pattern: ^(AllTimeSeries|AnyTimeSeries|AllResults)$
          type: string
          x-pattern-message: 'should be one of the following: ''AllTimeSeries'', ''AnyTimeSeries'',
            or ''AllResults'''
      required:
      - occurrenceType
      - timeRange
      - triggerSource
      type: object
    LogsStaticCondition_allOf:
      description: A rule that defines how logs monitor should evaluate static data
        and trigger notifications.
      properties:
        timeRange:
          description: The relative time range of the monitor.
          example: 15m
          type: string
        threshold:
          default: 0.0
          description: The data value for the condition. This defines the threshold
            for when to trigger. Threshold value is not applicable for `MissingData`
            and `ResolvedMissingData` triggerTypes and will be ignored if specified.
          example: 50.0
          format: double
          type: number
        thresholdType:
          default: GreaterThanOrEqual
          description: |-
            The comparison type for the `threshold` evaluation. This defines how you want the data value compared. Valid values:
              1. `LessThan`: Less than than the configured threshold.
              2. `GreaterThan`: Greater than the configured threshold.
              3. `LessThanOrEqual`: Less than or equal to the configured threshold.
              4. `GreaterThanOrEqual`: Greater than or equal to the configured threshold.
            ThresholdType value is not applicable for `MissingData` and `ResolvedMissingData` triggerTypes and will be ignored if specified.
          example: GreaterThanOrEqual
          pattern: ^(LessThan|GreaterThan|LessThanOrEqual|GreaterThanOrEqual)$
          type: string
          x-pattern-message: 'should be one of the following: ''LessThan'', ''GreaterThan'',
            ''LessThanOrEqual'', or ''GreaterThanOrEqual'''
        field:
          description: The name of the field that the trigger condition will alert
            on. The trigger could compare the value of specified field with the threshold.
            If `field` is not specified, monitor would default to result count instead.
          example: _count
          type: string
      required:
      - threshold
      - thresholdType
      - timeRange
      type: object
    MetricsStaticCondition_allOf:
      description: A rule that defines how metrics monitor should evaluate static
        data and trigger notifications.
      properties:
        timeRange:
          description: The relative time range of the monitor.
          example: 15m
          type: string
        threshold:
          default: 0.0
          description: The data value for the condition. This defines the threshold
            for when to trigger. Threshold value is not applicable for `MissingData`
            and `ResolvedMissingData` triggerTypes and will be ignored if specified.
          example: 50.0
          format: double
          type: number
        thresholdType:
          default: GreaterThanOrEqual
          description: |-
            The comparison type for the `threshold` evaluation. This defines how you want the data value compared. Valid values:
              1. `LessThan`: Less than than the configured threshold.
              2. `GreaterThan`: Greater than the configured threshold.
              3. `LessThanOrEqual`: Less than or equal to the configured threshold.
              4. `GreaterThanOrEqual`: Greater than or equal to the configured threshold.
            ThresholdType value is not applicable for `MissingData` and `ResolvedMissingData` triggerTypes and will be ignored if specified.
          example: GreaterThanOrEqual
          pattern: ^(LessThan|GreaterThan|LessThanOrEqual|GreaterThanOrEqual)$
          type: string
          x-pattern-message: 'should be one of the following: ''LessThan'', ''GreaterThan'',
            ''LessThanOrEqual'', or ''GreaterThanOrEqual'''
        occurrenceType:
          description: |-
            The criteria to evaluate the threshold and thresholdType in the given time range. Valid values:
              1. `AtLeastOnce`: Trigger if the threshold is met at least once. (NOTE: This is the only valid value if monitorType is `Metrics`.)
              2. `Always`: Trigger if the threshold is met continuously. (NOTE: This is the only valid value if monitorType is `Metrics`.)
              3. `ResultCount`: Trigger if the threshold is met against the count of results. (NOTE: This is the only valid value if monitorType is `Logs`.)
              4. `MissingData`: Trigger if the data is missing. (NOTE: This is valid for both `Logs` and `Metrics` monitorTypes)
          example: ResultCount
          pattern: ^(AtLeastOnce|Always|ResultCount|MissingData)$
          type: string
          x-pattern-message: 'should be one of the following: ''AtLeastOnce'', ''Always'',
            ''ResultCount'' or ''MissingData'''
      required:
      - occurrenceType
      - threshold
      - thresholdType
      - timeRange
      type: object
    LogsOutlierCondition_allOf:
      description: A rule that defines how logs monitor should evaluate outlier data
        and trigger notifications.
      properties:
        window:
          default: 50
          description: Sets the trailing number of data points to calculate mean and
            sigma.
          example: 15
          format: int64
          type: integer
        consecutive:
          default: 1
          description: Sets the required number of consecutive indicator data points
            (outliers) to trigger a violation.
          example: 3
          format: int64
          type: integer
        direction:
          default: Both
          description: Specifies which direction should trigger violations.
          example: Up
          pattern: ^(Both|Up|Down)$
          type: string
          x-pattern-message: 'should be one of the following: ''Both'', ''Up'', ''Down'''
        threshold:
          default: 3.0
          description: Sets the number of standard deviations for calculating violations.
          example: 10.0
          format: double
          type: number
        field:
          description: The name of the field that the trigger condition will alert
            on.
          example: _count
          type: string
      type: object
    MetricsOutlierCondition_allOf:
      description: A rule that defines how metrics monitor should evaluate outlier
        data and trigger notifications.
      properties:
        baselineWindow:
          default: 1d
          description: The time range used to compute the baseline.
          example: 1h
          type: string
        direction:
          default: Both
          description: Specifies which direction should trigger violations.
          example: Up
          pattern: ^(Both|Up|Down)$
          type: string
          x-pattern-message: 'should be one of the following: ''Both'', ''Up'', ''Down'''
        threshold:
          default: 3.0
          description: How much should the indicator be different from the baseline
            for each datapoint.
          example: 10.0
          format: double
          type: number
      type: object
    LogsMissingDataCondition_allOf:
      description: A rule that defines how logs monitors should evaluate missing data
        and trigger notifications.
      properties:
        timeRange:
          description: The relative time range of the monitor.
          example: 15m
          type: string
      required:
      - timeRange
      type: object
    MetricsMissingDataCondition_allOf:
      description: A rule that defines how metrics monitors should evaluate missing
        data and trigger notifications.
      properties:
        triggerSource:
          description: |-
            Determines which time series from queries to use for Metrics MissingData and ResolvedMissingData triggers Valid values:
              1. `AllTimeSeries`: Evaluate the condition against all time series. (NOTE: This option is only valid if monitorType is `Metrics`)
              2. `AnyTimeSeries`: Evaluate the condition against any time series. (NOTE: This option is only valid if monitorType is `Metrics`)
              3. `AllResults`: Evaluate the condition against results from all queries. (NOTE: This option is only valid if monitorType is `Logs`)
          example: AllResults
          pattern: ^(AllTimeSeries|AnyTimeSeries|AllResults)$
          type: string
          x-pattern-message: 'should be one of the following: ''AllTimeSeries'', ''AnyTimeSeries'',
            or ''AllResults'''
        timeRange:
          description: The relative time range of the monitor.
          example: 15m
          type: string
      required:
      - timeRange
      - triggerSource
      type: object
    AlertSignalContext_allOf:
      properties:
        alertId:
          description: Alert Identifier.
          example: 00000000F5000634
          type: string
      required:
      - alertId
      type: object
    MonitorsLibraryFolderResponse_allOf:
      properties:
        permissions:
          description: Aggregated permission summary for the calling user. If detailed
            permission statements are required, please call list permissions endpoint.
          example:
          - Read
          - Delete
          items:
            type: string
          type: array
        children:
          description: 'Children of the folder. NOTE: Permissions field will not be
            filled (empty list) for children.'
          items:
            $ref: '#/components/schemas/MonitorsLibraryBaseResponse'
          type: array
      required:
      - children
      - permissions
      type: object
    MonitorsLibraryFolderExport_allOf:
      properties:
        children:
          description: The items in the folder. A multi-type list of types monitor
            or folder.
          items:
            $ref: '#/components/schemas/MonitorsLibraryBaseExport'
          type: array
      type: object
    MonitorsLibraryMonitor_allOf:
      properties:
        monitorType:
          description: |-
            The type of monitor. Valid values:
              1. `Logs`: A logs query monitor.
              2. `Metrics`: A metrics query monitor.
          example: Logs
          pattern: ^(Logs|Metrics)$
          type: string
          x-pattern-message: should be either 'Logs' or 'Metrics'
        evaluationDelay:
          default: 0m
          description: The delay duration for evaluating the monitor (relative to
            current time). The timerange of monitor will be shifted in the past by
            this delay time.
          example: 5m
          type: string
        queries:
          description: All queries from the monitor.
          items:
            $ref: '#/components/schemas/MonitorQuery'
          type: array
          uniqueItems: true
        triggers:
          description: Defines the conditions of when to send notifications.
          example:
          - detectionMethod: StaticCondition
            timeRange: 15m
            triggerType: Critical
            threshold: 50
            thresholdType: GreaterThanOrEqual
            occurrenceType: ResultCount
            triggerSource: AllResults
          - detectionMethod: StaticCondition
            timeRange: 15m
            triggerType: ResolvedCritical
            threshold: 50
            thresholdType: LessThan
            occurrenceType: ResultCount
            triggerSource: AllResults
          items:
            $ref: '#/components/schemas/TriggerCondition'
          type: array
        notifications:
          default: []
          description: The notifications the monitor will send when the respective
            trigger condition is met.
          example:
          - notification:
              connectionType: Slack
              connectionId: "0000000000000005"
            runForTriggerTypes:
            - Critical
          - notification:
              connectionType: Email
              messageBody: Alert Triggered!
              recipients:
              - john@doe.com
              subject: 'Monitor Alert: {{TriggerType}} on {{SearchName}}'
              timeZone: America/Los_Angeles
            runForTriggerTypes:
            - Critical
          items:
            $ref: '#/components/schemas/MonitorNotification'
          type: array
        isDisabled:
          default: false
          description: Whether or not the monitor is disabled. Disabled monitors will
            not run, and will not generate or send notifications.
          example: false
          type: boolean
        groupNotifications:
          default: true
          description: Whether or not to group notifications for individual items
            that meet the trigger condition.
          example: true
          type: boolean
        playbook:
          default: ""
          description: Notes such as links and instruction to help you resolve alerts
            triggered by this monitor. {{Markdown}} supported. It will be enabled
            only if available for your organization. Please contact your Sumo Logic
            account team to learn more.
          example: This issue typically happens when database calls are timing out.
            Look at ServiceA's dashboard to investigate further
          maxLength: 4096
          type: string
      required:
      - monitorType
      - queries
      - triggers
      type: object
    MonitorsLibraryMonitorResponse_allOf:
      properties:
        monitorType:
          description: |-
            The type of monitor. Valid values:
              1. `Logs`: A logs query monitor.
              2. `Metrics`: A metrics query monitor.
          example: Logs
          pattern: ^(Logs|Metrics)$
          type: string
          x-pattern-message: should be either 'Logs' or 'Metrics'
        evaluationDelay:
          default: 0m
          description: The delay duration for evaluating the monitor (relative to
            current time). The timerange of monitor will be shifted in the past by
            this delay time.
          example: 5m
          type: string
        queries:
          description: All queries from the monitor.
          items:
            $ref: '#/components/schemas/MonitorQuery'
          type: array
          uniqueItems: true
        triggers:
          description: Defines the conditions of when to send notifications.
          example:
          - detectionMethod: StaticCondition
            timeRange: 15m
            triggerType: Critical
            threshold: 50
            thresholdType: GreaterThanOrEqual
            occurrenceType: ResultCount
            triggerSource: AllResults
          - detectionMethod: StaticCondition
            timeRange: 15m
            triggerType: ResolvedCritical
            threshold: 50
            thresholdType: LessThan
            occurrenceType: ResultCount
            triggerSource: AllResults
          items:
            $ref: '#/components/schemas/TriggerCondition'
          type: array
        notifications:
          default: []
          description: The notifications the monitor will send when the respective
            trigger condition is met.
          example:
          - notification:
              connectionType: Slack
              connectionId: "0000000000000005"
            runForTriggerTypes:
            - Critical
          - notification:
              connectionType: Email
              messageBody: Alert Triggered!
              recipients:
              - john@doe.com
              subject: 'Monitor Alert: {{TriggerType}} on {{SearchName}}'
              timeZone: America/Los_Angeles
            runForTriggerTypes:
            - Critical
          items:
            $ref: '#/components/schemas/MonitorNotification'
          type: array
        isDisabled:
          default: false
          description: Whether or not the monitor is disabled. Disabled monitors will
            not run, and will not generate or send notifications.
          example: false
          type: boolean
        status:
          description: |-
            The current status of the monitor. Each monitor can have one or more status values. Valid values:
              1. `Normal`: The monitor is running normally and does not have any currently triggered conditions.
              2. `Critical`: The Critical trigger condition has been met.
              3. `Warning`: The Warning trigger condition has been met.
              4. `MissingData`: The MissingData trigger condition has been met.
              5. `Disabled`: The monitor has been disabled and is not currently running.
          example: '[Normal]'
          items:
            type: string
          type: array
          uniqueItems: true
        groupNotifications:
          default: true
          description: Whether or not to group notifications for individual items
            that meet the trigger condition.
          example: true
          type: boolean
        warnings:
          additionalProperties:
            type: string
          description: Monitor manager warnings
          type: object
        playbook:
          default: ""
          description: Notes such as links and instruction to help you resolve alerts
            triggered by this monitor. {{Markdown}} supported. It will be enabled
            only if available for your organization. Please contact your Sumo Logic
            account team to learn more.
          example: This issue typically happens when database calls are timing out.
            Look at ServiceA's dashboard to investigate further
          maxLength: 4096
          type: string
      required:
      - monitorType
      - queries
      - triggers
      type: object
    AlertsLibraryFolderResponse_allOf:
      properties:
        children:
          description: 'Children of the folder. NOTE: Permissions field will not be
            filled (empty list) for children.'
          items:
            $ref: '#/components/schemas/AlertsLibraryBaseResponse'
          type: array
      required:
      - children
      type: object
    AlertsLibraryFolderExport_allOf:
      properties:
        children:
          description: The items in the folder. A multi-type list of types alert or
            folder.
          items:
            $ref: '#/components/schemas/AlertsLibraryBaseExport'
          type: array
      type: object
    AlertsLibraryAlert_allOf:
      properties:
        monitorId:
          description: The Id of the associated monitor.
          example: 000000000000003C
          type: string
        resolvedAt:
          description: The time at which the alert was resolved.
          format: date-time
          nullable: true
          type: string
        abnormalityStartTime:
          description: The time at which the incident started.
          format: date-time
          type: string
        alertType:
          description: |-
            The severity of the Alert. Valid values:
              1. `Critical`
              2. `Warning`
              3. `MissingData`
          example: Warning
          pattern: ^(Critical|Warning|MissingData)$
          type: string
          x-pattern-message: should be either 'Critical', 'Warning' or 'MissingData'
        status:
          description: |-
            The status of the Alert. Valid values:
              1. `Triggered`
              2. `Resolved`
          example: Triggered
          pattern: ^(Triggered|Resolved)$
          type: string
          x-pattern-message: should be either 'Triggered' or 'Resolved'
        monitorQueries:
          description: All queries from the monitor relevant to the alert.
          items:
            $ref: '#/components/schemas/AlertMonitorQuery'
          type: array
        triggerQueries:
          description: All queries from the monitor relevant to the alert with triggered
            time series filters.
          items:
            $ref: '#/components/schemas/AlertMonitorQuery'
          type: array
        monitorUrl:
          description: URL for this monitor's view page
          type: string
        triggerQueryUrl:
          description: A link to search with the triggering data and time range
          type: string
        triggerConditions:
          description: Trigger conditions which were breached to create this Alert.
          example:
          - detectionMethod: StaticCondition
            timeRange: 15m
            triggerType: Critical
            threshold: 50
            thresholdType: GreaterThanOrEqual
            occurrenceType: ResultCount
            triggerSource: AllResults
          - detectionMethod: StaticCondition
            timeRange: 15m
            triggerType: ResolvedCritical
            threshold: 50
            thresholdType: LessThan
            occurrenceType: ResultCount
            triggerSource: AllResults
          items:
            $ref: '#/components/schemas/TriggerCondition'
          type: array
        triggerValue:
          description: The of the query result which breached the trigger condition.
          example: 99.9
          format: double
          type: number
        monitorType:
          description: |-
            The type of monitor. Valid values:
              1. `Logs`: A logs query monitor.
              2. `Metrics`: A metrics query monitor.
          example: Logs
          pattern: ^(Logs|Metrics)$
          type: string
          x-pattern-message: should be either 'Logs' or 'Metrics'
        entityIds:
          description: One or more entity identifiers involved in this Alert.
          items:
            example: 0000000006743FDD
            maxLength: 32
            minLength: 1
            type: string
          maxItems: 10000
          minItems: 0
          type: array
        notes:
          example: High CPU is often fixed by scaling up the cluster. <link to scale
            up cluster>
          type: string
        extraDetails:
          $ref: '#/components/schemas/ExtraDetails'
        alertCondition:
          description: The condition which triggered this alert.
          example: Metric value greater than or equal to 100.0 for all of the last
            5 minutes.
          nullable: true
          type: string
      type: object
    AlertMonitorQuery_allOf:
      description: Monitor Query for the Alert.
      properties:
        isTriggerRow:
          description: Indicates whether the current row is the trigger (final) row.
          example: false
          type: boolean
      required:
      - isTriggerRow
      type: object
    ScheduledView_allOf:
      properties:
        id:
          description: Identifier for the scheduled view.
          type: string
        createdAt:
          description: Creation timestamp in UTC.
          format: date-time
          type: string
        createdByOptimizeIt:
          description: If the scheduled view is created by OptimizeIt.
          type: boolean
        error:
          description: Errors related to the scheduled view.
          type: string
        status:
          description: Status of the scheduled view.
          type: string
        totalBytes:
          description: Total storage consumed by the scheduled view.
          format: int64
          type: integer
        totalMessageCount:
          description: Total number of messages for the scheduled view.
          format: int64
          type: integer
        createdBy:
          description: Identifier of the user who created the scheduled view.
          type: string
      required:
      - id
    LookupTableDefinition_allOf:
      properties:
        name:
          description: The name of the lookup table.
          example: SampleLookupTable
          maxLength: 255
          type: string
        parentFolderId:
          description: The parent-folder-path identifier of the lookup table in the
            Library.
          example: 0000000001C41EE4
          type: string
    LookupTable_allOf:
      properties:
        id:
          description: Identifier of the lookup table as a content item.
          example: 0000000001C41EE4
          type: string
        contentPath:
          description: 'Address/path of the parent folder of this lookup table in
            content library. For example, a lookup table existing  in the personal/lookupTable
            folder for user johndoe would be: /Library/Users/johndoe@acme.com/lookupTable'
          example: /Library/Users/johndoe@acme.com/lookupTable
          type: string
        size:
          description: The current size of the lookup table in bytes
          example: 100
          format: int64
          type: integer
    Partition_allOf:
      properties:
        id:
          description: Unique identifier for the partition.
          example: "1"
          type: string
        totalBytes:
          description: Size of data in partition in bytes.
          example: 42
          format: int64
          type: integer
        isActive:
          description: This has the value `true` if the partition is active and `false`
            if it has been decommissioned.
          type: boolean
        newRetentionPeriod:
          description: If the retentionPeriod is scheduled to be updated in the future
            (i.e., if retentionPeriod is previously reduced with value of reduceRetentionPeriodImmediately
            as false), this property gives the future value of retentionPeriod while
            retentionPeriod gives the current value. retentionPeriod will take up
            the value of newRetentionPeriod after the scheduled time.
          example: 300
          format: int32
          type: integer
        indexType:
          description: This has the value `DefaultIndex`, `AuditIndex`or `Partition`
            depending upon the type of partition.
          example: Partition
          pattern: ^(DefaultIndex|AuditIndex|Partition)$
          type: string
        retentionEffectiveAt:
          description: When the newRetentionPeriod will become effective in UTC format.
          format: date-time
          type: string
        dataForwardingId:
          description: Id of the data forwarding configuration to be used by the partition.
          type: string
      required:
      - id
      - totalBytes
    ExtractionRule_allOf:
      properties:
        id:
          description: Unique identifier for the field extraction rule.
          type: string
        fieldNames:
          description: List of extracted fields from "parseExpression".
          items:
            type: string
          type: array
      required:
      - id
    ExtractionRuleDefinition_allOf:
      properties:
        enabled:
          default: true
          description: Is the field extraction rule enabled.
          type: boolean
      type: object
    UpdateExtractionRuleDefinition_allOf:
      properties:
        enabled:
          description: Is the field extraction rule enabled.
          type: boolean
      required:
      - enabled
      type: object
    DynamicRule_allOf:
      properties:
        id:
          description: Unique identifier for the dynamic parsing rule.
          example: 0000000001C41EE4
          type: string
        isSystemRule:
          description: Whether the rule has been defined by the system, rather than
            by a user.
          example: false
          type: boolean
      required:
      - id
      - isSystemRule
    CustomField_allOf:
      properties:
        fieldId:
          description: Identifier of the field.
          example: 00000000031D02DA
          type: string
        dataType:
          description: Field type. Possible values are `String`, `Long`, `Int`, `Double`,
            and `Boolean`.
          example: String
          pattern: ^(String|Long|Int|Double|Boolean)$
          type: string
          x-pattern-message: Must be `String`, `Long`, `Int`, `Double` or `Boolean`
        state:
          description: Indicates whether the field is enabled and its values are being
            accepted. Possible values are `Enabled` and `Disabled`.
          example: Enabled
          pattern: ^(Enabled|Disabled)$
          type: string
          x-pattern-message: Must be `Enabled` or `Disabled`
      required:
      - dataType
      - fieldId
      - state
      type: object
    CustomFieldUsage_allOf:
      properties:
        fieldId:
          description: Identifier of the field.
          example: 00000000031D02DA
          type: string
        dataType:
          description: Field type. Possible values are `String`, `Long`, `Int`, `Double`,
            `Boolean`.
          example: String
          pattern: ^(String|Long|Int|Double|Boolean)$
          type: string
          x-pattern-message: Must be `String`, `Long`, `Int`, `Double` or `Boolean`
        state:
          description: Indicates whether the field is enabled and its values are being
            accepted. Possible values are `Enabled` and `Disabled`.
          example: Enabled
          pattern: ^(Enabled|Disabled)$
          type: string
          x-pattern-message: Must be `Enabled` or `Disabled`
        fieldExtractionRules:
          description: An array of hexadecimal identifiers of field extraction rules
            which use this field.
          items:
            type: string
          type: array
        roles:
          description: An array of hexadecimal identifiers of roles which use this
            field in the search filter.
          items:
            type: string
          type: array
        partitions:
          description: An array of hexadecimal identifiers of partitions which use
            this field in the routing expression.
          items:
            type: string
          type: array
        collectorsCount:
          description: Total number of collectors using this field.
          example: 228
          format: int32
          type: integer
        sourcesCount:
          description: Total number of sources using this field.
          example: 228
          format: int32
          type: integer
      required:
      - dataType
      - fieldId
      - state
      type: object
    BuiltinFieldUsage_allOf:
      properties:
        fieldId:
          description: Identifier of the field.
          example: 00000000031D02DA
          type: string
        dataType:
          description: Field type. Possible values are `String`, `Long`, `Int`, `Double`,
            `Boolean`.
          example: String
          pattern: ^(String|Long|Int|Double|Boolean)$
          type: string
          x-pattern-message: Must be `String`, `Long`, `Int`, `Double` or `Boolean`
        state:
          description: Indicates whether the field is enabled and its values are being
            accepted. Possible values are `Enabled` and `Disabled`.
          example: Enabled
          pattern: ^(Enabled|Disabled)$
          type: string
          x-pattern-message: Must be `Enabled` or `Disabled`
        fieldExtractionRules:
          description: An array of hexadecimal identifiers of field extraction rules
            which use this field.
          items:
            type: string
          type: array
        roles:
          description: An array of hexadecimal identifiers of roles which use this
            field in the search filter.
          items:
            type: string
          type: array
        partitions:
          description: An array of hexadecimal identifiers of partitions which use
            this field in the routing expression.
          items:
            type: string
          type: array
      required:
      - dataType
      - fieldId
      - state
      type: object
    IngestBudget_allOf:
      properties:
        id:
          description: Unique identifier for the ingest budget.
          type: string
        usageBytes:
          description: Current usage since the last reset, in bytes.
          example: 900
          format: int64
          type: integer
        usageStatus:
          description: Status of the current usage. Can be `Normal`, `Approaching`,
            `Exceeded`, or `Unknown` (unable to retrieve usage).
          example: Approaching
          type: string
        numberOfCollectors:
          description: Number of collectors assigned to the ingest budget.
          example: 10
          format: int64
          type: integer
      required:
      - id
    IngestBudgetV2_allOf:
      properties:
        id:
          description: Unique identifier for the ingest budget.
          example: 0000000003343FDD
          type: string
        usageBytes:
          description: Current usage since the last reset, in bytes.
          example: 900
          format: int64
          type: integer
        usageStatus:
          description: Status of the current usage. Can be `Normal`, `Approaching`,
            `Exceeded`, or `Unknown` (unable to retrieve usage).
          example: Approaching
          pattern: ^(Normal|Approaching|Exceeded|Unknown)$
          type: string
          x-pattern-message: must be either `Normal`, `Approaching`, `Exceeded`, or
            `Unknown`
        createdAt:
          description: The creation timestamp in UTC of the Ingest Budget.
          format: date-time
          type: string
        createdBy:
          description: The identifier of the user who created the Ingest Budget.
          example: 0000000006743FDD
          type: string
        modifiedAt:
          description: The modified timestamp in UTC of the Ingest Budget.
          format: date-time
          type: string
        modifiedBy:
          description: The identifier of the user who modified the Ingest Budget.
          example: 0000000001243FDD
          type: string
        budgetVersion:
          description: The version of the Ingest Budget
          example: 2
          format: int32
          type: integer
      required:
      - createdAt
      - createdBy
      - id
      - modifiedAt
      - modifiedBy
      - version
    UserModel_allOf:
      properties:
        id:
          description: Unique identifier for the user.
          example: 000000000FE20FE2
          type: string
        isActive:
          description: True if the user is active.
          example: true
          type: boolean
        isLocked:
          description: This has the value `true` if the user's account has been locked.
            If a user tries to log into their account several times and fails, his
            or her account will be locked for security reasons.
          example: false
          type: boolean
        isMfaEnabled:
          description: True if multi factor authentication is enabled for the user.
          example: false
          type: boolean
        lastLoginTimestamp:
          description: Timestamp of the last login for the user in UTC. Will be null
            if the user has never logged in.
          format: date-time
          type: string
      required:
      - id
    RoleModel_allOf:
      properties:
        id:
          description: Unique identifier for the role.
          example: 0000000000E20FE3
          type: string
        systemDefined:
          description: Role is system or user defined.
          example: false
          type: boolean
      required:
      - id
    CapabilityDefinition_group:
      description: The group that the capability belongs to.
      properties:
        id:
          description: The backend name for the capability group
          example: CloudSiem
          type: string
        label:
          description: The label for the capability group
          example: Insights
          type: string
        parentId:
          description: The ID of the parent capability group
          example: Cloud Siem
          type: string
      required:
      - id
      - label
      type: object
    Folder_allOf:
      properties:
        description:
          description: The description of the folder.
          example: This is a sample folder.
          maxLength: 255
          minLength: 0
          type: string
        children:
          description: A list of the content items.
          items:
            $ref: '#/components/schemas/Content'
          type: array
      type: object
    Content_allOf:
      properties:
        id:
          description: Identifier of the content item.
          example: 000000000C1C17C6
          type: string
        name:
          description: The name of the content item.
          example: Personal
          type: string
        itemType:
          description: |-
            Type of the content item. Supported values are:
              1. Folder
              2. Search
              3. Report (for old dashboards)
              4. Dashboard (for new dashboards)
              5. Lookups
          example: Folder
          type: string
        parentId:
          description: Identifier of the parent content item.
          example: 0000000001C41EF2
          type: string
        permissions:
          description: List of permissions the user has on the content item.
          example:
          - View
          - GrantView
          - Edit
          items:
            type: string
          type: array
      required:
      - id
      - itemType
      - name
      - parentId
      - permissions
    TransformationRuleResponse_allOf:
      properties:
        id:
          description: Unique identifier for the transformation rule.
          type: string
      required:
      - id
    SaveMetricsSearchRequest_allOf:
      properties:
        parentId:
          description: Identifier of a folder to which the metrics search should be
            added.
          example: 000000000000001A
          type: string
      required:
      - parentId
      type: object
    MetricsSearchInstance_allOf:
      properties:
        id:
          description: Identifier of the metrics search.
          example: 000000000000001A
          type: string
        parentId:
          description: Identifier of the parent element in the content library, such
            as folder.
          example: 0000000000007D2B
          type: string
      required:
      - id
      type: object
    AccessKey_allOf:
      properties:
        key:
          description: The key for the created access key. This field will have values
            only in the response for an access key create request. The value will
            be an empty string while listing all keys.
          example: F9GZvb4fISxUZHM7pqHCsGXGWf4OArgmt9Tz8ewZ
          type: string
      required:
      - key
      type: object
    SamlIdentityProvider_allOf:
      properties:
        id:
          description: Unique identifier of the SAML Identity Provider.
          example: 00000000361130F7
          type: string
        assertionConsumerUrl:
          default: ""
          description: The URL on Sumo Logic where the IdP will redirect to with its
            authentication response.
          example: https://service.sumologic.com/sumo/saml/consume/9483922
          type: string
        entityId:
          default: ""
          description: A unique identifier that is the intended audience of the SAML
            assertion.
          example: https://service.sumologic.com/sumo/saml/9483922
          type: string
      required:
      - id
    ArchiveJob_allOf:
      properties:
        id:
          description: The unique identifier of the ingestion job.
          example: 4e214571-cf27-4114-93e6-69a98c017f3
          type: string
        totalObjectsScanned:
          description: The total number of objects scanned by the ingestion job.
          example: 25
          format: int64
          type: integer
        totalObjectsIngested:
          description: The total number of objects ingested by the ingestion job.
          example: 10
          format: int64
          type: integer
        totalBytesIngested:
          description: The total bytes ingested by the ingestion job.
          example: 100
          format: int64
          type: integer
        status:
          description: The status of the ingestion job, either `Pending`,`Scanning`,`Ingesting`,`Failed`,
            or `Succeeded`.
          example: Scanning
          type: string
        createdAt:
          description: The creation timestamp in UTC of the ingestion job.
          format: date-time
          type: string
        createdBy:
          description: The identifier of the user who created the ingestion job.
          example: 0000000006743FDD
          type: string
      required:
      - createdAt
      - createdBy
      - id
      - status
      - totalBytesIngested
      - totalObjectsIngested
      - totalObjectsScanned
    LogSearchEstimatedUsageRequest_allOf:
      properties:
        timezone:
          description: |
            Time zone to get the estimated usage details. Follow the format in the [IANA Time Zone Database](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).
          example: America/Los_Angeles
          type: string
      required:
      - timezone
      type: object
    LogSearchEstimatedUsageDefinition_allOf:
      properties:
        estimatedUsageDetails:
          $ref: '#/components/schemas/EstimatedUsageDetails'
      required:
      - estimatedUsageDetails
      type: object
    LogSearchEstimatedUsageByTierDefinition_allOf:
      properties:
        estimatedUsageDetails:
          items:
            $ref: '#/components/schemas/EstimatedUsageDetailsWithTier'
          type: array
      required:
      - estimatedUsageDetails
      type: object
    Dashboard_allOf:
      properties:
        id:
          description: Unique identifier for the dashboard.
          example: B23OjNs5ZCyn5VdMwOBoLo3PjgRnJSAlNTKEDAcpuDG2CIgRe9KFXMofm2H2
          type: string
      type: object
    LogSearchQueryTimeRangeBase_allOf:
      properties:
        parsingMode:
          default: Manual
          description: |-
            Define the parsing mode to scan the JSON format log messages. Possible values are:
              1. `AutoParse`
              2. `Manual`
            In AutoParse mode, the system automatically figures out fields to parse based on the search query. While in the Manual mode, no fields are parsed out automatically. For more information see [Dynamic Parsing](https://help.sumologic.com/?cid=0011).
          example: AutoParse
          type: string
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
x-tagGroups:
- name: Archive Management
  tags:
  - archiveManagement
- name: Health Events
  tags:
  - healthEvents
- name: Infrequent Data Tier
  tags:
  - logSearchesEstimatedUsage
- name: Ingest Budgets Management
  tags:
  - ingestBudgetManagementV1
- name: Ingest Budgets Management V2
  tags:
  - ingestBudgetManagementV2
- name: Library Management
  tags:
  - appManagement
  - contentManagement
  - dashboardManagement
  - folderManagement
  - lookupManagement
  - contentPermissions
- name: Metrics
  tags:
  - metricsSearchesManagement
  - transformationRuleManagement
  - metricsQuery
- name: Security Management
  tags:
  - accessKeyManagement
  - accountManagement
  - passwordPolicy
  - policiesManagement
  - samlConfigurationManagement
  - serviceAllowlistManagement
- name: Settings Management
  tags:
  - connectionManagement
  - dynamicParsingRuleManagement
  - extractionRuleManagement
  - fieldManagementV1
  - partitionManagement
  - scheduledViewManagement
- name: Tokens Management
  tags:
  - tokensLibraryManagement
- name: Users and Roles Management
  tags:
  - roleManagement
  - userManagement
- name: Monitor Management
  tags:
  - monitorsLibraryManagement
